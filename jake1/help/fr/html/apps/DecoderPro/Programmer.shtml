<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="fr">
<head>
<!-- Copyright Bob Jacobsen 2008 -->
<!-- $Id: Programmer.shtml,v 1.4 2009/03/12 22:59:03 matthewharris Exp $ -->
<!-- Translated by Blorec Hervé le 2011-10-01-->
<title>JMRI: Create a Custom DecoderPro Programmer</title>

<!-- Style -->
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="/css/default.css" media="screen">
<link rel="stylesheet" type="text/css" href="/css/print.css" media="print">
<link rel="icon" href="/images/jmri.ico" TYPE="image/png">
<link rel="home" title="Home" href="/">
<!-- /Style -->
</head>

<body>
<!--#include virtual="/Header" -->

<!--#include virtual="Sidebar" -->
<div id="mainContent">

<H1>Guide Utilisateur DecoderPro - Créer un Programmateur Personnalisé</H1>

<p>Comment puis-je créer mon propre programmateur personnalisé?</p>

<p>La réponse commence par la création d'un fichier xml dans le sous-répertoire 
«programmateurs» de la distribution JMRI. Le
contenu du fichier est décrit ci-dessous.</p>

<dl>
<dt class=left>Spécifier les éléments à afficher</dt>
<dd class=first>
<p>L'élément de base d'un volet de programmation est un "affichage". Cela signifie que
 le programmateur ne présente qu'une seule variable. Les attributs sont:
<ul>
<li><dfn>name</dfn> - (Nécessaire)
C'est le "nom standard" de la variable qui sera présenté.
<li><dfn>label</dfn> -
S'il est présent, il va être utilisé pour marquer la variable sur le volet au lieu du nom ou du nom 
standard de la variable.
<li><dfn>Layout</dfn> -
Où trouver l'étiquette en ce qui concerne le domaine éditable,
par exemple, la zône de texte. Les valeurs possibles sont "gauche", "au-dessus»,
«en dessous», «droit» , par défaut "droit .
<li><dfn>format</dfn> -
<p>Comment la variable doit être présentée. Les variables numériques peuvent être présentées comme <ul>
<li> un champ de texte éditable, qui est la valeur par défaut si rien n'est spécifié
<li><dfn>hslider</dfn> - un curseur horizontal
<li><dfn>vslider</dfn> - un curseur vertical
</ul></p>
<p>Enum variables peuvent être présentées comme
<ul>
<li> une zône de sélection, qui est la valeur par défaut si rien n'est
spécifié
<li><dfn>radiobuttons</dfn> - Chaque valeur possible est présentée comme un bouton individuel
<li><dfn>checkbox</dfn> - Une liste avec seulement deux états peut également
être présentée comme une case à cocher
<li><dfn>offradiobutton</dfn> - Un seul bouton qui donne le choix 0 pour la variable lorsqu'il est sélectionné
<li><dfn>onradiobutton</dfn> - Un seul bouton qui donne le choix 1 pour la variable lorsqu'il est sélectionné
</ul></p>
<p>Ces deux derniers peuvent être utiles pour indiquer quelles parties d'une configuration sont actives, voir 
le volet  "Tableau de vitesse"de Comprehensive.xml comme exemple.</p>
<li><dfn>tooltip</dfn> -
Vous permet de spécifier une info-bulle qui sera présentée lorsque le curseur sera à gauche sur la variable.
 S'il n'est pas présent,  l'encadré d'aide défini dans le fichier décodeur est utilisé. (Note: Ce n'est pas
 encore complètement implémenté,  mais vous devez les inclure dans vos définitions de programmateur car 
ils travailleront bientôt)
</ul>

<A name="display">
<p> Quel nom à afficher est commandé par le volet de l'attribut «NAMEFMT  et l'attribut 'label' sur 
chaque élément d'affichage (variable)
.</p></a>

<p>Les choix sont:
<ul><li>Si une étiquette est spécifiée, elle sera utilisée. Utilisez une étiquette si
 vous souhaitez un contrôle absolu sur qu'elle variable doit être appelée, quel que soit 
le fichier décodeur qui l'appelle, et que vous n'aimez pas le nom standard.
<li>Le volet  attribut NAMEFMT est "item ", auquel cas le nom de l'élément sera utilisé 
indépendamment de ce que le fichier décodeur appelle la variable. Utilisez ce que vous
 voulez est un aspect uniforme pour le volet pour tous les décodeurs. Mais soyez conscient
 que certains noms standard sont vraiment tellement générique qu'ils sont inutiles.
<li> Si le volet attribut NAMEFMT est autorisé par défaut, ou contient "mfg", le nom du fichier
 de définition de décodeur sera utilisé. Il s'agit de la forme normale, car il permet au fabricant
 d'indiquer en détail ce qu'une variable définit.
</ul></p>
</dd>

<dt class=left>Formatage</dt>
<dd>
<p>Chaque volet du programmateur se compose de lignes et/ou des colonnes (imbriquées) .
Les colonnes exposent les variables de haut en bas. Les rangées exposent les variables 
de gauche à droite. Vous pouvez les imbriquer  pour obtenir des effets différents; pour 
un exemple, voir le «Tableau de vitesse" volet du dossier Comprehensive.xml.
Il a deux colonnes, celle de gauche de chacune utilise une ligne pour mettre des curseurs
 de gauche à droite .
</p>
</dd>

<dt class=left>Éléments spéciaux</dt>
<dd>
Il y a un certain nombre d'éléments que vous pouvez utiliser pour obtenir le programmateur
 formaté exactement comme vous le souhaitez:
<ul>
<li><dfn>label</dfn> - Ajouter du texte au volet.
<li><dfn>separator</dfn> - Ajouter une ligne de séparation à un volet. S'il est inclus dans une colonne,
 ce sera une ligne de séparation horizontale. S'il est inclus dans une ligne, ce sera une ligne verticale.
<li><dfn>cvtable</dfn> - Insérer un tableau des valeurs de CV sur le volet.
Pour obtenir le droit d'espacement, etc, vous devriez probablement ne pas combiner
cela avec d'autres variables sur le même volet.
<li><dfn>fnmapping</dfn> -Afficher une grille fonction de Cartographie .Cela nécessite des variables avec
 des noms spécifiques, qui sont décrites sur un <A HREF="FnMapping.shtml"> page séparée </a>
<li><dfn>dccaddress</dfn> - Afficher une variable combinée pour l'adresse DCC. Il s'agit d'une case à 
cocher qui permet de sélectionner l'utilisation de l'adresse courte par rapport à une longue, et un 
champ de texte simple pour entrer l'adresse. Selon la façon dont la case est activée, le champ de texte
 permet de configurer l'adresse courte dans CV 1  ou adresse longue dans CV 17/18.
</ul>
</dd>

<dt class=left>Installation de votre nouveau programmateur</dt>
<dd>
<p>
Tous les fichiers .xml dans le sous-répertoire «programmateurs»  apparaîtront dans la boîte de sélection
 lorsque vous créerez un nouveau programmateur dans DecoderPro. Pour utiliser votre nouveau fichier, il
 suffit de mettre dans le sous-répertoire "programmateurs"  du répertoire "prefs"  et de le sélectionnez.
 Vous n'avez pas à redémarrer le programme, la liste est refaite à chaque fois que vous
 ouvrez une fenêtre de nouveau programmateur.

<p> Il ya une option pour présenter/masquer les volets du dossier décodeur. Si vous écrivez
 un programmateur de base, vous pouvez les cacher.</p>
</dd>

</dl>

<A name="id">
<h3>Comment les variables dans un fichier décodeur correspondent avec le fichier programmateur</h3></a>

Chaque fichier décodeur définit
<A HREF="CreateDecoder.shtml#variable"> les variables </a> qui décrivent des contrôles spécifiques dans
 le décodeur. Le fichier programmateur décrit ensuite comment les placer sur ces panneaux, de telle sorte
 que l'utilisateur puisse les trouver et les manipuler
<P>
Chaque élément "affichage" dans le fichier programmateur définit une chose à montrer.
Mais lequel? C'est contrôlé par l'attribut "name" de l'élément "display" . DecoderPro ne prend que «name »
 et regarde à travers la définition décodeur pour un élément "variable" qui a soit le même "objet"ou le 
même attribut "label.
<P>
Cela a des effets très intéressants:
<OL>
<LI>Le "nom" dans l'élément "display"  est effectivement un "nom standard", qui peut être utilisé dans
 les fichiers de définition décodeur provenant de différents constructeurs. Comme il est distinct du "label"
 sur la variable décodeur, il est possible d'avoir un fichier programmateur générique qui fonctionne pour de
 nombreux types de décodeurs différents, tout en affichant les noms des variables spécifiques. Pour en savoir 
plus, s'il vous plaît <A HREF="#display"> voir ci-dessus </a>.
<LI>
Il vous permet d'utiliser des noms très génériques pour contrôler où vont des choses un peu différentes. Par
 exemple, différents décodeurs sonores donnent différents contrôles. On pourrait avoir "pompe à air", tandis
 qu'un autre n'a pas du tout ceci, et a au lieu "Crissement de frein". Nous ne voulons pas avoir les fichiers
 programmateur contenant des milliards d'éléments "display" à maîtriser avec toutes les toutes les options possibles.
 Au lieu de cela, nous utilisons des éléments avec des noms plus génériques, comme "Option 1 Sound", pour le nom d'affichage.
<P>
La définition décodeur dispose alors d'un «label»de «pompe à air" ou que ce soit, et
un «objet» de «l'option 1 Sound". Tout correspond correctement, et
"pompe à air" apparaît sur l'écran de l'ordinateur.
</OL>
<P>


    
<!--#include virtual="/Footer" -->
</div>
</body>
</html>
