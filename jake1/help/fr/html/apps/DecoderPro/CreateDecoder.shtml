<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="fr">
<head>
<!-- Copyright Bob Jacobsen 2008 -->
<!-- $Id: CreateDecoder.shtml,v 1.5 2009/03/12 22:59:03 matthewharris Exp $ -->
 <!--Translated by Hervé Blorec le 2011/9/15 -->
<title>JMRI: DecoderPro User Guide - Creating A Custom Decoder File</title>

<!-- Style -->
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="/css/default.css" media="screen">
<link rel="stylesheet" type="text/css" href="/css/print.css" media="print">
<link rel="icon" href="/images/jmri.ico" TYPE="image/png">
<link rel="home" title="Home" href="/">
<!-- /Style -->
</head>

<body>
<!--#include virtual="/Header" -->

<!--#include virtual="Sidebar" -->
<div id="mainContent">


<H2>DecoderPro Guide Utilisateur - Création d'un fichier décodeur personnalisé</h2>

<p>Cette page fournit un peu d'information sur la méthode de travaille des fichiers de configurations pour le Programmateur Symbolique DecoderPro.</p>

<p>Dans ce guide utilisateur, nous allons cheminer à travers le processus de création d'un fichier pour un nouveau décodeur. Vous pourrez tirer bénéfice de la lecture des autres sections de ce guide utilisateur DecoderPro pour obtenir des informations de fond, spécialement sur l'introduction XML et la section sur ce que contiennent les fichier de configurations.</p>

<p>La meilleur méthode pour créer un fichier de configuration est de modifier un existant. Dans cette section nous allons utiliser cette méthode.</p>

<dl>
<dt class=left>Faites une copie d'un fichier existant.</dt>
<dd class=first>
<p>Bien que vous puissiez appeler votre fichier comme bon vous semble, il travaillera mieux si vous utilisez les mêmes conventions que les fichiers fourni.
C'est <TT>"manufacturer name"_"decoder family".xml</TT>, par exemple:
<TT>Digitrax_1x2.xml</TT>et <TT>Atlas_DualMode.xml</TT></p>

<p>Pour les fichier fournis nous utilisons les mêmes conventions d'écriture que celles que les fabricants de décodeurs utilisent dans leurs documentations. </p>

<p>Ce nouveau fichier prendra place dans le sous-répertoire <TT>decoders</TT> dans le répertoire preferences ainsi le programme pourra le trouver. Le fichier<TT>DecoderProConfig2.xml</TT> se trouve dans le répertoire preferences, ainsi vous pouvez chercher ici pour localiser le fichier.
(Voir la <a HREF="Files.shtml#location"><em> page de configuration des fichiers</em></a>
pour plus de détails pour comment ce répertoire et ce qu'il contient.
</p>

<p>Si vous modifiez une définition de décodeur, il vaut mieux commencer avec la version la plus récente, qui peut être trouvée ici sur le site web de JMRI à
<a href="http://jmri.org/xml/decoders/">http://jmri.org/xml/decoders/</a>.
De cette façon il ne sera pas difficile de fusionner vos changements avec ceux qui pourrait avoir été fait entre temps.
SVP Ne reformater pas plus que nécessaire. Si vous changez les données techniques dans les 5 ou 10 lignes du haut, ou reformater le contenu, il sera très difficile de savoir ce qui a été changé et ce qui ne l'a pas été .

<dt class=left>Éditer le nouveau fichier </dt>
<dd>
<p>Ouvrez le nouveau fichier avec votre éditeur de texte favori.</p>

</dd>

<dt class=left>Contenu du fichier: En tête XML </dt>
<dd>
<p>Vous verrez quelque chose comme ceci en haut du fichier( les exemples viennent d'un fichier <a
HREF="../../xml/decoders/Digitrax_1x2.xml">Digitrax_1x2.xml</a>):MRI 
<p class=example>
&lt;?xml version="1.0"?&gt;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;!DOCTYPE decoder-config SYSTEM "decoder-config.dtd"&gt;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;!-- $Id: CreateDecoder.shtml,v 1.5 2009/03/12 22:59:03 matthewharris Exp $ --&gt;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;decoder-config&gt;<BR>
</p>

<p>N'oubliez pas ces lignes; elles décrivent le format du fichier.
</dd>

<dt class=left> Contenu du fichier: Auteur </dt>
<dd>
<p>L'élément suivant décrit l'auteur et la version de ce fichier de décodeur:
<p class=example>
&lt;version author="jake@physics.berkeley.edu" <br>
&nbsp;&nbsp;&nbsp;&nbsp;version="1" lastUpdated="20011201"/&gt;
</p>
<p>Ces attributs ne sont lus que par les gens, pas par le programme, ainsi leur format exact n'et pas critique. Mais nous vous encourageons à insérer votre adresse courriel dans les fichiers que vous créez ou modifiez; ainsi celui qui a une question à poser sait où vous contacter. La version et les derniers attributs mis à jour fournissent un moyen de décrire les différentes versions d'une définition de décodeur.  Pour un nouveau fichier, commencer à numéroter à "1" et si vous modifiez un fichier existant incrémenter l'attribut version au numéro suivant.</p>
</dd>

<dt class=left> Contenu du fichier: Decoder Family and Model</dt>
<dd>
Les lignes suivantes identifient la "famille" de décodeurs que ce fichier décrit:
<p class=example>
&lt;decoder&gt;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;family name="Digitrax 1x2" mfg="Digitrax"<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lowVersionID="240" highVersionID="242"<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comment="Digitrax DH142, etc" &gt;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;model model="DH142" numOuts="4" numFns="2"/&gt;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;model model="DN142" numOuts="4" numFns="2"/&gt;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;model model="DH083" numOuts="5" numFns="2"/&gt;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/family&gt;
</p>

<p>L'espacement n'est pas important, mais il est utilisé pour indenté le fichier et le rendre plus lisible. XML utilise "éléments" et "attributs" pour porter les informations. les choses &lt;model&gt; sont des éléments; les attributs comme numOuts sont fixés à des valeurs spécifiques à l'intérieur des éléments.
Dans les lignes 2 à 4 ci-dessus

<p class=example>
&lt;family name="Digitrax 1x2" mfg="Digitrax"<BR>
&nbsp;&nbsp;&nbsp;&nbsp;lowVersionID="240" highVersionID="242"<BR>
&nbsp;&nbsp;&nbsp;&nbsp;comment="Digitrax DH142, etc" &gt;
</p>

<p>L'élément est 'family', avec les attributs 'name', 'mfg',
'lowVersionID', 'highVersionID', et 'comment'.  Un attribut est une valeur donnée avec le signe égal et la valeur entre guillemets ( les guillemets sont obligatoires). L'ordre des attributs n'est pas important, et vous pouvez cassez la lignes et la reprendre si cela rends le fichier plus facile à lire. Notez que tous les attributs doivent être entre crochets et après le nom de l'élément.</p>

<p>Dans cet élément, changer les attributs pour correspondre au nouveau décodeur:
<ul>
<li><dfn>name</dfn> - le nom de la famille de décodeur. C'est mieux si vous utilisez le même nom ici que celui que vous avez utilisé pour le nom de fichier.
<li><dfn>mfg</dfn> - le fabricant du décodeur. C'est mieux si vous utilisez le même nom de fabricant ici que celui que vous avez utilisé pour le nom de fichier.
<li><dfn>lowVersionID</dfn>, <dfn>highVersionID</dfn> -
Le fabricant peut charger un numéro de version dans le CV 7 du décodeur.
Tous les fabricants ne le font pas, Mais si un est disponible, le programmateur peut vérifier si ce fichier est utilisé avec le type de décodeur attendu .Si une valeur est valide, définissez l'attribut LowVersionID, par exemple.
<p class=example>
&nbsp;&nbsp;&nbsp;&nbsp;lowVersionID="123"
</p>
Si le type de décodeur peut avoir plus d'une rangée de numéro,par exemple parce que le fabricant a fait plusieurs mise à jour, définissez les deux attributs.
Si vous ne connaissez pas le numéro de version, ne définissez pas un de ces attributs.
<li><dfn>comment</dfn> - Ceci est optionnel. Vous pouvez inclure votre nom, ou autre info au sujet du changement dans le fichier.
</ul>

<p> Les lignes suivantes:</p>

<p class=example>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;model model="DH142" numOuts="4" numFns="2"/&gt;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;model model="DN142" numOuts="4" numFns="2"/&gt;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;model model="DH083" numOuts="5" numFns="2"/&gt;
</p>
vous permettent de lister un nombre de modèle de décodeurs différents qui peuvent utiliser ce fichier. Pour un simple décodeur, enlever tout sauf un et donnez lui le nom du modèle de décodeur.  Le numOuts
et numFns sont décrit plus tard,mais pour maintenant vous pouvez les effacer, laissant quelque chose comme: </p>

<p class=example>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;model model="DH142" /&gt;
</p>

</dd>

<dt class=left> Contenu Fichier: Modes de Programmation </dt>
<dd>

<p>L'élément suivant définit quel mode de programmation est comprit par le décodeur :</p>

<p class=examp
le>
&lt;programming direct="byteOnly" paged="yes" <BR>
&nbsp;&nbsp;&nbsp;&nbsp;register="yes" ops="yes"&gt;&lt;/programming&gt;
</p>

<p>Paged, registeret  ops peuvent être régler soit à "yes" ou à "no".  Direct
peut être fixé à "no", "bitOnly", "byteOnly", ou "yes". Le 
programmateur utilise ces informations pour sélectionner le mode de programmation à utiliser pour travailler avec le décodeur.</p>
</dd>

<A name="variable">
<dt class=left> Le fichier contient:noms de Variable </dt></a>
<dd>
<p>La partie suivante du fichier consiste en un jeu d'éléments 'variable' définissant des variables spécifiques, imbriquées dans un élément 'variables'(notez le"s")
 Un exemple:</p>

<p class=example>
&lt;variables&gt;<BR>
  &nbsp;&nbsp;&lt;variable label="Short Address" CV="1" item="Primary Address" default="03"&gt;<BR>
    &nbsp;&nbsp;&nbsp;&nbsp;&lt;decVal min="1" max="127"/&gt;<BR>
  &nbsp;&nbsp;&lt;/variable&gt;<BR>
  <BR>
  &nbsp;&nbsp;(followed by more &lt;variable&gt; entries)<BR>
  <BR>
  &nbsp;&nbsp;(Insert new ones at the end)<BR>
&lt;/variables&gt;  
</p>

<p>Chaque variable représente une chose à configurer. Elle peut représenter un CV simple, exemple une adresse, ou plusieurs bits qui doivent être configurer pour contrôler une fonction particulière. Si plusieurs de celles-ci ne sont pas appropriées pour votre décodeur, vous pouvez les supprimer.Soyez sûr d'enlever l'élément entier de la &lt;variable&gt; pour correspondre à la 
&lt;/variable&gt;. Vous pouvez aussi les réarranger si vous préférez un ordre différent.</p>

<p> Les attributs incluent:
<ul>
<li><dfn>label</dfn> - Le nom pour cette variable. C'est généralement comme cela que les fabricants appellent cet élément, même si d'autres fabricants ou le NMRA utilisent un nom différent pour les mêmes choses. 
<li><dfn>item</dfn> - Un nom alternatif 'standard'. Voir la 
<A HREF="Programmer.shtml#id"> discussion sur la page des définitions de programmateur</a> 
pour plus de détails sur ceux-ci.  Généralement, regarder le programmateur Complet pour trouver quelque chose de similaire, et utilisez le "name" attribué.
<li><dfn>CV</dfn> - Quel CV contient l'information de configuration pour cette variable.
<li><dfn>mask</dfn> - Un modèle comme "XXXVVVXX" qui contrôle quels bits dans le CV met la variable up . Chaque "V" est un bit qui est inclut
, et "X" sont des bits qui ne sont pas inclus.  Il est mieux d'avoir huit caractères,comme cela nous savons où nous allons. Si la variable est un Byte complet, cette attribut peut être omit .
<li><dfn>default</dfn> - la valeur par défaut pour cette varable. C'est utilisé pour un nouveau décodeur, ou quand vous voulez remettre le décodeur à ses réglages d'usine
<li><dfn>comment</dfn> - Utilisé pour ce que vous voulez.
</ul>

<p>(Il y en a un peu plus,que nous allons quitter pour la section avancée ci-dessous)</p>
</dd>

<dt class=left> Le fichier contient: Création de nouveaux noms de Variables</dt>
<dd>
<p>Vous pouvez aussi définir de nouvelles variables. Un bon point de départ est de copier une définition similaire, changer son nom pour une nouvelle valeur et éditer son contenu.</p>

<p> Pour définir comment la nouvelle variable est affichée et éditée, vous ajoutez l'élément au sein de l'élément 'variable'. Il y a plusieurs formes possibles:
<ul>
<li>Pour une valeur décimale, vous incluez un élément decVal comme l'exemple ci-dessus. Les deux attributs possibles sont min et max, qui définissent la fourchette de valeurs acceptables. Si vous les omettez les valeurs entre 0 et 255 seront permises.
<li>Si vous préférez entrer et afficher des valeurs en hexadécimal, utilisez l'élément 'hexVal'.c'est le même que l'élément 'decVal' dont nous avons déjà discuté mais en hexa.
<li><p>Si votre décodeur supporte les adresses longues, vous pouvez ajouter un élément 'longAddress'. C'est peut être plus simple de copier depuis un autre fichier, ou depuis cet exemple:</p>

<p class=example>
&lt;variable name=&quot;Long Address&quot; CV=&quot;17&quot;&gt;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;longAddressVal/&gt;<BR>
&lt;/variable&gt;
</p>

<li><p>Si votre décodeur le supporte, vous pouvez entrer un élément 'speedTableVal'
 pour la table de vitesse.  Le seul attribut est  "entries",
qui peut être soit "28", "14" ou toute autre valeur.  Exemple:</p>

<p class=example>
&lt;variable name=&quot;Speed Table&quot; CV=&quot;67&quot;&gt;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;speedTableVal/&gt;<BR>
&lt;/variable&gt;
</p>

<li>Quelques options de décodeur sont mieux représenter par "choisir un
choix".Elles sont représentées par un élément enumVariable. Exemple:

<p class=example>
&lt;variable name=&quot;F6 during DC operation&quot; CV=&quot;13&quot; mask=&quot;XXVXXXXX&quot;&gt;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;enumVal&gt;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;enumChoice choice=&quot;Off&quot;/&gt;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;enumChoice choice=&quot;On&quot;/&gt;<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/enumVal&gt;<BR>
&lt;/variable&gt;
</p>

<p>Chaque élément Each enumChoice décrit une possibilité. Il peut en avoir autant que désiré. pour le choix d'un bit,
 vous utilisez deux éléments enumChoice comme dans l'exemple.  pour un choix de 4 bits, comme les codes FX dans les 
décodeurs  Digitrax, vous pouvez utiliser jusqu'à 16 éléments enumChoice.application and try it
Ils sont affichés dans l'ordre où ils ont été entrés dans le fichier, et sont aussi numérotés dans cet ordre. Si le premier est choisi, un 0 est entré dans les bits CV; choisir le second stocke 1; etc.</p>

<p> Si vous avez besoin de spécifier un nombre spécifique pour une option enum, ajoutez un attribut "value":
<p class=example>
&nbsp;&nbsp;&nbsp;&nbsp;&lt;enumChoice choice=&quot;Blue&quot; value=&quot;32&quot;/&gt;
</p>
</ul>

<dt class=left> Vérification des erreurs de syntaxe</dt>
<dd>
<p>A ce point, vous avez créé un nouveau fichier de configuration!</p>

<p>Vous pouvez vérifier la syntaxe en sélectionnant l'élément"Check XML file"
dans le menu "Débogage". Il ouvre un dialogue de sélection de fichier;application et essai
sélectionnez votre fichier et cliquez  "open".  Si tout est bon, vous obtenez une boite de dialogue qui dit "OK". Si non , vous obtiendrez un message d'erreur complètement incompréhensible. La seule partie utilisable de ce message est le numéro de la ligne; ouvrez un éditeur à cette ligne et essayer de trouver le problème de syntaxe.
</dd>

<dt class=left> Ajouter le fichier à l'index</dt>
<dd>
<p>Tout ce qui reste est d'entrer votre nouveau fichier dans l'index. Cet index est utilisé pour accélérer le démarrage, quand la liste des décodeurs disponibles est construite .</p>

<p>Sélectionner l'élément "Create decoder index" depuis le menu "Débogage"
</p>
</dd>
</dl>
<p>Félicitations!  Vous avez fini.  Ensuite, ouvrez l'application  programmateur et essayez la</p>
    
<!--#include virtual="/Footer" -->
</div>
</body>
</html>
