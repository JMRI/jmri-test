<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="fr">
<head>
<!-- Copyright Bob Jacobsen 2008 -->
<!-- $Id: FnMapping.shtml,v 1.1 2008/02/16 19:06:09 jacobsen Exp $ -->
<!--Translated by Hervé Blorec le 2011/10/01 -->
<title>JMRI: Function Mapping in Programmer Files</title>

<!-- Style -->
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="/css/default.css" media="screen">
<link rel="stylesheet" type="text/css" href="/css/print.css" media="print">
<link rel="icon" href="/images/jmri.ico" TYPE="image/png">
<link rel="home" title="Home" href="/">
<!-- /Style -->
</head>

<body>
<!--#include virtual="/Header" -->

<!--#include virtual="Sidebar" -->
<div id="mainContent">

<H1>JMRI: Guide Utilisateur DecoderPro  - Fonction Cartographie dans les Fichiers Programmateur</H1>

L'élément "fnmapping" fournit un moyen pratique pour afficher les bits CV utilisés pour la fonction cartographie et sorties dans un décodeur .  
<P>
Vous pouvez faire une chose similaire avec beaucoup de lignes et de colonnes dans l'affichage, mais ça représenet  beaucoup plus de travail, et l'affichage ne serait pas bien réglé.
<P>
L'élément "fnmapping" travaille en regardant les variables avec des noms comme "F2 commande sortie 1". Spécifiquement, il cherche un nom composé de trois parties:  
<OL>
<LI>Un nom de fonction.  Ce peut êtree "Fn" ou "Fnn", où n est un nombre décimal.
Deux noms spéciaux pour F0 sont aussi reconnus : "FL(f)" et "FL(r)"
<LI>La chaine de caractères exacte" controls output ".  Notez les espaces!
<LI>un numéro décimal de sortie.
</OL>
<P>
Après avoir trouvé toutes les variables correspondantes dans le fichier de configuration, L'élément "fnmapping" crée une grille rectangulaire pour les afficher.
<P>
Dans le contexte d'un élément fnmapping, les variables ont plusieurs attributs et éléments utiles:
<ul>
<LI>Default - Peut être utilisé pour mettre les valeurs par défaut. Ceci est particulièrement utile pour des variables constantes (en lecture seulement),comme autrement elles n'ont aucune autre valeur utile.
<LI>minOut - Fixe le nombre minimum de sorties que le décodeur a besoin d'avoir défini avant que cette variable soit effective.  Ainsi les décodeurs de la même famille ont souvent un nombre de fils de sorties différent, ceci permet un fichier de configuration simple pour gérer de multiples décodeurs.  (voir ci-dessous pour un exemple)
<LI>minFn - similaire à minOut, mais travaillant sur le nombre de fonctions auquelles le décodeur répond.  Ce n'est généralement pas très utile..
<LI>constant - c'est un élément, pas un attribut, qui vous permet de définir une variable comme ayant une valeur constante que l'utilisateur ne peut pas changert. Un exemple d'utilisation de cette option pour afficher
une carte fixe est affichée ci-dessous.
</ul>
<h2>Exemple de Cartographie</h2>
Ces exemples sont pris depuis le fichier de définition de décodeur  
<A HREF="../../xml/decoders/Digitrax_01x3.xml">Digitrax_01x3.xml</a>.
<P>
Le bloc de définitions pour la fonction zéro dans la direction avant est comme suit:
<PRE>
		&lt;variable label="FL(f) controls output 1" CV="33" mask="XXXXXXXV" minOut="1" default="1"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="FL(f) controls output 2" CV="33" mask="XXXXXXVX" minOut="2"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="FL(f) controls output 3" CV="33" mask="XXXXXVXX" minOut="3"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="FL(f) controls output 4" CV="33" mask="XXXXVXXX" minOut="4"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="FL(f) controls output 5" CV="33" mask="XXXVXXXX" minOut="5"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="FL(f) controls output 6" CV="33" mask="XXVXXXXX" minOut="6"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="FL(f) controls output 7" CV="33" mask="XVXXXXXX" minOut="7"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="FL(f) controls output 8" CV="33" mask="VXXXXXXX" minOut="8"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
</PRE>

Notez que l'attribut "minOut"  assure que seule les fonctions actuellement définies comme présentes sont affichées.  
<P><PRE>
Le bloc similaire de définitions pour la fonction deux configure un CV différent, mais qui sont autrement très similaires:
		&lt;variable label="F2 controls output 1" CV="36" mask="XXXXXXXV" minOut="1" minFn="2"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="F2 controls output 2" CV="36" mask="XXXXXXVX" minOut="2" minFn="2"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="F2 controls output 3" CV="36" mask="XXXXXVXX" minOut="3" minFn="2"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="F2 controls output 4" CV="36" mask="XXXXVXXX" minOut="4" minFn="2" default="1"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="F2 controls output 5" CV="36" mask="XXXVXXXX" minOut="5" minFn="2"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="F2 controls output 6" CV="36" mask="XXVXXXXX" minOut="6" minFn="2"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="F2 controls output 7" CV="36" mask="XVXXXXXX" minOut="7" minFn="2"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="F2 controls output 8" CV="36" mask="VXXXXXXX" minOut="8" minFn="2"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
</PRE>
La seule nouvelle chose est l'utilisation de l'attribut "minFn".

Ceci est utile quand une famille de décodeur supporte différents nombres de fonctions (pas de sorties) dans des modèles de décodeurs différents.
<P>
Comme vous allez vers les numéros de fonctions plus élévés, la cartographie NMRA entre les bits dans les CVs et le numéro de sortie change.  Vous pouvez voir ceci en regardant un exemple de la façon dont la fonction dix est cartographiée pour les sorties 7 à 14:
<PRE>
		&lt;variable label="F10 controls output 7" CV="44" mask="XXXXXXXV" minOut="7" minFn="10"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="F10 controls output 8" CV="44" mask="XXXXXXVX" minOut="8" minFn="10"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="F10 controls output 9" CV="44" mask="XXXXXVXX" minOut="9" minFn="10"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="F10 controls output 10" CV="44" mask="XXXXVXXX" minOut="10" minFn="10"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="F10 controls output 11" CV="44" mask="XXXVXXXX" minOut="11" minFn="10"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="F10 controls output 12" CV="44" mask="XXVXXXXX" minOut="12" minFn="10" default="1"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="F10 controls output 13" CV="44" mask="XVXXXXXX" minOut="13" minFn="10"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
		&lt;variable label="F10 controls output 14" CV="44" mask="VXXXXXXX" minOut="14" minFn="10"&gt; &lt;enumVal&gt; 
			&lt;enumChoice choice="No"/&gt; &lt;enumChoice choice="Yes"/&gt; &lt;/enumVal&gt; &lt;/variable&gt;
</PRE>

<h2>Exemple de cartographie Fixe</h2>

Vous pourriez encore vouloir inclure les valeurs de cartographie dans un fichier de configuration, même si le décodeur n'a pas la possibilité de les changer
.  C'est un exemple de cartographie constante:
<PRE>
	&lt;!-- Define the fixed Function-Output mapping --&gt;
	&lt;constant label="FL(f) controls output 1" minOut="1" default="1" /&gt; 
	&lt;constant label="FL(r) controls output 2" minOut="2" default="1" /&gt; 
	&lt;constant label="F1 controls output 3" minOut="3" minFn="1" default="1" /&gt; 
	&lt;constant label="F2 controls output 4" minOut="4" minFn="2" default="1" /&gt; 
	&lt;constant label="F3 controls output 5" minOut="5" minFn="3" default="1" /&gt; 
	&lt;constant label="F4 controls output 6" minOut="6" minFn="4" default="1" /&gt; 
	&lt;constant label="F5 controls output 7" minOut="7" minFn="5" default="1" /&gt; 
	&lt;constant label="F6 controls output 8" minOut="8" minFn="6" default="1" /&gt; 
	&lt;constant label="F7 controls output 9" minOut="9" minFn="7" default="1" /&gt; 
	&lt;constant label="F8 controls output 10" minOut="10" minFn="8" default="1" /&gt; 
</PRE>
Elle sera affichée de la même manière que les autres cartographies, exceptées les cases individuelles qui seront inactives (grisées).
    
<!--#include virtual="/Footer" -->
</body>
</html>
