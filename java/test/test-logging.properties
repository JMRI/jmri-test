# Do not translate - logging configuration file for unit tests

# Configure a single handler - this is a special handler that allows us to
# perform unit tests against the logged error and warning messages
handlers=jmri.util.JUnitAppender
# Allow our handler to handle all logging - set default logging level later
# to restrict visible logging to WARNING
jmri.util.JUnitAppender.level=ALL
# Use default (ugly) JUL logging format for now
jmri.util.JUnitAppender.formatter=java.util.logging.SimpleFormatter

############################################################
# Facility specific properties.
# Provides extra control for each logger.
#
# Use the format <name>.level = <LEVEL>
# <name> is usually the class name
# <LEVEL> is one of the following (with SLF4J equivalent in paranethesis):
# SEVERE (ERROR) - highest value
# WARNING (WARN)
# INFO (INFO)
# CONFIG - no SLF4J equivalent
# FINE (DEBUG)
# FINER - no SLF4J equivalent
# FINEST (TRACE) - lowest value
# OFF - don't log anything from this logger
# ALL - log everything from this logger
############################################################

# Default global logging level. 
.level=WARNING

# Jetty server only logs above WARNING since it can be excessively verbose
org.eclipse.jetty.level=WARNING
org.eclipse.jetty.server.handler.level=WARNING
# JMDNS only logs SEVERE since even at WARNING, it gives lots of garbage
javax.jmdns.impl.DNSIncoming.level=SEVERE
javax.jmdns.impl.constants.DNSRecordClass.level=SEVERE
# Silence WARNING from NetBeans file locators, since they log WARNING about our
# fallback searches for resources
org.netbeans.core.startup.InstalledFileLocatorImpl.level=SEVERE