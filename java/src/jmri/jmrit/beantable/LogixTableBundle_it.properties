# LogixTableBundle.properties
#
# Revision $Revision: 20288 $
#
# Italian translation: Enzo Fortuna (babbo_enzo@yahoo.com )
#
# Default properties for the jmri.jmrit.LogixTableAction GUI elements

LogixSystemName = Nome Sistema Logix
LogixSystemNameHint = Immettere il nome di sistema per nuova Logix, es.IX13
LogixUserName = Nome Utente Logix
LogixUserNameHint = Immettere il nome utente per nuova Logix,  es. Controllo Segnale 2
LogixUserNameHint2 = Immettere nuovo nome Utente per Logix, es. Controllo Segnale 2
AddLogixMessage1 = Introdurre Nome Sistema e Nome Utente, quindi
AddLogixMessage2 = click su Crea Logix, e aggiungere  Condizioni.
CopyLogixMessage1 = Introdurre Nome Sistema e Nome Utente\n
CopyLogixMessage2 = per la Logix, quindi click su Copia
ConditionalSystemName = Nome Sistema Condizioni
ConditionalUserName = Nome Utente Condizioni
ConditionalUserNameHint = batti Nome Utente per le condizioni, es. Segnale 2 Rosso
OptionsMenu = Opzioni
ToolsMenu = Strumenti
SuppressWithDisable = Sopprimi Promemoria per "Salva"
EnableAll       = Abilita Tutte Logix
DisableAll      = Disabilita Tutte Logix


ColumnLabelSystemName = Nome Sistema
ColumnLabelUserName = Nome Utente
ColumnLabelRow = Riga
ColumnLabelOperator = Oper
ColumnLabelNot = Neg
ColumnLabelDescription = Stato Variabile Descrizione
ColumnLabelState = Stato
ColumnLabelTriggersCalculation = Calcolo Trigger

# Route Table
ColumnLabelInclude = Includi
ColumnLabelSetState = Scegli Stato
Set = Scelta
Toggle = Alterna

# Maintenance Dialog
ElementName = Nome Elemento
ElementNameHint = Batti il Nome Sistema o Utente di un elemento per trovare dove è nominato
ReferenceButton = Cerca Referenze
FindOrphans = Trova Oggetti Orfani
EmptyConditionals = Trova Condizioni Vuote
CrossReference = Trova Riferimenti Incrociati

TitleAddLogix = Aggiungi Logix
TitleCopyLogix = Copia Logix
TitleEditLogix = Modifica Logix
TitleEditConditional = Modifica Condizione
TitleEditAction = Modifica Azione
TitleEditVariable = Modifica Variabile
TitleLogicalExpression = Espressione Logica:
TitleAntecedentPhrase = Variabile Antecedente
TitleConsequentPhrase = Azione Conseguente 
TitleAction = Azioni

TitlePickList = Elenchi di Scelte
OpenPickListTables = Apri Tabelle Elenchi
  
ConditionalTableTitle = Condizionai (in Ordine di calcolo)
NotApplicableAbbreviation = N/A
ActionTableTitle = Azioni Conseguenti ( 'then' )
StateVariableTableTitle = Variabili Antecedenti ( 'if' )
triggerOnChange	= Esegui Azioni solo sul cambio di stato
triggerOnAny	= Esegui Azioni ogni volta che è innescata
OnTriggerToTrue	= Quando Innescata=Vero
OnTriggerToFalse= Quando Innescata=Falso
OnTrigger	= Ogni volta che è Innescata=
OnChangeToTrue 	= Quando Cambia=vero
OnChangeToFalse = Quando Cambia=Falso
OnChange = Quando Cambia
FromFile = Dal File,
After = , dopo
Seconds = secondi
to = a
onWarrant = Su Autorizzazione
onBlock = In Blocco
onPath  = Su Percorso
ValueInMemory = (Valore Memoria)
ExecJythonCmd = Comando Jython

True = Vero
False = Falso
Unknown = Sconosciuto
LogicAND = AND
LogicOR = OR
LogicNOT = NOT
LogicMixed = Misto
rowAbrev = R

LabelLogicType = Operatore Logico
TypeLogicHint = Scegli operatore logico per unire le variabili di stato per l'antecedente ('if') della condizione
LabelAntecedent = Espressione Antecedente (parte 'if' della  Condizione)
LabelAntecedentHint = Inserisci parentesi in modo che la regola soddisfi la logica desiderata
HelpButton = Aiuto
LogicHelpText1 = Mescolando AND ed OR può introdurre valuazioni ambigue. La parte antececedente\n
LogicHelpText2 = della regola è valutata da sinistra a destra, il che corrisponde a calcolare\n
LogicHelpText3 = la variabile più interna a sinistra alla variabile più esterna a destra.\n
LogicHelpText4 = Per modificare questo ordine di valutazione, inserire delle parentesi per indicare la logica
LogicHelpText5 = che si desidera. Si possono anche modificare gli Operatori da usare. La logica di valutazione
LogicHelpText6 = in modo 'Misto' è il contenuto del campo  antecedente e non \n
LogicHelpText7 = gli Operatori visualizzati nelle righe della tabella della variabile di stato.

CreateLogixButton = Crea Logix
LogixCreateButtonHint = Premi per creare una nuova Logix
DoneButton = Fatto
DoneButtonHint = premi per salvare le modifiche al Nome Utente e tornare alla tabella Logix
DeleteLogixButton = Cancella Logix
DeleteLogixButtonHint = Premi per cancellare questa Logix e tutte le sue Condizioni
CancelButton = Annulla
CancelLogixButtonHint = Premi per tornare alla tabella Logix senza modifiche
NewConditionalButton = Nuova Condizione
NewConditionalButtonHint = Premi per aprire la finestra di Creazione di una nuova Condizione
CalculateButton = Calcola
CalculateButtonHint = Premi per calcolare gli Stati della Condizione senza Azione
ReorderButton = Riordina
ReorderButtonHint = Premi e poi click nella colonna a destra nell'ordine voluto
AddVariableButton = Aggiungi Variabile di Stato
AddVariableButtonHint = Premi per aggiungere una nuova Riganella Tabella Variabile di Stato
CheckVariableButton = Controlla Variabili di Stato
CheckVariableButtonHint = Premi per valutare lo stato corrente delle Variabili
UpdateConditionalButton = Aggiorna Condizione
UpdateConditionalButtonHint = Premi per conservare le modifiche e tornare alla Modifica Logix
CancelConditionalButtonHint = Premi per tornare alla Modifica Logix senza cambiamenti
DeleteConditionalButton = Cancella Condizione
DeleteConditionalButtonHint = Premi per Cancellare questa Condizione e tornare a Modifica Logix
addActionButton = Aggiungi Azione
addActionButtonHint = Premi per aggiungere una nuova Riga alla  Tabella Azioni
UpdateButton = Aggiorna
DeleteButton = Cancella
UpdateButtonHint = Premi per mantenere le modifiche e tornare alla Modifica Condizione
CancelButtonHint = Premi per tornare a Modifica Condizione senza cambiamenti
DeleteButtonHint = Premi per cancellare e tornare a Modifica  Condizione 

NameHintTurnout = Batti il Nome dello Scambio (sistema o utente)  (es. LT12)
NameHintSensor = Batti il Nome del Sensore (sistema o utente)  (es. CS2)
NameHintSignal = Batti il Nome della testa del Segnale (sistema o utente) (es. IH34)
NameHintSignalMast = Batti il Nome del Segnale (sistema o utente) e batti Enter/Return per caricare gli aspetti
NameHintLight = Batti il Nome delle Luci (sistema o utente) (es. CL21)
NameHintRoute = Batti il Nome del Percorso (sistema o utente)
NameHintWarrant = Batti il Nome Autorizzazione (sistema o utente)
NameHintMemory = Batti il Nome Memoria (sistema o utente)
NameHintLogix = Batti il Nome Logix (sistema o utente)
NameHintOBlock = Batti il Nome OBlock (sistema o utente)
CompareHintMemory = Seleziona un operatore per paragonare i valori in memoria
CompareTypeHint = Seleziona un valore letterale o il valore in una locazione di memoria
NameHintConditional = Batti il Nome di Sistema per la Condizione(o Nome Utente se in questa Logix)
TurnoutSetHint = Seleziona Chiuso o Deviato a seconda della posizione voluta dello Scambio
SensorSetHint = Seleziona Attivo o Non Attivo a seconda di come Sensore deve essere impostato
LightSetHint = Seleziona On o Off a seconda di come impostare le Luci
SignalSetHint = Seleziona l'aspetto della Testa Segnale da impostare
SignalMastSetHint = Seleziona l'aspetto del segnale da impostare  e batti Enter/Return per caricare l'aspetto
OBlockStatusHint = Seleziona uno Stato OBlock per il Test
LockSetHint = Seleziona Blocco o Sblocco
DataHintDelayedSensor = Batti il Tempo (in secondi) di attesa prima prima di impostare il sensore
DataHintDelayedTurnout = Batti il Tempo (in secondi) to wait prima prima di impostare lo Scambio
DataHintMemory = Batti Memoria il cui valore viene confrontato
DataHintValue = Batti Valore da confrontare
DataHintSound = Batti nome del file sonoro da eseguire
DataHintScript = Batti nome dello script da eseguire
SetHintSound = Click for a file selection dialog for choosing a sound file
SetHintScript = Click for a file selection dialog for choosing a script file
DataHintTime = Enter time (hh:mm) for a 24-hour clock
NameHintFromMemory = Enter name (system or user) of Memory to be copied from
DataHintToMemory = Enter name (system or user) of Memory to receive the copied value
DataHintLightIntensity = Enter intensity percentage as an integer 0 to 100.
DataHintLightTransitionTime = Enter number of fast clock minutes to transition between 0% and 100%.
VariableTypeHint = Select type of state variable for Conditional to test
VariableStateHint = Select the state of the variable to test
VariableAspectHint = Select the Aspect of the Signal to test
ActionItemHint = Select action item for Conditional to execute
ActionOptionHint = Select when action should occur
SetHintAudio = Select action to perform
NameHintAudio = Enter Name (system or user) for AudioSource (e.g. IAS2)
SetHintJythonCmd = Enter Jython command text
DataHintTrainId = Enter a train Id from the Roster - or enter a DCC address indicating long or short e.g. 1234(L) or 10(S)
DataHintTrainName = Enter a name for the train
DataHintThrottleFactor = Enter a decimal number for the throttle setting ratio.
BlockPathsSetHint = Select the path to use
LabelTrainId = Train ID or Address
LabelTrainName = Train Name
LabelThrottleFactor = Throttle Adjustment Factor

PromptLoadMastName = (Type mast name and hit Enter)
PromptLoadSignalName = (Type signal name and hit Enter)
PromptLoadOBlockName = (Type block name and hit Enter)

ButtonOK = OK
ButtonAdd = Add
ButtonDelete = Delete
ButtonEdit = Edit
ButtonFirst = First
ButtonNext = Next
ReorderMessage = Please press First, then Next, Next,... in desired order.
ButtonCopy = Copy
ButtonMove = Move
ButtonSelect = Select
ConfirmTitle = Question
ConfirmLogixDelete = Are you sure you want to delete Logix "{0}"?
ConfirmLogixDuplicate = Logix "{0}" already exists. Do you want copy\nthe Conditionals of Logix "{1}" into "{0}"?
NameConditionalCopy = Rename the copy of Conditional "{0}" ({1})\nin Logix {2}being copied into Logix "{3}" ({4}).\nPress Cancel if you don't want to copy this conditional.
ConfirmIndirectReference = Press "YES" if at run time Memory location "{0}" will contain a valid item name for this action.\nPress "NO" if you want to enter the item name directly.\nPress "CANCEL" if you want to suppress this warning.\n

ReminderTitle = Reminder
Reminder1 = Please remember to save your Logixs to disk.  (Select\n'Store Configuration...' in File menu of Logix Table.)


# Variable State combo box states
SensorActive = Active
SensorInactive = Inactive
TurnoutClosed = Closed
TurnoutThrown = Thrown
TurnoutUnlock = Unlock
TurnoutLock = Lock
LightOn = On
LightOff = Off
StateMemoryEquals = (case sensitive) Value
StateMemoryEqualsInsensitive = (case insensitive) Value 
StateMemoryCompare = (case sensitive) Memory
StateMemoryCompareInsensitive = (case insensitive) Memory
StateSignalHeadRed = Red
StateSignalHeadYellow = Yellow
StateSignalHeadGreen = Green
StateSignalHeadDark = Signal Dark
StateSignalHeadFlashRed = Flashing Red
StateSignalHeadFlashYellow = Flashing Yellow
StateSignalHeadFlashGreen = Flashing Green
StateSignalHeadLit = Signal Head Lit
StateSignalHeadHeld = Signal Head Held
StateSignalHeadLunar = Lunar
StateSignalHeadFlashLunar = Flashing Lunar
StateSignalMastLit = Signal Mast Lit
StateSignalMastHeld = Signal Mast Held
StateRouteFree = Route Free
stateRouteOccupied = Route Occupied
StateRouteReserved = Route Allocated
StateRouteIsSet    = Route Set
StateTrainRunning  = Train Running    
StateEntryExitActive = Active
StateEntryExitInactive = Inactive

# Display Description of state variable 
TypeSensorActive = Sensor Active
TypeSensorInactive = Sensor Inactive
TypeTurnoutThrown = Turnout Thrown
TypeTurnoutClosed = Turnout Closed
TypeConditionalTrue = Conditional True
TypeConditionalFalse = Conditional False
TypeLightOn = Light On
TypeLightOff = Light Off
TypeMemoryEquals = Memory Compare to Value, Case Sensitive
TypeMemoryEqualsInsensitive = Memory Compare to Value, Case Insensitive
TypeMemoryCompare = Memory Compare to Memory, Case Sensitive
TypeMemoryCompareInsensitive = Memory Compare to Memory, Case Insensitive)
TypeFastClockRange = Fast Clock Range
TypeSignalHeadRed = Signal Head Red
TypeSignalHeadYellow = Signal Head Yellow
TypeSignalHeadGreen = Signal Head Green
TypeSignalHeadDark = Signal Head Dark
TypeSignalHeadFlashRed = Signal Head Flashing Red
TypeSignalHeadFlashYellow = Signal Head Flashing Yellow
TypeSignalHeadFlashGreen = Signal Head Flashing Green
TypeSignalHeadLit = Signal Head Lit
TypeSignalHeadHeld = Signal Head Held
TypeSignalHeadLunar = Signal Head Lunar
TypeSignalHeadFlashLunar = Signal Head Flashing Lunar
TypeWarrantRouteFree    = Free
TypeWarrantRouteOccupied = Occupied
TypeWarrantRouteAllocated = Allocated
TypeRouteIsSet  = Set
TypeTrainRunning = Running
TypeSignalMastAspectEquals = Signal Mast Aspect Equals
TypeSignalHeadAspectEquals = Signal Head Appearance Equals
TypeSignalMastLit = Signal Mast Lit
TypeSignalMastHeld = Signal Mast Held
TypeEntryExitActive = Active
TypeEntryExitInactive = Inactive

VariableOKMessage = All state variables are OK.
VariableErrorMessage = Error found, please correct and try again.
ActionOKMessage = All actions are OK.
NoActionMessage = A Condition requires at least one state variable and usually has at least one action.

FileButton = File
LabelActionItem = Action Group
LabelActionType = Action Type
LabelVariableType = Variable Type
LabelVariableState = Variable State
LabelVariableAspect = Variable Aspect
LabelLiteralValue  = Literal Value
LabelMemoryValue  = Memory Value
LabelStartTime  = Start Time
LabelEndTime    = End Time
LabelCompareOp  = Comparison Operator
LabelCompareType  = Compare as
LabelActionOption = Change Option
LabelItemName   = System / User Name
LabelActionTurnout = Turnout Position
LabelActionSensor = Sensor State
LabelActionLight = Light State
LabelActionSignal = Signal Head Appearance
LabelSignalAspect = Signal Mast Aspect
LabelActionLock = Lock State
LabelActionFile = Set File
LabelActionText = Action Data
LabelActionDescription = Action Description
LabelActionAudio = Audio Action
LabelDelayTime  = Delay Time
LabelSetTime    = Set Time
LabelSetFile    = File Name
LabelScriptCommand  = Script Command
LabelLightIntensity = Light Intensity
LabelTransitionTime = Transition Time
LabelMemoryLocation = Memory Name
LabelValue      = Value
LabelBlockPaths = Block Path
LabelBlockStatus = Block Status
LabelControlTrain = Control Command

ActionNone = None
ActionSetTurnout = Set Turnout
ActionSetSignal = Set Signal Head Appearance
ActionSetSignalHeld = Set Signal Head Held
ActionClearSignalHeld = Clear Signal Head Held
ActionSetSignalDark = Set Signal Head Dark
ActionSetSignalLit = Set Signal Head Lit
ActionTriggerRoute = Trigger Route
ActionSetSensor = Set Sensor
ActionDelayedSensor = Delayed Set Sensor
ActionResetDelayedSensor = Reset Delayed Set Sensor
ActionCancelSensorTimers = Cancel Timers for Sensor
ActionDelayedTurnout = Delayed Set Turnout
ActionResetDelayedTurnout = Reset Delayed Set Turnout
ActionCancelTurnoutTimers = Cancel Timers for Turnout
ActionSetLight = Set Light
ActionSetLightIntensity = Set Light Intensity
ActionSetLightTransitionTime = Set Light Transition Time
ActionSetMemory = Set Memory
ActionCopyMemory = Copy Memory To Memory 
ActionEnableLogix = Enable Logix
ActionDisableLogix = Disable Logix
ActionPlaySound = Play Sound File
ActionRunScript = Run Script
ActionTurnoutLock = Turnout Lock
ActionSetFastClockTime = Set Fast Clock Time
ActionStartFastClock = Start Fast Clock
ActionStopFastClock = Stop Fast Clock
ActionAllocateWarrant = Allocate Warrant Route
ActionDeallocateWarrant = Deallocate Warrant
ActionSetWarrantTurnouts = Set Route Turnouts
ActionAutoRunWarrant    = Auto Run Train
ActionManualRunWarrant  = Manually Run Train
ActionControlTrain      = Control Auto Train
ActionSetTrainId        = Set Train Id
ActionSetTrainName      = Set Train Name
ActionSetSignalMastAspect = Set Signal Mast Aspect
ActionSetThrottleFactor = Set Throttle Factor
ActionSetSignalMastHeld = Set Signal Mast Held
ActionClearSignalMastHeld = Clear Signal Mast Held
ActionSetSignalMastDark = Set Signal Mast Dark
ActionClearSignalMastDark = Clear Signal Mast Dark
ActionAllocateBlockPath = Allocate Block Path
ActionSetBlockPathTurnouts = Set BlockPath Turnouts
ActionDeallocateBlock = Deallocate Block
ActionSetBlockOutOfService = Set Block OutOfService
ActionBlockInService = Clear Block OutOfService

ActionTypeHint = Select type of action, or select None if no action is needed.

ActionControlAudio = Control Audio object
ActionJythonCommand = Execute Jython Command

AudioSourcePlay = Play
AudioSourceStop = Stop
AudioSourcePlayToggle = Toggle Play
AudioSourcePause = Pause
AudioSourceResume = Resume
AudioSourcePauseToggle = Toggle Pause
AudioSourceRewind = Rewind
AudioSourceFadeIn = Fade-in
AudioSourceFadeOut = Fade-out
AudioResetPosition = Reset Position

WarrantHalt     = Halt
WarrantResume   = Resume
WarrantAbort    = Abort

Sensor  = Sensor
Turnout = Turnout
Conditional = Conditional
Light   = Light
Memory  = Memory
SignalHead = Signal Head
SignalMast = Signal Mast
Signal  = Signal
Warrant = Warrant
WarrantRoute = Warrant Route
OBlock  = OBlock
OBlockStatus = OBlock Status
Route   = Route
Logix   = Logix
FastClock = Fast Clock
Audio   = Audio
Script  = Script
Other   = Other
EntryExit = Entry Exit

VarStateDescrpt = {0} "{1}" state is {2}
SignalHeadStateDescrpt = {0} "{1}" appearance is {2}
SignalMastStateDescrpt = {0} "{1}" aspect is {2}
MemoryValueDescrpt = {0} "{1}" {2} value "{3}"
MemoryCompareDescrpt = {0} "{1}" {2} {0} "{3}"
FastClockDescrpt = {0} range from {1} to {2}
CopyOf = Copy of {0}

actionDescrpt = {0} "{1}" state is {2}

LessThan        = Less Than
LessOrEqual     = Less Than Or Equal
Equal           = Equal
GreaterOrEqual  = Greater Than Or Equal
GreaterThan     = Greater Than

ErrorTitle = Error
Error1 = A Logix with this system name already exists.\nPlease change system name and try again.
Error3 = A Logix with this user name already exists.\nPlease change user name and try again.
Error5 = Cannot find a Logix with that system name.
Error6 = New user name is already in use. Cannot update this Logix.\nPlease change user name and try again.
Error4 = The following error occurred when activating this Logix.\n
Error7 = \nPlease correct the reference or delete the offending Conditional or Logix.
Error8 = Invalid system name, or system name not entered.\nPlease enter a valid Logix system name (e.g. IX3) and try again.
Error9  = Enter an integer (digits only) or a Memory variable containing\nan integer for the number of seconds to {0} .
Error10 = New user name is already in use. Cannot update this Conditional.\nPlease change user name and try again.
Error11 = Conditional "{0}" ({1}) is a Conditional Variable in the Conditional,\n"{2}" ({3}), of Logix, "{4}" ({5}).\nPlease remove that variable first.
Error20 = The name "{0}" does not match an existing conditional.\nPlease enter a valid conditional system name, or the user name of a conditional in this logix.
Error21 = "{1}" is not a valid appearance for Signal Head "{0}".
Error22 = The name "{0}" does not match an existing "{1}".\nPlease correct or create as required, and try again.
Error23 = Set Delayed Sensor action
Error24 = Memory variable "{0}" currently does not contain an integer value.\nThe action cannot be performed until this value is corrected! 
Error26 = Invalid time entry "{0}"\nTime must be entered in hh:mm format (e.g. 01:30, 16:00)\nfor a 24-hour clock. Please reenter in correct format, and try again. 
Error27 = Reset Delayed Set Sensor action
Error29 = Set Light Transition Time
Error30 = Duplicate user name error. Entered user name is already in use by Conditional "{0}".\nPlease enter a different user name from others in this table.
Error31 = Copy of Logix "{0}" in progress.  Please complete and try again.
Error32 = Cannot edit two Logixs at the same time. Please complete edit of Logix "{0}" and try again.
Error34 = Cannot edit two Conditionals at the same time. Please complete edit of Conditional "{0}" and try again.
Error35 = Edit conditional in progress. Please complete edit of Conditional "{0}" and try again.
Error38 = {0} is an unreasonable amount to {1}\nPlease enter a positive number of seconds less than 1 hour, and try again.
Error39 = Set Delayed Turnout action
Error40 = Light - {0} - does not support transition time.\nPlease enter a light with Transition Time or change action type, and try again.
Error41 = Reset Delayed Set Turnout action
Error42 = Set Light Intensity action
Error43 = Enter an integer (digits only) or a Memory variable containing\nan integer to Set Light Intensity.
Error45 = Light - {0} - does not have variable intensity.\nPlease enter a light with variable intensity or change action type, and try again.
Error46 = At least two Actions are needed to reorder Actions.
Error47 = Edit of State Variable in progress. Please complete and try again.
Error48 = Edit of Action in progress. Please complete edit and try again.
Error49 = LRoute Initializer antecedent cannot be edited.  (The actions may be edited)
ErrorAppearance = Select an appearance.  You must hit the Enter/Return key\nafter entering a name with the cursor in the name field.
ErrorAspect = Select an aspect.  You may need to hit the Enter/Return key\nwith the cursor in the name field.
ErrorVariableType = Select a Variable Type or Cancel.
ErrorVariableState = Select a state for this variable.

ParseError1 = Could not find expected Left argument. < {0} >
ParseError2 = Could not find expected operator. < {0} >
ParseError3 = Could not find expected Right argument. < {0} >
ParseError4 = Antecedent parsing error: Unexpected character found. < {0} > 
ParseError5 = Antecedent parsing error: All {0} rows must be used.  Row {1} is missing.
ParseError6 = Exception thrown while parsing antecedent\n
ParseError7 = Unmatched parenthesis, missing < {0} >.
ParseError8 = \nIf the above message is 'String index out of range:', the following number is the position in the antecedent where the error occurred.
ParseError9 = Unexpected operator or characters. < {0} >

WarnTitle = Warning
ButtonDisabled = Continue Disabled
ButtonEnabled = Continue Enabled
Warn1 = The last Conditional has been deleted from this Logix.
Warn2 = A Logix must have at least one Conditional to do anything useful.
Warn3 = The last State Variable has been deleted from this Conditional.\nA Conditional must have at least one State Variable to do anything useful.
Warn5 = The Conditional {0} ({1}) has no State Variables.\nA Conditional must have at least one State Variable to do anything useful.
Warn6 = A Memory action cannot be referred to indirectly through a memory location.
#Warn7 = to or from {0}
Warn8 = Conditionals in Logix "{0}" ({1}) cannot be edited.\nGo to the Sensor Group Table to edit sensor groups.
Warn9 = Conditions exist that could result in a logic loop. \n The following both trigger this Logix and are changed by it:\n
Warn10 = was disabled as requested.\nPlease remember to enable it later.
Warn11 = \nYou may deleteConditional "{0}" ({1})\nor edit it from the template window where it was created.
makeSelection = Please select an action type.
DeleteLogix = When Deleting the logix
