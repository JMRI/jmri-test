# LRouteTableBundle.properties
#
#
# Japanese properties for the jmri.jmrit.RoadTableAction GUI elements
# Translated by Sakae Akanuma <sakaeakanuma@gmail.com>

Title = LRoute\u30C6\u30FC\u30D6\u30EB
AddTitle = LRoute\u8FFD\u52A0\uFF0F\u7DE8\u96C6
SystemName = \u30B7\u30B9\u30C6\u30E0\u540D
UserName = \u30E6\u30FC\u30B6\u30FC\u540D
Type = \u30BF\u30A4\u30D7
Include = \u30A4\u30F3\u30AF\u30EB\u30FC\u30C9
SetAction = \u30A2\u30AF\u30B7\u30E7\u30F3\u3092\u30BB\u30C3\u30C8
SetTrigger = \u30C8\u30EA\u30AC\u30FC\u30B9\u30C6\u30FC\u30C8

ButtonCreate = LRoute\u8FFD\u52A0
ButtonEdit = LRoute\u7DE8\u96C6
ButtonDelete = LRoute\u524A\u9664
ButtonUpdate = LRoute\u66F4\u65B0
ButtonCancel = \u30AD\u30E3\u30F3\u30BB\u30EB

SystemNameHint = \u65B0\u898FLRoute\u306E\u30B7\u30B9\u30C6\u30E0\u540D\u3092\u5165\u529B\u3057\u3066\u4E0B\u3055\u3044, \u4F8B\uFF1AR12.
UserNameHint = \u65B0\u898FLRoute\u306E\u30E6\u30FC\u30B6\u30FC\u540D\u3092\u5165\u529B\u3057\u3066\u4E0B\u3055\u3044\u3002 e.g. \u30AF\u30EA\u30A2\u672C\u7DDA.
BasicTab = \u57FA\u672CLRoute
BasicTabHint = \u3053\u306ELRoute\u306E\u540D\u79F0
Guide1 = Tab1: Name the LRoute, select parameters from other tabs, then return here and use buttons at the bottom.
Guide2 = Tab2: Select the devices you want to control and the actions you want them to perform.
Guide3 = Tab3: Select the devices you want to use as triggers and their states to trigger the above Tab2 actions.
Guide4 = Tab4: Other LRoute parameters - Alignment sensors, scripts and sound files, locks, etc.  
Set = \u6307\u5B9A
PlaySound = \u30B5\u30A6\u30F3\u30C9\u30D5\u30A1\u30A4\u30EB\u518D\u751F:
RunScript = \u30B9\u30AF\u30EA\u30D7\u30C8\u5B9F\u884C:
SetLocks = \u30ED\u30C3\u30AF\u3092\u6307\u5B9A
Lock = \u30C8\u30EA\u30AC\u30FC\u304C\u53CD\u5FDC\u3057\u305F\u3068\u304D\u5206\u5C90\u3092\u30ED\u30C3\u30AF\u3059\u308B.

TriggerTab = \u30C8\u30EA\u30AC\u30FC/\u30B3\u30F3\u30C8\u30ED\u30FC\u30EB(\u5165\u529B)
TriggerTabHint = \u3053\u306ELRoute\u3067\u4F7F\u7528\u3059\u308B\u30C8\u30EA\u30AC\u30FC\u3092\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044\u3002
InputTitle = \u3053\u306ELRoute\u3067\u4F7F\u7528\u3059\u308B\u5165\u529B\u30C8\u30EA\u30AC\u30FC\u306E\u72B6\u614B\u3092\u9078\u629E\u3057\u3066\u4E0B\u3055\u3044\u3002
Show = \u8868\u793A
All = \u3059\u3079\u3066
Included = \u542B\u3080
MiscTab = Alignment/Locks/\u4ED6
MiscTabHint = Select script and sound files, alignment sensors, other parameters
MiscTitle = LRoute\u52D5\u4F5C\u3092\u8FFD\u52A0
LRouteType = Route Logix \u578B
NewRoute = \u65B0
NewRouteHint = All triggers and vetoes enabled in a single Conditional. 
OldRoute = \u65E7
OldRouteHint = Each trigger has a single Conditional with vetoes not enabled. 
ActionTab = \u30A2\u30AF\u30B7\u30E7\u30F3 (\u51FA\u529B)
ActionTabHint = Select Actions to include for this LRoute
OutputTitle = Select the Output Action states to set for this LRoute

PickInput = Choose Sensors, Turnouts, Lights and/or Signals for trigger variables
PickOutput = Choose Sensors, Turnouts, Lights and/or Signals for actions to set
PickAlign = Enter Sensors to indicate alignment of Sensors, Turnouts, Lights and/or Signals
Sensor = \u30BB\u30F3\u30B5\u30FC
Turnout = \u8EE2\u8F4D\u6A5F
Light = \u30E9\u30A4\u30C8
Signal = \u4FE1\u53F7\u6A5F
Conditional = \u6761\u4EF6\u4ED8

Alignment = \u5272\u308A\u4ED8\u3051
AlignSensor = \u5272\u308A\u4ED8\u3051\u3089\u308C\u305F\u30BB\u30F3\u30B5\u30FC
AlignTurnout = Turnouts Aligned
AlignLight = Lights Aligned
AlignSignal = Signals Aligned
AlignAll = \u3059\u3079\u3066\u306E\u5272\u308A\u4ED8\u3051

SetActive = \u30BB\u30F3\u30B5\u30FC\u3092\u6709\u52B9\u306B\u3059\u308B
SetInactive = \u30BB\u30F3\u30B5\u30FC\u3092\u7121\u52B9\u306B\u3059\u308B
SetToggle = Set to Toggle
SetThrown = Set Turnout Thrown
SetClosed = Set Turnout Closed
SetLightOn = \u30E9\u30A4\u30C8\u70B9\u706FSet Light On
SetLightOff = Set Light Off
SetEnable = Enable Conditional
SetDisable = Disable Conditional
SetLit = \u4FE1\u53F7\u6A5F\u70B9\u706F\u6307\u793A
SetHeld = Set Signal Held
SetClear = Clear Held Signal
SetDark = Set Signal Dark
SetRed = \u4FE1\u53F7\u3092\u8D64\u306B
SetFlashRed = Set Signal Red Flashing
SetYellow = Set Signal Yellow
SetFlashYellow = Set Signal Yellow Flashing
SetGreen = Set Signal Green
SetFlashGreen = Set Signal Green Flashing

OnChange = \u5909\u5316\u6642\u306B
OnActive = \u6709\u52B9\u6642\u306B
OnInactive = \u7121\u52B9\u6642\u306B
VetoActive = \u30A2\u30AF\u30C6\u30A3\u30D6\u6642\u7981\u6B62
VetoInactive = \u7121\u52B9\u6642\u7981\u6B62
OnThrown = \u53CD\u4F4D\u6642
OnClosed = \u5B9A\u4F4D\u6642
VetoThrown = \u53CD\u4F4D\u6642\u7981\u6B62
VetoClosed = \u5B9A\u4F4D\u6642\u7981\u6B62
OnLit = \u70B9\u706F\u6642\u306B
OnUnLit = \u6D88\u706F\u6642\u306B
VetoLit = \u70B9\u706F\u6642\u7981\u6B62
VetoUnLit = \u6D88\u706F\u6642\u7981\u6B62
OnRed = \u8D64\u70B9\u706F\u6642
OnFlashRed = \u8D64\u8272\u70B9\u6EC5\u6642
OnYellow = \u9EC4\u70B9\u706F\u6642
OnFlashYellow = \u9EC4\u8272\u70B9\u6EC5\u6642
OnGreen = \u7DD1\u70B9\u706F\u6642
OnFlashGreen = \u7DD1\u70B9\u6EC5\u6642
OnDark = \u6D88\u706F\u6642
OnHeld = \u4FDD\u6301\u6642
VetoOnRed = \u8D64\u306E\u6642\u7981\u6B62
VetoOnFlashRed = \u8D64\u70B9\u6EC5\u6642\u7981\u6B62
VetoOnYellow =  \u9EC4\u8272\u6642\u7981\u6B62
VetoOnFlashYellow = \u9EC4\u70B9\u6EC5\u6642\u7981\u6B62
VetoOnGreen = \u7DD1\u8272\u6642\u7981\u6B62
VetoOnFlashGreen = \u7DD1\u70B9\u6EC5\u6642\u7981\u6B62
VetoOnDark = \u6D88\u706F\u6642\u7981\u6B62
VetoOnHeld = \u4FDD\u6301\u6642\u7981\u6B62
VetoOnLit = \u70B9\u706F\u6642\u7981\u6B62

createInst = \u65B0\u898FLRoute\u3092\u4F5C\u6210\u3059\u308B\u306B\u306F\u3001\u5B9A\u7FA9\u3092\u5165\u529B\u3057\u3001\u300CRoute\u8FFD\u52A0\u300D\u30DC\u30BF\u30F3\u3092\u62BC\u3057\u3066\u4E0B\u3055\u3044\u3002
editInst = To edit an existing LRoute, enter system name, then click 'Edit LRoute'.
updateInst = To change this LRoute, make changes above, then click 'Update LRoute'.
cancelInst = To leave Edit mode, without changing this LRoute, click 'Cancel'.
EnterNames = \u30B7\u30B9\u30C6\u30E0\u540D\u3068\u30E6\u30FC\u30B6\u30FC\u540D\u3092\u5165\u529B\u3057\u3066\u4E0B\u3055\u3044\u3002
DuplicateUser = A Logix with this user name already exists.
DuplicateSys = A Logix with this system name already exists.
CreateHint = \u65B0\u898FLRoute using data entered above\u3092\u8FFD\u52A0
EditHint = Enter a LRoute name to edit and press
DeleteHint = Delete the LRoute in System Name
UpdateHint = Update this LRoute using the data entered above
CancelHint = Leave Edit mode without changing the LRoute

ReminderMsg = \u4FDD\u5B58\u3057\u305FLRoute\u60C5\u5831\u3092\u547C\u3073\u51FA\u3057\u307E\u3059\u3002
Reminder = \u547C\u3073\u51FA\u3057

EditDiff = \u5DEE\u5206\u3092\u7DE8\u96C6
Warn = \u8B66\u544A
TypeWarn = Action item "{0}" on Conditional "{1}" cannot be edited in LRoute.
OnChangeWarn = Action item "{0}" is triggered differently from the other actions on conditional "{1}".
TypeWarnVar = State Variable "{0}" on Conditional "{1}" cannot be edited in LRoute.
AlignWarn1 = Alignment action item "{0}" on Conditional "{1}" has an action type that cannot be edited.
AlignWarn2 = Sensors "{0} and "{1}" on Conditional "{2}" are both used for the same Alignment.
LockWarn1 = Expected "{0}" turnouts to lock on Conditional "{1}", but it has {2} action items.
LockWarn2 = Action item "{0}" on Conditional "{1}" has an action type that cannot be edited (set Lock expected).
LockWarn3 = Turnout "{0}" on Conditional "{1}" not expected to be locked.
NoAlign = There are no outputs selected for alignment sensor {0} to indicate {1}.

addErr = \u6307\u5B9A\u306ELRoute\u306F\u5B58\u5728\u3057\u307E\u305B\u3093
noAction = No unvetoed Action items are selected. Go to 'Actions' Tab.
noVars = No Control items are selected. Go to '\u30C8\u30EA\u30AC\u30FC'\u30BF\u30D6.