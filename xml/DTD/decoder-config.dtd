<!-- Defines XML documenting a DCC decoder as a component, esp. information -->
<!-- on how to program it. -->
<!-- $Id: decoder-config.dtd,v 1.9 2001-11-27 03:26:33 jacobsen Exp $ -->

<!ELEMENT decoder-config (decoder*)>
<!ATTLIST decoder-config xmlns:decoder CDATA "">

<!ELEMENT decoder (id, programming, variables)>


<!-- The id section identifies the decoder -->

<!ELEMENT id EMPTY>
<!ATTLIST id family     CDATA #REQUIRED>  <!--family name used for identification -->
<!ATTLIST id mfg       CDATA #REQUIRED>  <!-- mfg name used for identification   -->
<!ATTLIST id type      ( stationary | locomotive ) "locomotive">
<!ATTLIST id versionID CDATA "XX" >      <!-- CV07 value, default XX means any   -->
<!ATTLIST id mfgID     CDATA #REQUIRED>  <!-- CV08 value, XX means any           -->
<!ATTLIST id defnVersion CDATA #REQUIRED> <!-- version of the XML defining the decoder -->
<!ATTLIST id comment   CDATA #IMPLIED>


<!-- The programming section describes the decoders programming capabilities -->

<!ELEMENT programming EMPTY>
<!ATTLIST programming direct   ( no | yes | bitOnly | byteOnly ) "no" >  <!-- direct mode support -->
<!ATTLIST programming paged    ( no | yes ) "no" >               <!-- paged mode support -->
<!ATTLIST programming register ( no | yes ) "no" >               <!-- register mode support -->
<!ATTLIST programming ops      ( no | yes ) "no" >               <!-- operation mode support -->
<!ATTLIST programming comment   CDATA #IMPLIED>


<!-- The variables section defines the list of identified variables -->
<!-- and how they are encoded into CVs -->

<!ELEMENT variables (variable*)>

<!ELEMENT variable  (enumVal | binaryVal | 
                             decVal | hexVal | 
                             speedTableVal | longAddressVal ) >
<!ATTLIST variable name CDATA #REQUIRED>  <!-- Name used for identification -->
<!ATTLIST variable CV CDATA #REQUIRED>    <!-- CV number containing value -->
<!ATTLIST variable mask CDATA "VVVVVVVV">    <!-- mask of bits within CV -->
                                           <!-- mask is up to 16 characters long, each -->
                                           <!-- representing one bit in the result -->
                                           <!-- valid chars: -->
                                           <!--     X   not used     -->
                                           <!--     V   used bits    -->
<!ATTLIST variable readOnly  (yes | no) "no" >
<!ATTLIST variable comment   CDATA #IMPLIED>
<!ATTLIST variable stdName CDATA #IMPLIED>  <!-- "standard name" for this function if different -->
<!ATTLIST variable minFn CDATA #IMPLIED>  <!-- min number of fns in decoder for this to be valid -->
<!ATTLIST variable inOptions CDATA #IMPLIED>  <!-- variable present if any of the options are present -->

<!-- enumVal, decVal, hexval, speedTableVal, lognAddressVal are constraints on possible values -->

<!ELEMENT decVal EMPTY>
<!ATTLIST decVal min CDATA "0" >    <!-- if decimal/hex, smallest acceptable value -->
<!ATTLIST decVal max CDATA "255" >  <!-- if decimal/hex, largest acceptable value -->
<!ATTLIST decVal default CDATA #IMPLIED>

<!ELEMENT hexVal EMPTY>
<!ATTLIST hexVal min CDATA "0" >    <!-- if decimal/hex, smallest acceptable value -->
<!ATTLIST hexVal max CDATA "ff" >  <!-- if decimal/hex, largest acceptable value -->
<!ATTLIST hexVal default CDATA #IMPLIED>

<!ELEMENT enumVal (enumChoice*) >
<!ATTLIST enumVal default CDATA #IMPLIED>
<!ATTLIST enumVal comment CDATA #IMPLIED>

<!ELEMENT enumChoice EMPTY>
<!ATTLIST enumChoice choice CDATA #REQUIRED >
<!ATTLIST enumChoice comment CDATA #IMPLIED >
<!ATTLIST enumChoice value CDATA "" >

<!ELEMENT speedTableVal (speedTableEntry*) >
<!ATTLIST speedTableVal entries CDATA "28">        <!-- number of entries/CVs in table -->
<!ATTLIST speedTableVal comment CDATA #IMPLIED>

<!ELEMENT speedTableEntry EMPTY>
<!ATTLIST speedTableEntry step  CDATA #REQUIRED >
<!ATTLIST speedTableEntry value CDATA #REQUIRED >

<!ELEMENT longAddressVal EMPTY >
<!ATTLIST speedTableVal comment CDATA #IMPLIED>
