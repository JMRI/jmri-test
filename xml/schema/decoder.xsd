<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="schema2xhtml.xsl" type="text/xsl"?>

<!-- Schema for JMRI decoder definitions       -->

<!-- $Id: decoder.xsd,v 1.10 2010-03-02 07:58:02 jacobsen Exp $ -->

<!-- This schema is part of JMRI. Copyright 2009, 2010.                     -->
<!--                                                                        -->
<!-- JMRI is free software; you can redistribute it and/or modify it under  -->
<!-- the terms of version 2 of the GNU General Public License as published  -->
<!-- by the Free Software Foundation. See the "COPYING" file for a copy     -->
<!-- of this license.                                                       -->
<!--                                                                        -->
<!-- JMRI is distributed in the hope that it will be useful, but WITHOUT    -->
<!-- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or  -->
<!-- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License  -->
<!-- for more details.                                                      -->


    <!-- need variable -->
    
    <!-- not yet in proper Venetian blind form -->
    <!-- needs to share the pane type with programmer definition -->
    
    <!-- need documentation, etc -->

    <!-- need attribute restrictions -->
    <!-- need attribute defaults -->
    
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi ="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:docbook="http://docbook.org/ns/docbook"
           xmlns:jmri="http://jmri.org/xml/schema/JMRIschema"
           xsi:schemaLocation="
                http://jmri.org/xml/schema/JMRIschema http://jmri.org/xml/schema/JMRIschema.xsd
                http://docbook.org/ns/docbook http://jmri.org/xml/schema/docbook/DocBook.xsd
            "
        >

    <xs:include schemaLocation="http://jmri.org/xml/schema/types/general.xsd"/>
    <xs:import namespace='http://docbook.org/ns/docbook' schemaLocation='http://jmri.org/xml/schema/docbook/DocBook.xsd'/>

<xs:annotation>
    <xs:documentation>
      Defines the JMRI decoder definition files.
    </xs:documentation>
    <xs:appinfo>
        <jmri:usingclass configurexml="false">jmri.jmrit.decoderdefn.DecoderFile</jmri:usingclass>
        <jmri:usingclass configurexml="false">jmri.jmrit.symbolicprog.VariableTableModel</jmri:usingclass>
    </xs:appinfo>
</xs:annotation>

  <xs:complexType name="VersionType">
      <xs:attribute name="author" />
      <xs:attribute name="version" />
      <xs:attribute name="lastUpdated" />
  </xs:complexType>

  <xs:complexType name="DecoderType">
    <xs:sequence>

      <xs:element name="family" type="FamilyType" minOccurs="1" maxOccurs="1" />

      <xs:element name="programming" minOccurs="1" maxOccurs="1" >
        <xs:complexType>
          <xs:attribute name="direct" />
          <xs:attribute name="paged" />
          <xs:attribute name="register" />
          <xs:attribute name="ops" />
        </xs:complexType>
      </xs:element>

      <xs:element name="variables" type="VariablesType" minOccurs="1" maxOccurs="1" />

      <xs:element name="resets" type="ResetsType" minOccurs="0" maxOccurs="1"/>

    </xs:sequence>
  </xs:complexType>

  <xs:element name="decoder-config">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="version" type="VersionType" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="decoder" type="DecoderType" minOccurs="1" maxOccurs="1"/>
        <xs:element name="pane"    type="PaneType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>


  <xs:complexType name="FamilyType">
    <xs:sequence>

      <xs:element name="model" minOccurs="0" maxOccurs="unbounded" />

      <xs:element name="functionlabels" minOccurs="0" maxOccurs="1">
        <xs:complexType><xs:sequence>
          <xs:element name="functionlabel" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:string">
                  <xs:attribute name="num" type="xs:string"/>
                  <xs:attribute name="lockable" type="xs:string"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
        </xs:sequence></xs:complexType>
      </xs:element>

    </xs:sequence>
    <xs:attribute name="name" />
    <xs:attribute name="mfg" />
    <xs:attribute name="lowVersionID" />
    <xs:attribute name="highVersionID" />
    <xs:attribute name="type" />
    <xs:attribute name="comment" />
  </xs:complexType>

  <xs:complexType name="VariablesType">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="constant" minOccurs="0" maxOccurs="unbounded" >
        <xs:complexType>
          <xs:attribute name="label" type="xs:string" use="required"/>
          <xs:attribute name="default" type="xs:int"/>
          <xs:attribute name="comment" type="xs:string"/>
          <xs:attribute name="item" type="xs:string"/>
          <xs:attribute name="minFn" type="xs:int"/>
          <xs:attribute name="minOut" type="xs:int"/>
          <xs:attribute name="inOptions" type="xs:string"/>
        </xs:complexType>
      </xs:element>
      
      <xs:element name="iconstant" minOccurs="0" maxOccurs="unbounded" >
        <xs:complexType>
          <xs:attribute name="label" type="xs:string" use="required"/>
          <xs:attribute name="default" type="xs:int"/>
          <xs:attribute name="comment" type="xs:string"/>
          <xs:attribute name="item" type="xs:string"/>
          <xs:attribute name="minFn" type="xs:int"/>
          <xs:attribute name="minOut" type="xs:int"/>
          <xs:attribute name="inOptions" type="xs:string"/>
        </xs:complexType>
      </xs:element>
      
      <xs:element name="variable" minOccurs="0" maxOccurs="unbounded" >
        <xs:complexType>
          <xs:choice>
            <xs:element name="enumVal" >
              <xs:annotation><xs:documentation>
              A fixed set of choices is defined, each corresponding to a specific value
              </xs:documentation></xs:annotation>
              <xs:complexType>
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                  <xs:element name="enumChoice" >
                    <xs:complexType>
                      <xs:attribute name="choice" type="xs:string" use="required"/>
                      <xs:attribute name="value" type="xs:int" />
                      <xs:attribute name="comment" type="xs:string"/>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute name="comment" type="xs:string"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="decVal" >
              <xs:annotation><xs:documentation>
              A decimal value is used, subject to mask and limit requirements
              </xs:documentation></xs:annotation>
              <xs:complexType>
                <xs:attribute name="min" type="xs:int" default="0"/>
                <xs:attribute name="max" type="xs:int" default="255"/>
                <xs:attribute name="comment" type="xs:string"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="hexVal" >
              <xs:annotation><xs:documentation>
              A hexadecimal value is used, subject to mask and limit requirements
              </xs:documentation></xs:annotation>
              <xs:complexType>
                <xs:attribute name="min" type="xs:string" default="0"/>
                <xs:attribute name="max" type="xs:string" default="ff"/>
                <xs:attribute name="comment" type="xs:string"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="speedTableVal" >
              <xs:annotation><xs:documentation>
              NMRA speed table
              </xs:documentation></xs:annotation>
              <xs:complexType>
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                  <xs:element name="speedTableEntry" >
                    <xs:complexType>
                      <xs:attribute name="step" type="xs:int" use="required" />
                      <xs:attribute name="value" type="xs:int" use="required"  />
                      <xs:attribute name="comment" type="xs:string"/>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute name="entries" type="xs:int" default="28" />
                <xs:attribute name="min" type="xs:int" default="0"/>
                <xs:attribute name="max" type="xs:int" default="255"/>
                <xs:attribute name="comment" type="xs:string"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="longAddressVal" >
              <xs:annotation><xs:documentation>
              NMRA long address, including its unique behaviors
              </xs:documentation></xs:annotation>
              <xs:complexType>
                <xs:attribute name="comment" type="xs:string"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="shortAddressVal" >
              <xs:annotation><xs:documentation>
              NMRA short address, including its unique behaviors
              </xs:documentation></xs:annotation>
              <xs:complexType>
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                  <xs:element name="shortAddressChanges" >
                    <xs:complexType>
                      <xs:attribute name="cv" type="xs:int" use="required" />
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute name="comment" type="xs:string"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="splitVal" >
              <xs:annotation><xs:documentation>
              A decimal value, but stored across two CVs using some simple calculations
              </xs:documentation></xs:annotation>
              <xs:complexType>
                <xs:attribute name="highCV" type="xs:int"/>
                <xs:attribute name="min" type="xs:int" default="0"/>
                <xs:attribute name="max" type="xs:int" default="255"/>
                <xs:attribute name="default" type="xs:int"/>
                <xs:attribute name="factor" type="xs:int" default="1"/>
                <xs:attribute name="offset" type="xs:int" default="0"/>
                <xs:attribute name="comment" type="xs:string"/>
                <xs:attribute name="upperMask" type="xs:string" default="VVVVVVVV" />
              </xs:complexType>
            </xs:element>
            <xs:element name="compositeVal" >
              <xs:annotation><xs:documentation>
              A value made up of references to others
              </xs:documentation></xs:annotation>
              <xs:complexType>
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                  <xs:element name="compositeChoice" >
                    <xs:complexType>
                      <xs:sequence minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="compositeSetting" >
                          <xs:complexType>
                            <xs:attribute name="label" type="xs:string" use="required"/>
                            <xs:attribute name="value" type="xs:int" use="required" />
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                      <xs:attribute name="choice" type="xs:string" use="required"/>
                      <xs:attribute name="comment" type="xs:string"/>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute name="comment" type="xs:string"/>
              </xs:complexType>
            </xs:element>
          </xs:choice>
          <xs:attribute name="label" type="xs:string" use="required"/>
          <xs:attribute name="CV" type="xs:int"/>
          <xs:attribute name="mask" type="xs:string" default="VVVVVVVV" />
          <xs:attribute name="readOnly" type="yesNoType" default="no" />
          <xs:attribute name="infoOnly" type="yesNoType" default="no" />
          <xs:attribute name="opsOnly" type="yesNoType" default="no" />
          <xs:attribute name="writeOnly" type="yesNoType" default="no" />
          <xs:attribute name="default" type="xs:string"/>
          <xs:attribute name="comment" type="xs:string"/>
          <xs:attribute name="item" type="xs:string"/>
          <xs:attribute name="minFn" type="xs:int"/>
          <xs:attribute name="minOut" type="xs:int"/>
          <xs:attribute name="inOptions" type="xs:string"/>
          <xs:attribute name="tooltip" type="xs:string"/>
          <xs:attribute name="include" type="xs:string"/>
          <xs:attribute name="exclude" type="xs:string"/>
        </xs:complexType>
      </xs:element>
      
      <xs:element name="ivariable" minOccurs="0" maxOccurs="unbounded" >
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="1">
              <xs:choice>
                <xs:element name="ienumVal" >
                  <xs:complexType>
                    <xs:sequence minOccurs="0" maxOccurs="unbounded">
                      <xs:element name="ienumChoice" minOccurs="0" maxOccurs="unbounded" >
                        <xs:complexType>
                          <xs:attribute name="choice" type="xs:string"/>
                          <xs:attribute name="value" type="xs:int"/>
                          <xs:attribute name="include" type="xs:string"/>
                        </xs:complexType>
                      </xs:element>
                    </xs:sequence>
                    <xs:attribute name="comment" type="xs:string"/>
                  </xs:complexType>
                </xs:element>
                <xs:element name="indexedVal" >
                  <xs:complexType>
                    <xs:attribute name="min" type="xs:string"/>
                    <xs:attribute name="max" type="xs:string"/>
                    <xs:attribute name="comment" type="xs:string"/>
                  </xs:complexType>
                </xs:element>
                <xs:element name="indexedPairVal" >
                <xs:complexType>
                    <xs:attribute name="highCVname" type="xs:string"/>
                    <xs:attribute name="min" type="xs:string"/>
                    <xs:attribute name="max" type="xs:string"/>
                    <xs:attribute name="default" type="xs:string"/>
                    <xs:attribute name="factor" type="xs:string"/>
                    <xs:attribute name="offset" type="xs:string"/>
                    <xs:attribute name="comment" type="xs:string"/>
                    <xs:attribute name="upperMask" type="xs:string"/>
                  </xs:complexType>
                </xs:element>
              </xs:choice>
              <xs:element name="qualifier" type="QualifierType" minOccurs="0" maxOccurs="1" >
                <xs:annotation><xs:documentation>
                Qualifies whether this variable will appear in the interface, depending
                on the value in other variables.
                </xs:documentation></xs:annotation>
              </xs:element>
          </xs:sequence>
          <xs:attribute name="label" type="xs:string"/>
          <xs:attribute name="CVname" type="xs:string"/>
          <xs:attribute name="CV" type="xs:int"/>
          <xs:attribute name="PI" type="xs:int"/>
          <xs:attribute name="SI" type="xs:int"/>
          <xs:attribute name="mask" type="xs:string"/>
          <xs:attribute name="readOnly" type="yesNoType"/>
          <xs:attribute name="infoOnly" type="yesNoType"/>
          <xs:attribute name="opsOnly" type="yesNoType"/>
          <xs:attribute name="writeOnly" type="yesNoType"/>
          <xs:attribute name="default" type="xs:int"/>
          <xs:attribute name="comment" type="xs:string"/>
          <xs:attribute name="item" type="xs:string"/>
          <xs:attribute name="minFn" type="xs:int"/>
          <xs:attribute name="minOut" type="xs:int"/>
          <xs:attribute name="inOptions" type="xs:string"/>
          <xs:attribute name="tooltip" type="xs:string"/>
          <xs:attribute name="include" type="xs:string"/>
          <xs:attribute name="exclude" type="xs:string"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ResetsType">
    <xs:sequence>
      <xs:element name="factReset" minOccurs="0" maxOccurs="unbounded" >
        <xs:complexType>
          <xs:attribute name="label" type="xs:string"/>
          <xs:attribute name="CV" type="xs:string"/>
          <xs:attribute name="default" type="xs:string"/>
          <xs:attribute name="comment" type="xs:string"/>
          <xs:attribute name="item" type="xs:string"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ifactReset" minOccurs="0" maxOccurs="unbounded" >
        <xs:complexType>
          <xs:attribute name="label" type="xs:string"/>
          <xs:attribute name="CVname" type="xs:string"/>
          <xs:attribute name="CV" type="xs:string"/>
          <xs:attribute name="PI" type="xs:string"/>
          <xs:attribute name="SI" type="xs:string"/>
          <xs:attribute name="default" type="xs:string"/>
          <xs:attribute name="comment" type="xs:string"/>
          <xs:attribute name="item" type="xs:string"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="PaneType">
    <xs:choice>
      <xs:element name="row" type="PaneRowType" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="column" type="PaneColumnType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:attribute name="name" type="xs:string"/>
    <xs:attribute name="nameFmt" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="PaneRowType">
    <xs:sequence minOccurs="1" maxOccurs="unbounded">
      <xs:element name="column" type="PaneColumnType" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="label" type="LabelType" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="display" type="DisplayType" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="separator" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="indxcvtable" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PaneColumnType">
    <xs:sequence minOccurs="1" maxOccurs="unbounded">
      <xs:element name="row" type="PaneRowType" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="label" type="LabelType" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="display" type="DisplayType" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="separator" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="indxcvtable" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LabelType">
    <xs:attribute name="label" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="DisplayType">
    <xs:attribute name="item" type="xs:string"/>
    <xs:attribute name="label" type="xs:string"/>
    <xs:attribute name="format" type="xs:string"/>
    <xs:attribute name="layout" type="xs:string"/>
    <xs:attribute name="tooltip" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="QualifierType">
    <xs:sequence minOccurs="1" maxOccurs="1">
      <xs:element name="variableref" />
      <xs:element name="relation">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="ge"/>
            <xs:enumeration value="gt"/>
            <xs:enumeration value="lt"/>
            <xs:enumeration value="le"/>
            <xs:enumeration value="eq"/>
            <xs:enumeration value="ne"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="value">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:int" />
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

</xs:schema>
