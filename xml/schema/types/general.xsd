<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="../schema2xhtml.xsl" type="text/xsl"?>

<!-- Test schema for JMRI I/O support. Not for use before JMRI 2.9.1        -->

<!-- $Id: general.xsd,v 1.8 2010-02-03 05:58:58 jacobsen Exp $ -->

<!-- This schema is part of JMRI. Copyright 2009.                           -->
<!--                                                                        -->
<!-- JMRI is free software; you can redistribute it and/or modify it under  -->
<!-- the terms of version 2 of the GNU General Public License as published  -->
<!-- by the Free Software Foundation. See the "COPYING" file for a copy     -->
<!-- of this license.                                                       -->
<!--                                                                        -->
<!-- JMRI is distributed in the hope that it will be useful, but WITHOUT    -->
<!-- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or  -->
<!-- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License  -->
<!-- for more details.                                                      -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi ="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:docbook="http://docbook.org/ns/docbook"
           xmlns:jmri="http://jmri.org/xml/schema/JMRIschema"
           xsi:schemaLocation="
                http://jmri.org/xml/schema/JMRIschema http://jmri.org/xml/schema/JMRIschema.xsd
                http://docbook.org/ns/docbook http://jmri.org/xml/schema/docbook/DocBook.xsd
            "
        >

  <xs:annotation>
    <xs:documentation>
      General types used across many JMRI XML Schema.
      Leading-capital-letter names are Complex types for e.g. elements,
      leading-lowercase are simple types for e.g. attributes and simple elements
    </xs:documentation>
  </xs:annotation>

  <xs:simpleType name="systemNameType">
    <xs:annotation>
        <xs:documentation>
          General definition of "systemName" attribute type.
          Centralized so we can later enforce naming, linking, etc.
        </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:minLength value="2"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="userNameType">
    <xs:annotation>
        <xs:documentation>
          General definition of "userName" attribute type.
          Centralized so we can later enforce naming, linking, etc.
          Zero length content not allowed, see also nullUserNameType
        </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:minLength value="2"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="nullUserNameType">
    <xs:annotation>
        <xs:documentation>
          General definition of "userName" attribute type
          that can contain zero-length content.
          Centralized so we can later enforce naming, linking, etc.
        </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:minLength value="0"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="beanNameType">
    <xs:annotation>
        <xs:documentation>
          General definition of a name, either a 
          system or user name (non-null).
          Centralized so we can later enforce naming, linking, etc.
        </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="userNameType systemNameType"/>
  </xs:simpleType>

  <xs:simpleType name="turnoutStateType">
    <xs:annotation>
        <xs:documentation>
          Provide possible states of turnouts for e.g. attributes
        </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="closed"/>
      <xs:enumeration value="thrown"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="yesNoType">
    <xs:annotation>
        <xs:documentation>
          General definition of string that's either "yes" or "no".
        </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="yes"/>
      <xs:enumeration value="no"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="trueFalseType">
    <xs:annotation>
        <xs:documentation>
          General definition of string that's either "true" or "false".
        </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="true"/>
      <xs:enumeration value="false"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="signalColorType">
    <xs:annotation>
        <xs:documentation>
          General definition of string that's a valid signal color
        </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="green"/>
      <xs:enumeration value="yellow"/>
      <xs:enumeration value="red"/>
      <xs:enumeration value="lunar"/>
      <xs:enumeration value="flashgreen"/>
      <xs:enumeration value="flashyellow"/>
      <xs:enumeration value="flashred"/>
      <xs:enumeration value="flashlunar"/>
      <xs:enumeration value="dark"/>
    </xs:restriction>
  </xs:simpleType>


  <xs:simpleType name="commentType">
    <xs:annotation>
        <xs:documentation>
          General definition of "comment" element found in many others.
          This a comment that's loaded to and from the program, not
          documentation of the instance file.
        </xs:documentation>
        <xs:appinfo>
            <jmri:usingclass configurexml="no" /> <!-- not yet centralized -->
        </xs:appinfo>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>
  
</xs:schema>
