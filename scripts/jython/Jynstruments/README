This folder contains Jynstruments sorted by the place they extend.


***********************
* What's a Jynstrument?
***********************
A Jynstrument is a bundle of Jython code and other resources packaged in a a .jyn folder.
They're intended to extend the UI of JMRI and to be easily customizable by advanced end users without modifying the Java JMRI code.

For example a XYZ Jynstrument would look like this:
XYZ.jyn folder containing a XYZ.py file in which is defined a XYZ class derived from the jmri.util.jynstrument.Jynstrument class.
	
The Light.jyn Jynstrument is a good starting point, it simply adds a control to Function 0 for a Throttle.

To use it simply drag'n drop the Light.jyn folder into a JMRI Throttle control window.



****************************
* How to write a Jynstrument?
*****************************
Jynstrument must override the following methods:

	public abstract String getExpectedContextClassName();
		Return a string indicating the class that shall be used as context. (java.lang.Object will open all doors)
			
	public abstract void init();
		This method will be called by instrumented class once all Jynstrument has been instantiated and internally initiated.
	
	public abstract void quit();
		This method will be called when the Jynstrument is quiting (particularly to unregister from used listerners)
		
		
**********************************
* How to get code Jynstrumentable?
**********************************
Please see class jmri.jmrit.throttle.ThrottleFrame code and search for #JYNSTRUMENT#