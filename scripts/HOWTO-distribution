Making a combined JMRI/DecoderPro distribution (substitute the 
release-number for M.N and M-N throughout):

( ) Copy and rename the last distribution

( ) update the specific README files in site section in cvs to include 
    any changes, esp. including updating the release name and URLs. 

( ) apps.DecoderPro.DecoderPro needs to have the version number updated.

( ) Commit all cvs source and tag "Release-App-M-N"

( ) Make the jmri.jar file - there's some flux in how to do this, but for
    now use CodeWarrior and ClassBrowser

( ) Move the jmri.jar file to the distribution folder

( ) Update the various text files from the CVS scripts module. 

( ) Create the two text README files from the site area. Change the
	creator code of README to ttxt (SimpleText)

( ) Update the xml subdirectory, removing the CVS subdirs

( ) Make sure there's a clean "prefs" directory with a clean
    "roster" subdir

( ) Any new jar files that need to be put in the lib area? If so, the app
	will have to change (next step).  Move them into the distribution lib
	area now.

( ) This step is only needed if you've changed any of the properties, classpath, etc.
    Under MacOS 9, start MRJAppBuilder.
		Properties:  Release properties
		
		(Warning - does this handle App.jar OK?)
		
		Output file:  App (in your target location; overwrite existing)
		Merge files:  (none)
    And then make the output app.  Copy that application file to the 
    release (if you didn't create it there) and update its icon.
    
    A similar thing might be needed under MacOS X; consult the work log
    for the exact setup needed. 
	   
( ) Make an opt-copy of the folder to the desktop, then into a CD.

( ) Test CD on the test machine!

( ) Test copied folder under Windows (use dropZip to create a transfer file)

( ) Create the Macintosh distribution
	( ) Create a clean copy of the folder on the desktop, with the same name
	
	( ) Drag folder onto DropStuff, which will create a file JMRI.M.N.hqx
		(Preferences should be set for Macintosh, include linefeeds, remote .sit
		suffix)

	( ) Upload Mac distribution to sourceforge home via SSH

( ) Upload original distribution folder to jmri.sourceforge.net via NiftyTelnet/SSH

( ) Make the windows & OS/2 distribution:

	( ) Start with a new copy of the distribution directory
	
	( ) Remove the Macintosh Apps and Mac-only jar files:

    	cd JMRI.M.N
    	rm Decoder\ Pro
    	rm JmriDemo
    	rm -rf DecoderProX.app
    	rm -rf JmriDemoX.app
 
   	At this point, lib should contain only:
     	collections.jar  crimson.jar  jdom-jdk11.jar  log4j.jar
   
	( ) Make a zip file

    	cd ..
    	# now above the distribution directory
    
    	zip -rl JMRI.M.N.zip JMRI.M.N
		zip JMRI.M.N.zip JMRI.M.N/*.jar JMRI.M.N/win32com.dll JMRI.M.N/lib/*.jar
	
		# the first line adds CR's, and the second replaces the .jar files so they
		# don't have CR inserted
	
( ) Make the Linux distribution from the distribution directory above:

	( ) Update permissions

    	chmod 755 JmriDemo.csh DecoderPro.csh
    
	( ) Make a .tar.gz

		tar cf JMRI.M.N.tar JMRI.M.N
		gzip JMRI.M.N.tar
	
( ) Move to distribution site via SourceForge release:

	ftp upload.sourceforge.net 
		user: ftp 
		password: me@myself.org 
		cd incoming 
		bin 
		put JMRI.M.N.zip
		put JMRI.M.N.tar.gz
		put JMRI.M.N.hqx
		
	Login to SourceForge web 
	Go to the project home page, then admin page
	Click on Edit/Release Files  & release each of the three files
	in the order:
	
		linux
		windows & OS/2
		macintosh
		
	Be sure to update the top of the release note paragraph.
	
	The release name convention is "JMRI M.N (demo | development release) for XXX"
	
	Be sure to select "preserve preformatted text"

( ) Update web page source:
	site/index.html - download links, demo release name
	site/InstallJMRI.html - download instructions
	site/demoFiles/DecoderPro.README.html - new README contents
	site/demoFiles/JmriDemo.README.html - new README contents
	
( ) commit site and update on server
	
( ) Update CVS copy

    cd cvs
    cvs -d cvs.jmri.sourceforge.net:/cvsroot/jmri update -d -r Release-App-M-N
    
( ) Create a snapshot in zip format

	cd
	zip -rl snapshot-JMRI-M-N.zip cvs
	mv snapshot-JMRI-M-N.zip htdocs/Technical/snapshots/
	
( ) Create JavaDoc
	Ensure that CW JavaDoc target has JavaDoc selected as prelinker
	Build JavaDoc target

( ) Upload JavaDoc

	Upload the Development Project:Docs folder to htdocs/Technical/

( ) Update the XML area

( ) Wait for the files to appear in the upload area

( ) News item from JMRI sourceforge page

	Title is of the form "JMRI M.N is available"

( ) mail announcement to jmri-announce@lists.sourceforge.net

( ) Decide if worth announcing elsewhere:
		MAC_DCC@yahoogroups.com
		loconet_hackers@yahoogroups.com
		digitrax@yahoogroups.com
		2 NCE groups
		
( ) Take a break!

