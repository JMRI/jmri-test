Making a distribution (substitute the release-number for M.N and M-N throughout
and the application name for App):

( ) Copy and rename the last distribution

( ) update the specific README in site section in cvs to include any changes, esp. 
    including updating the release name and URLs. 

( ) Commit all cvs source and tag "Release-App-M-N"

( ) Make sure that the "make manifest" button is pushed, then
	make the App.jar file with the App release target.

( ) Make sure that the following .jar files (and only these) have the
	merge button pushed, then
	make the AppWin95.jar file with the JMRI demo release target.
		collections.jar
		log4j.jar
		crimson.jar
		comm.jar
		jdom-jdk11.jar

( ) Move the App.jar and AppWin95.jar files to the distribution folder

( ) Update the various text files from the CVS scripts module. 

( ) Create a text README file from the site area. Change the
	creator code of README to ttxt (SimpleText)

( ) Update the xml subdirectory, removing the CVS subdirs

( ) Make sure there's a clean "prefs" directory with a clean
    "roster" subdir

( ) Any new jar files that need to be put in the lib area? If so, the app
	will have to change (next step).  Move them into the distribution lib
	area now.

( ) This step is only needed if you've changed any of the properties, classpath, etc.
    Under MacOS 9, start MRJAppBuilder.
		Properties:  Release properties
		
		(Warning - does this handle App.jar OK?)
		
		Output file:  App (in your target location; overwrite existing)
		Merge files:  (none)
    And then make the output app.  Copy that application file to the 
    release (if you didn't create it there) and update its icon.
    
    A similar thing might be needed under MacOS X; consult the work log
    for the exact setup needed. 
	   
( ) Make an opt-copy of the folder to the desktop, then into a CD.

( ) Test CD on the test machine!

( ) Test copied folder under Windows

( ) Create the Macintosh distribution
	( ) Create a clean copy of the folder on the desktop, with the same name
	
	( ) Remove the win32com.dll, AppWin95.jar files

	( ) Drag folder onto DropStuff, which will create a file App.M.N.hqx
		(Preferences should be set for Macintosh, include linefeeds, remote .sit
		suffix)

	( ) Upload Mac distribution to sourceforge home via SSH

( ) Upload original distribution folder to jmri.sourceforge.net via NiftyTelnet/SSH

( ) Make the OS/2 distribution:

	( ) Start with a new copy of the distribution directory
	
	( ) Remove the Macintosh Apps and Mac-only jar files:

    	cd App.M.N
    	rm App
    	rm -rf App\ MacOSX.app
	
	( ) Remove the Windows-specific files

    	rm AppWin95.jar
    	rm win32com.dll
 
   	At this point, lib should contain only:
     	collections.jar  crimson.jar  jdom-jdk11.jar  log4j.jar
   
	( ) Make a zip file

    	cd ..
    	# now above the distribution directory
    
    	zip -rl App.OS2.zip App.M.N
		zip App.OS2.zip App.M.N/*.jar App.M.N/lib/*.jar
	
		# the first line adds CR's, and the second replaces the .jar files so they
		# don't have CR inserted
	
( ) Make the Linux distribution from the OS/2 distribution directory above:

	( ) Update permissions

    	chmod 755 JmriDemo.csh
    
	( ) Make a .tar.gz

		tar cf App.M.N.tar App.M.N
		gzip App.M.N.tar
	
( ) Make the Windows distribution

	( ) Start with a new copy of the uploaded folder
	
	( ) Remove the Macintosh Apps and un-merged jar files:

    	cd App.M.N
    	rm App
    	rm -rf App\ MacOSX.app
   		rm -rf lib
 		rm App.jar
 			
		At this point, only the AppWin95.jar file should exist
		   
	( ) Make a zip file

    	cd ..
    	# now above the distribution directory
    
    	zip -rl App.M.N.win.zip App.M.N
		zip App.M.N.win.zip App.M.N/*.jar App.M.N/win32com.dll
	
		# the first line adds CR's, and the second replaces the binary files so they
		# don't have CR inserted

( ) Move to distribution site via SourceForge release:

	ftp upload.sourceforge.net 
		user: ftp 
		password: me@myself.org 
		cd incoming 
		bin 
		put App.M.N.OS2.zip
		put App.M.N.win.zip
		put App.M.N.tar.gz
		put App.M.N.hqx
		
	Login to SourceForge web 
	Go to the project home page, then admin page
	Click on Edit/Release Files  & release each of the four files
	in the order:
	
		OS/2
		linux
		windows
		macintosh
		
	Be sure to update the top of the release note paragraph.
	
	The release name convention is "App M.N (demo | development release) for XXX"
	
	Be sure to select "preserve preformatted text"

( ) Update web page source:
	site/index.html - download links, demo release name
	site/InstallJMRI.html - download instructions
	site/demoFiles/README.html - new README contents
	
( ) commit site and update on server
	
( ) Update CVS copy

    cd cvs
    cvs -d cvs.jmri.sourceforge.net:/cvsroot/jmri update -r Release-0-N
    
( ) Create a snapshot in zip format

	cd
	zip -rl snapshot-App-M-N.zip cvs
	mv snapshot-App-M-N.zip htdocs/Technical/snapshots/
	
( ) Create JavaDoc
	Ensure that CW JavaDoc target has JavaDoc selected as prelinker
	Build JavaDoc target

( ) Upload JavaDoc

	Upload the Development Project:Docs folder to htdocs/Technical/

( ) Wait for the files to appear in the upload area

( ) News item from JMRI sourceforge page

	Title is of the form "App M.N is available"

( ) mail announcement to jmri-announce@lists.sourceforge.net

( ) Decide if worth announcing elsewhere:
		MAC_DCC@yahoogroups.com
		loconet_hackers@yahoogroups.com
		digitrax@yahoogroups.com
		
( ) Take a break!

