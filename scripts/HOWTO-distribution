This is the HOWTO file to make a complete SourceForge downloadable
distribution.  ($Revision: 1.73 $)

Start with a directory, typically called "Distributions", that
contains "scripts" and "java" (from CVS) as subdirectories, and:

  scripts
  ln -s java/build.xml build.xml
  ln -s scripts/dist.xml dist.xml

  Linux
  	JMRI (can be empty)
  MacOSX
  	JMRI (can be empty)

  (Windows is separate, and involves a shared disk with VPC, but
   basically all the necessary stuff is in a VPC directory)
   
This probably already exists. 

Make sure everything is up-to-date:

( ) If it's a new year, update copyright dates:
    * build.xml (2) in the javadoc instructions
    * site/Copyright.html
    * decoder index master
    * (grep -r for the previous year in the web site, xml)
    
( ) Check if the decoder definitions have changed since the previous tag
    If so, remake the decoder index. 
    Copy the new file from preferences into the CVS tree.
    Update the version number by hand.
    Make sure file is saved with Unix line ends.
    Commit.
    
( ) Update the help/en/Acknowledgements.html help page with any recent changes

( ) Check for uncommitted changes in the web site directory, 
    these can end up in help, xml, etc

( ) Check if the help has changed since the previous tag
    If so, remake the help index  (need a command line approach, so can put in ant!)
    open ~/Documents/JMRI/JavaHelpStuff/jhelpdev/jhelpdev.jar
    (navigate to JHelpDev.xml in release & open it)
    (select properties from file menu, set directory to project help/en
    (click "generate all")
    
    In that same directory, also remake the index and toc web
    pages by doing invoking ant (no argument needed).
    
    Run the program and make sure help works.
    
    Commit any changed files.
    
( ) This is a good place to check that the JavaDocs generate without errors

( ) the default.lcf file for releases is taken from Distribution/scripts/; 
    the one for normal development is from Distribution/java/.  Make sure
    the one in scripts/ is the one you want.
    
( ) Check that the Version.java file has been updated (both version
    number in two places and copyright date) and committed

( ) Edit the "manifest" file in your development directory, and make sure that the
    version number is correct in four places (this file comes from java/, not scripts/)
    
( ) Update the MacOS X bundles version numbers:

    bbedit scripts/MacOSXapps/V1/*.app/Contents/Info.plist
    (three versions, two copyright years)

    Commit back to CVS

( ) Update version numbers in Window scripts

    bbedit *.bat
    
( ) Update version numbers in Linux scripts

    bbedit DecoderPro PanelPro cornwall JmriDemo LocoTools

( ) Create the _next_ version-specific layout-config-1-2-3.dtd in xml/DTD
    and commit back to CVS; this needs to be a copy of the contents 
    of the file that's actually being released, so don't do it early!
    
( ) To ensure that you've got the HEAD of CVS, in your test area do:

    cvs -q update -dA
    
    cd Distributions/scripts
    cvs -q update -dA
    
    cd Distributions/java
    cvs -q update -dA
    
------
Add something about copyright notices on changed files
------
    
To actually create the distribution:

( ) Go to your working directory and
	cvs -Q tag -F Release-2-1-8 

( ) Create a new working directory, if you haven't already:
    
    cd <project directory>
    mkdir X-Y-Z-cand
    cd X-Y-Z-cand
    cvs co -r Release-2-1-8 all
    
    This gives it a sticky tag.  If your working directory
    already has that name, just
    
    cvs update -r Release-2-1-8
    
    to make sure it's got the tag
    
-----
Notes for next section:
    
* NOTE THAT build.xml now creates a jar file with debug info by default;
change that (temporarily) for a production release

-----

( ) Come back to Distributions and 
    cd scripts
	cvs -Q tag -F Release-2-1-8
    cd ../java
	cvs -Q tag -F Release-2-1-8
    cd ..
    
    
( ) Start the actual build!  In the Distributions directory:

	ant -f dist.xml -Drelease=Release-2-1-8 -Dnumber=2.1.8 release1
	
	Ensure tests pass
	
	Check DecoderPro for no startup errors, right version

    Ant will do the various builds, construct the distribution
    directories, and finally construct the Linux and MacOS X
    distribution files.
	
	
( ) The next few steps can be done in parallel.
	
	
** Consider making the files available for testing from the main site,
** and getting feedback from jmri-developers


( ) Upload the MacOS X and Linux files

    ant -f dist.xml -Drelease=Release-2-1-8 -Dnumber=2.1.8 -Duser.name=jacobsen release2

    (The user.name only needs to be provided if your SourceForge.net ID 
     is different than your current login ID)
     
    -----
    Older methods (don't use if above succeeds):
    
    Finder: Connect to Server
    https://frs.sourceforge.net/j/ja/jacobsen/uploads
    
    Appears as /Volumes/uploads/
    
    Then do finder copies...
    
    Or:
    
    echo put JMRI.2.1.8.dmg | sftp jacobsen@frs.sf.net:uploads
    echo put JMRI.2.1.8.tgz | sftp jacobsen@frs.sf.net:uploads
    

( ) Any time after release1 is complete, start building the Windows installer.
	
	Using VMware Fusion, make sure you have the Z disk available and that it
	contains the JMRI folder. (If not, check the "shared folders" and 
	"networking settings"; see Control menu)
	
	Launch Installer Vise from the last build file.
	
	Click "File" -> "Update archive"; Check changes make sense.
	
	If there are new _top_level_ files (e.g. *.bat), 
	    they have to be added to IV
	Click the "test archive" button (right one of the pair)
	
	Name the installer JMRI.2.1.8.exe
	
	After the installer runs, run DecoderPro from desktop icon and check.
	
	In IV, "Save as..." the VCT file as the new name
	
	Drag-copy .exe to Mac Distributions directory; name should be OK
	Drag-copy .vct to same place


( ) Any time after release1 is complete, create and upload the JavaDocs
    and XSLT'd decoder pages
    
	ant -f dist.xml -Drelease=Release-2-1-8 -Dnumber=2.1.8 release3
	
( ) When ready to upload the Windows release:
	
	ant -f dist.xml -Drelease=Release-2-1-8 -Dnumber=2.1.8 -Duser.name=jacobsen release4
		
( ) Format the release note page, change date, etc

( ) Complete all the above before continuing

( ) Login to SourceForge web using Firefox

	Go to the project home page, login, then admin page
	
	Click on Edit/Release Files  & release each of the three files
	in the order:
	
		Linux
		MacOS X
		Windows
		
	The name convention is "JMRI 2.1.8 test version for Linux"

    The note says:

The JMRI 2.1.8 test release is now available for download. 
This is the specific version for Windows users. 
For more information, please see the release note at http://jmri.sf.net/releasenotes/jmri2.1.8.shtml

    The change log says:
    
The complete list of changes is in the release note at http://jmri.sf.net/releasenotes/jmri2.1.8.shtml

	Don't select "preserve preformatted text"
	
( ) Wait until the downloads have propagated to the mirrors; check 
    by trying to download each file
    
( ) Ask JMRI-developers for a quick look _AND_ _WAIT_ _FOR_ _IT_!!

( ) Commit release note files to the web site CVS directory

( ) Update Version.java to say version is "2.1.8 custom build"

( ) Update the web site front page and downloads page
    		
( ) If the decoder definitions have changed, make a .zip file and send to:
    Hans Tanner:  hans.tanner@complexitymanager.com
    Graham Plowman: gppsoftware@gppsoftware.com

( ) Commit site and update on server
	
( ) Mail announcement to jmriusers@yahoogroups.com
    Subject is "Test version 2.1.8 of JMRI/DecoderPro is available for download"

( ) Mail announcement to jmri-announce@lists.sourceforge.net

    You'll get a moderation message via email; handle it.

( ) News item from JMRI sourceforge page

	Title is of the form "JMRI 2.1.8 test version is available";
	text is pretty much directly taken from the release note

( ) If a production version, update the SF automatic download pages

( ) Decide if worth announcing elsewhere (production version or 
	big system-specific fix/feature):
	    RailRoadSoftware&yahoogroups.com
		MAC_DCC@yahoogroups.com
		loconet_hackers@yahoogroups.com
		digitrax@yahoogroups.com
		NCE-DCC@yahoogroups.com
		NCE-SYS1@yahoogroups.com
		easydcc@yahoogroups.com
		Model_TRAINS_DCC_Software@yahoogroups.com
		DigitalPlusbyLenz@yahoogroups.com
		linux-dcc@yahoogroups.com
		rrsoftware@yahoogroups.com
		VersionTracker
		Apple MacOS Software
		
( ) Consider submitting to SoftPedia
    http://mac.softpedia.com/user/submit.shtml

( ) Consider submitting to VersionTracker

( ) Commit back any changes made to this doc

( ) Take a break!

=========================================

Old notes follow


( ) Create MacOS X DMG
   
   (this step is automatic in the release1 target, please ignore)
   
    rm temp.dmg
    hdiutil create -size 20MB -fs HFS+ -volname "JMRI 1.2.3" temp.dmg
    open temp.dmg
    (copy MacOSX/JMRI folder to DMG using finder)
    (cd /Volumes/JMRI(tab) ; ln -s /Applications .)
    ln -s /Applications .
    cd (back to Distributions)
    (eject)
    hdiutil convert temp.dmg -format UDZO -o JMRI.1.2.3.dmg

