This is the HOWTO file to make a complete SourceForge downloadable
distribution.  ($Revision: 1.121 $)

Start in a directory, typically called "Distributions", that
contains "scripts" and "java" (modules checked out from CVS) as subdirectories, then:

  ln -s java/build.xml build.xml
  ln -s scripts/dist.xml dist.xml

  mkdir Linux
  mkdir Linux/JMRI
  
  mkdir MacOSX
  mkdir MacOSX/JMRI
  
  mkdir Windows
  mkdir Windows/JMRI
     
You also need to have installed NSIS from http://nsis.sourceforge.net (we use version 2.44)
    
Make sure everything is up-to-date:

( ) If it's a new year, update copyright dates (done for 2010):
    * build.xml (2) in the javadoc instructions
    * site/Copyright.html
    * xml/XSLT masters and stylesheets
    * (grep -r for the previous year in the web site, xml; don't change copyright notices!)
    
( ) Check that the Version.java file has been updated (both version
    number in two places and copyright date), has released=true set
    and has been committed to CVS
    
( ) Bring in patches to date, including decoders

( ) Check if the decoder definitions have changed since the previous tag
    If so, remake the decoder index. 
        Delete old index from preferences
        Run program in your development dir, remake index
        Make sure file is saved with Unix line ends.
        Diff w file in CVS tree as a check.
        Copy the new file from preferences into the CVS tree.
        Update the version number by hand, adding 2.
        Commit.
    
( ) Update the help/en/Acknowledgements.shtml help page with any recent changes

( ) Check for uncommitted changes in the web site directory, 
    these can end up in help, xml, etc

( ) Edit the version number into the top help page:
    bbedit help/en/index.html
    
( ) Remake the help index  (need a command line approach, so can put in ant!)
    ./JHelpDev.csh   (See the doc page for setup)
    (navigate to JHelpDev.xml in release & open it)
    (click "generate all")
    
    In that same directory, also remake the index and toc web
    pages by doing invoking ant (no argument needed). (You may
    need to remove the DOCTYPE lines, as the Sun DTD seems to
    have gone away:  Map.jhm, JmriHelp_enTOC.xml, JmriHelp_enIndex.xml)
    
    Run the program and make sure help works.
    
    Commit any changed files.
    
( ) This is a good place to check that the JavaDocs generate without errors.
    If you fix anything, commit it back.

( ) This is a good place to check that all binary files are marked properly in CVS.
    In your test directory, run the "Distributions/scripts/checkKB.csh" script.
    This will take a minute.
    
( ) This is a good place to check that the decoder XSLT transforms work
    If you fix anything, commit it back.

( ) The default.lcf file for releases is taken from Distribution/scripts/; 
    the one for normal development is from Distribution/java/.  Make sure
    the one in scripts/ is the one you want. (We don't generally change this)
           
( ) (Still needed?) Update test comparison files with proper version (line 7)

    bbedit test/jmri/configurexml/LoadFileTestRef.xml test/jmri/jmrit/display/configurexml/ScaledIconTest.xml

( ) Edit the "manifest" file in your development directory, and make sure that the
    version number is correct in four places (this file comes from java/, not scripts/)
        
( ) Run "ant clean alltest" just to be sure

( ) Update the MacOS X bundles version numbers:
    
    cd scripts
    bbedit MacOSXapps/V1/*.app/Contents/Info.plist
    (three versions, two copyright years)

    Commit back to CVS

( ) Update copyright date in Windows installer script
    (note version number and output filename now determined via dist.xml)

    bbedit WinInstallFiles/InstallJMRI.nsi
    
( ) Update version numbers in Linux scripts

    bbedit DecoderPro PanelPro SoundPro cornwall JmriDemo LocoTools InstallTest DispatcherPro SignalPro

    Commit back to CVS

( ) To ensure that you've got the HEAD of CVS, in your test area do:

    cvs -q update -dA
    
    cd Distributions/scripts
    cvs -q update -dA
    
    cd Distributions/java
    cvs -q update -dA
    
------
Add something about copyright notices on changed files
------
    
To actually create the distribution:

( ) Go to your working directory and
	cvs -Q tag -F Release-2-10

( ) Create a new working directory, if you haven't already:
    
    cd <project directory>
    mkdir X-Y-Z-cand
    cd X-Y-Z-cand
    cvs co -r Release-2-10 all
    
    This gives it a sticky tag.  If your working directory
    already has that name, just
    
    cvs -q update -r Release-2-10
    
    to make sure it's got the tag
    
( ) Come back to Distributions and 
    cd scripts
	cvs -Q tag -F Release-2-10
    cd ../java
	cvs -Q tag -F Release-2-10
    cd ..
    
( ) Announce the tag to jmri-developers list, wait for comments

( ) Start the actual build! In the Distributions directory:

	ant -f dist.xml -Drelease=Release-2-10 -Dnumber=2.10 release1
	
	(the -Drelease-Release-2-10 option specifies the CVS tag to extract
	 and build; the -Dnumber=2.10 specifies the release number to append
	 to filenames, etc.)
	
	This will run "alltests"; make sure they all pass
	
	This will run DecoderPro; check for no startup errors, right version,
	help index present and working OK.

    Ant will do the various builds, construct the distribution
    directories, and finally construct the Linux, MacOS X and Windows
    distribution files.
    
    (If you need to, you can do the steps individually, but don't 
     do this if you're really building a release to distribute:
          ant x-rel-base-build
          ant x-rel-create-windows
          ant x-rel-installer-windows
          ant x-rel-create-osx
          ant x-rel-installer-osx
          ant x-rel-create-linux
          ant x-rel-installer-linux
     with the options present, of course)
	
( ) The next few steps can be done in parallel.

** Consider testing Windows installer on a VM

( ) Put the Linux, Mac OS X and Windows files where developers can
    take a quick look, send an email, and WAIT FOR SOME REPLIES
    
( ) Upload the Linux, Mac OS X and Windows files

    (The dist.xml file needs to have "test\ release" vs "production\ release"
    edited as needed in dist.xml - this should be automated)

    ant -f dist.xml -Drelease=Release-2-10 -Dnumber=2.10 -Duser.name=jacobsen release2

    (The user.name only needs to be provided if your SourceForge.net ID 
     is different than your current login ID)
     
    Wait until the downloads have propagated to the mirrors; check 
    by trying to download each file
    
    Ask JMRI-developers for a quick look _AND_ _WAIT_ _FOR_ _IT_!!

( ) Any time after release1 is complete, create and upload the JavaDocs
    and XSLT'd decoder pages (you need to have Java 1.6 in ~/.ant/ant.conf)
    
	ant -f dist.xml -Drelease=Release-2-10 -Dnumber=2.10 release3
	
	Set ~/.ant/ant.conf back to Java 1.5 afterwards
	
( ) Format the release note page, change date, etc

( ) Set Version.java back to released="false" and commit

( ) Commit release note files to the web site CVS directory
    
( ) Complete all the above before continuing

( ) Update the web site front page and downloads page
    		
( ) If the decoder definitions have changed, make a .zip file and send to:
    Graham Plowman: gppsoftware@gppsoftware.com

( ) Create the start of a release note for the next version

( ) Commit site
	
( ) File copyright registration

    https://eco.copyright.gov/eService_enu/   (Firefox only!)

( ) Wait for update on JMRI web server

( ) Mail announcement to jmriusers@yahoogroups.com
    Subject is "Test version 2.10 of JMRI/DecoderPro is available for download"

( ) Mail announcement to jmri-announce@lists.sourceforge.net

    You'll get a moderation message via email; handle it.

( ) News item from JMRI sourceforge page, Develop tab

	Title is of the form "JMRI 2.10 test version is available";
	text is pretty much directly taken from the release note

( ) If a production version, update the SF automatic download icon by selecting default in FRS
        
( ) Decide if worth announcing elsewhere (production version or 
	big system-specific fix/feature):
	    RailRoadSoftware&yahoogroups.com
		MAC_DCC@yahoogroups.com
		loconet_hackers@yahoogroups.com
		digitrax@yahoogroups.com
		NCE-DCC@yahoogroups.com
		NCE-SYS1@yahoogroups.com
		easydcc@yahoogroups.com
		Model_TRAINS_DCC_Software@yahoogroups.com
		DigitalPlusbyLenz@yahoogroups.com
		linux-dcc@yahoogroups.com
		rrsoftware@yahoogroups.com
		Apple MacOS Software
		
( ) Commit back any changes made to this doc

( ) Take a break!

