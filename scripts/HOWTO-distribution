This is the HOWTO file to make a complete SourceForge downloadable
distribution.  ($Revision: 1.37 $)

Start with a directory, typically called "Distributions", that
contains:

  scripts
  ln -s scripts/build.xml build.xml
  ln -s scripts/dist.xml dist.xml

  Linux
  	JMRI (the most recent distribution)
  MacClassic
  	JMRI (the most recent distribution)
  MacOSX
  	JMRI (the most recent distribution)
  OS2
  	JMRI (the most recent distribution)

  (Windows is separate, and involves a shared disk with VPC, but
   basically all the necessary stuff is in a VPC directory)
   
This probably already exists. Make sure that scripts, etc, have
been updated!

Make sure everything is up-to-date:

( ) Check if the decoder definitions have changed since the previous tag
    If so, remake the decoder index. 
    Copy the new file from preferences into the CVS tree.
    Update the version number by hand.
    Commit.
    
( ) Check if the help has changed since the previous tag
    If so, remake the help index  (need a command line approach, so can put in ant!)
    cd JMRI/jhelp/help/en
    (launch JHelpDev, e.g. "open jhelpdev.jar")
    (navigate to JHelpDev.xml & open it)
    
( ) Check that the Version.java file has been updated and committed

( ) To ensure that you've got the HEAD of CVS, in your test area do:

    cvs -q update -dA help jython lib resources xml
    cd java
    cvs -q update -dA build.xml jmri.jpx JMRILibraries.library lib manifest src test

    
    cd Distributions/scripts
    cvs -q update -dA
    
To actually create the distribution:

( ) Go to your working directory and
	cvs tag Release-1-2-3 src test build.xml jmri.jpx JMRILibraries.library manifest
	cd ..
	cvs tag Release-1-2-3 help jython resources xml lib lib118

    Note that you have to have the "all" and "check" cvs targets
    in your working directory when you do this.

( ) Come back to Distributions and 
    cd scripts
    cvs update
	(be sure that's the default.lcf you want!)
	cvs tag Release-1-2-3
    cd ..
    
	ant -f dist.xml -Drelease=Release-1-2-3 -Dnumber=1.2.3 release1
	
	Ensure tests pass!
	
	Check DecoderPro for no startup errors, right version

	Ant will launch three StuffIt processes; click
	each to proceed, and wait for them to be running.
	
( ) Once they launch, you can start building the Windows installer
	in parallel.
	
	Launch Installer Vise from the last build file.
	"Update archive"; Check changes make sense.
	Click the "test archive" button (right one of the pair)
	Name the installer JMRI.1.2.3.exe or so
	After the installer runs, run DecoderPro from desktop icon and check.
	In IV, "Save as..." the VCT file as the new name
	Drag-copy .exe to Mac, copy to final Distributions; name should be OK

    Alternate method:
    
    Mount PC.  Copy last .vct and Windows/JMRI to C:\WINDOWS\Desktop
    Create and test installer as above.  Copy the .exe back
    to the Distributions directory
    
( ) Once the three StuffIt processes are done
	ant -f dist.xml -Drelease=Release-1-2-3 -Dnumber=1.2.3 release2
	
	This will launch one more StuffIt process (for MacClassic)
	Wait for it to complete.
	
( ) Once the 4th StuffIt process is done, start uploading via
	ant -f dist.xml -Drelease=Release-1-2-3 -Dnumber=1.2.3 release3

( ) Create and upload the XSLT pages. This can be done at any time after now,
    but doing it now works well in parallel with the rest of the Windows build.
    
    cd Release-1-2-3/xml/XLST
    ant xslt
      (proceed only if no errors)
    ant upload
    cd ../../..

( ) The Windows .exe must be present before the next step
	
( ) When ready to upload the Windows version:
	ant -f dist.xml -Drelease=Release-1-2-3 -Dnumber=1.2.3 release4
	
    This also creates and uploads the JavaDocs as a last step
		
( ) Format the email announcement; you'll cut and paste parts
	to the release form.

( ) Login to SourceForge web 
	Go to the project home page, then admin page
	Click on Edit/Release Files  & release each of the three files
	in the order:
	
		OS/2
		Macintosh classic
		Linux
		MacOS X
		Windows
		
	Be sure to update the top of the release note paragraph.
	
	The test release name convention is "JMRI 1.2.3 test version for Linux"
	
	Be sure to select "preserve preformatted text"
	
	Note on using SF "Quick File Release" system:
		In Spring 2004, it would often give an error about "could not
		add file".  In that case, reupload the file, and edit the release
		to include the file.
		
		Alternately, use the Quick File Release system without selecting
		a file, then add it later.  This prevents the original uploads from
		being erased, so you don't have to upload them twice.

( ) Mail announcement to jmriusers@yahoogroups.com

( ) Commit announcement file to the web site CVS directory

( ) For a production version, update web page source:
    	Linux install.html         
    	MacOS Classic install.html 
    	MacOS X install.html       
    	OS2 install.html          
    	Windows install.html
		index.html
		DecoderPro/index.html
		README.html
		
( ) Commit site and update on server
	
( ) News item from JMRI sourceforge page

	Title is of the form "JMRI M.N is available"

( ) Mail announcement to jmri-announce@lists.sourceforge.net

( ) Decide if worth announcing elsewhere (production version or 
	big system-specific fix/feature):
		MAC_DCC@yahoogroups.com
		loconet_hackers@yahoogroups.com
		digitrax@yahoogroups.com
		2 NCE groups
		EasyDCC group
		Lenz group
		linux-dcc@yahoogroups.com
		rrsoftware@yahoogroups.com
		VersionTracker
		Apple MacOS Software
		
( ) Commit back any changes made to this doc

( ) Take a break!

