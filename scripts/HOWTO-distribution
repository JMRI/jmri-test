This is the HOWTO file to make a complete SourceForge downloadable
distribution.  ($Revision$)

If you're building locally:
    You need to have installed NSIS from http://nsis.sourceforge.net (we use version 2.44)

    Either make sure that 'makensis' is in your path, or set nsis.home in your local.properties
    file to the root of the nsis installation:
        nsis.home=/opt/nsis/nsis-2.46/

    If you're making branches in sourceforge, put your sourceforge userid & password in the
    local.properties file (this does not get checked in, so your ID remains safe).

    sourceforge.userid=zoo
    sourceforge.password=IMNOTTELLING


================================================================================
First, we merge in as much tentative content as possible to the SVN trunk.

( ) If it's a new year, update copyright dates (done for 2010):
    * build.xml (3) in the javadoc instructions and as a property value (jmri.copyright.years)
    * site/Copyright.html (3 places)
    * xml/XSLT masters and stylesheets
    * (grep -r for the previous year in the web site, xml; don't change copyright notices!)
    * Windows installer script
        bbedit scripts/WinInstallFiles/InstallJMRI.nsi
    * Linux & Mac OS X startup script
        bbedit scripts/AppScriptTemplate

( ) Bring in all possible sf.net patches, including decoders

( ) Check if the decoder definitions have changed since the previous release (almost always true)
    If so, remake the decoder index.
        Delete old index from preferences
        ant remakedecoderindex
        Move the new file from preferences into the SVN tree.
        Change file to Unix line ends.  (ant might eventually do this with <fixcrlf file="path/to/file" eol="unix" />, but be careful with cross-platform SVN expectations)
        svn diff as a check.
        Update the internal version number by hand, adding 2.
        Commit.

( ) Update the help/en/Acknowledgements.shtml help page with any recent changes

( ) Commit any changes in your local web site directory, these can end up in help, xml, etc

( ) Remake the help index  (need a command line approach, so can put in ant!)
    cd help/en/
    ./JHelpDev.csh   (See the doc page for setup)
    (navigate to JHelpDev.xml in release html/en/ & open it)
    (click "create all")

    In that same directory, also remake the index and toc web
    pages by doing invoking ant (no argument needed).

    ant

    Run the program and make sure help works.

    Commit any changed files.

( ) Confirm that all the above changes have been committed back to SVN trunk

( ) This is a good place to check that the decoder XSLT transforms work
        cd xml/XSLT
        ant
    If you fix anything, commit it back.


================================================================================
Second, we build the release branch:

( ) Start the release by copying the current HEAD onto a new SVN "release branch"

    ant -Dsourceforge.userid='you' -Dsourceforge.password='password' make-test-release-branch

    (Yes, you probably do have to provide both userid and password, or it will
    silently hang) (if you have them provided in the local.properties file, see
    above, you don't need to provide them here) 
    (alternately, change the svnSetting element in build.xml to:
        <svnSetting
        id="svn.settings"
        javahl="false"
        svnkit="false"/>
    to have it use your default command line setup; note that this doesn't include
    user name and password)
    
    This will do (more or less) the following actions:

    svn cp -m"start release" ${SVNREPO}/trunk/jmri ${SVNREPO}/branches/jmri/releases/2.13.5
    <check in an update of the version number of trunk/HEAD>
    <check in an update of the version number of the new release>

( ) If using the CI system, set up CI builds for that branch

( ) Move to the releases/ part of the SVN tree on your local machine
    and update to get the release copy:

    cd ../../branches/jmri/releases
    svn update 2.13.5

    ( if you don't have this, check out the specific section with "svn co ${SVNREPO}/branches/jmri/releases/2.13.5")

    ( to merge everything to date: svn merge ^/trunk/jmri
      If you do this, beware, you'll also merge in the new release.properties file, which you do NOT want to do.
      You can undo that merge with 'svn revert release.properties'.

      add --dry-run to the command to see what would be merged in without doing it
    )


    ( to merge a single later change: svn merge -c <changeset#> ^/trunk/jmri )

================================================================================
Third, we do any necessary release-specific updates.
    (we need to work through automation of version number values)

( ) Create the _next_ release note, so that people will document new (overlapping)
    changes there.
    
( ) Edit the version number into the top help page on the branch (one place):
    bbedit help/en/index.html

( ) run "ant alltests"; make sure they all pass

( ) run "ant decoderpro"; check for no startup errors, right version, help index present and working OK.

( ) Commit back; if using CI builds, this will trigger a rebuild, so wait for it.
    If using manual builds, see section below.
    
( ) Change the release note to point to the CI files, commit, wait (or force) update.

( ) Announce the file set to jmri-developers with a download URL like:

    http://builds.jmri.org/jenkins/job/Test%20Release%202.13.5/ws/jmri/dist/release/

    or from your local build files.

====================================================================================
For local builds, these are the build instructions; CI builds will already be running)

( ) ant -Dnsis.home="" packages

    Ant will do the various builds, construct the distribution
    directories, and finally construct the Linux, MacOS X and Windows
    distribution files in dist/releases/

( ) Put the Linux, Mac OS X and Windows files where developers can
    take a quick look, send an email, and WAIT FOR SOME REPLIES

====================================================================================
Final release steps:

( ) Upload the Linux, Mac OS X and Windows files to sourceforge

    Download from CI, check integrity (make sure compressed files not expanded),
    then do (replace "user" with your SourceForge.net user name; must have SSH
    keys for SourceForge.net set up)

    (SourceForge may have disabled CURL in their shell servers, in which
    case do this somewhere else with good connectivity)

    ssh user,jmri@shell.sf.net create
    ssh user,jmri@shell.sf.net
    curl -o archive.zip "http://builds.jmri.org/jenkins/job/Test%20Release%202.13.5/lastSuccessfulBuild/artifact/jmri/dist/release/*zip*/release.zip"
    unzip archive.zip
    cd archive/jmri/dist/release
    scp JMRI.2.13.5-* user,jmri@"frs.sourceforge.net:/home/frs/project/j/jm/jmri/test\ files/"
    (clean up and logout)

    Wait until the downloads have propagated to the mirrors; check
    by trying to download each file

( ) Create and upload the JavaDocs
    and XSLT'd decoder pages (you need to have Java 1.6 in ~/.ant/ant.conf)

	ant javadoc-uml
	ant uploadjavadoc
	cd xml/XSLT
	ant
	ant upload

	(no need to set ~/.ant/ant.conf back to Java 1.5 afterwards)

( ) Format the release note page, change date, etc

( ) Commit release note files to the web site SVN directory

( ) Complete all the above before continuing

( ) Update the web site front page and downloads page

( ) If the decoder definitions have changed, make a .zip file and send to:
    Graham Plowman: gppsoftware@gppsoftware.com

( ) Create the start of a release note for the next version

( ) Commit site

( ) File copyright registration

    https://eco.copyright.gov/eService_enu/   (Firefox only!)

( ) Wait for update on JMRI web server

( ) Mail announcement to jmriusers@yahoogroups.com
    Subject is "Test version 2.11.8 of JMRI/DecoderPro is available for download"

( ) Mail announcement to jmri-announce@lists.sourceforge.net

( ) News item from JMRI sourceforge page, Develop tab

	Title is of the form "JMRI 2.11.8 test version is available";
	text is pretty much directly taken from the release note

( ) If a production version, update the SF automatic download icon by selecting default in FRS

( ) Decide if worth announcing elsewhere (production version or
	big system-specific fix/feature):
	    RailRoadSoftware&yahoogroups.com
		MAC_DCC@yahoogroups.com
		loconet_hackers@yahoogroups.com
		digitrax@yahoogroups.com
		NCE-DCC@yahoogroups.com
		NCE-SYS1@yahoogroups.com
		easydcc@yahoogroups.com
		Model_TRAINS_DCC_Software@yahoogroups.com
		DigitalPlusbyLenz@yahoogroups.com
		linux-dcc@yahoogroups.com
		rrsoftware@yahoogroups.com
		Apple MacOS Software

( ) Commit back any changes made to this doc

( ) Take a break!
