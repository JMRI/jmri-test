<!-- Special build file for doing Java 1.1.8 compatibility tests -->
<!-- Bob Jacobsen, April 2002 -->
<!-- Revision $Revision: 1.1 $ -->

<project name="JMRI" default="compile" basedir=".">

<!-- much of this works by setting properties before invoking a target -->
<!-- in the usual build.xml file.    -->

<!-- basedir="." means all paths are relative to the "java" subdir -->
<!-- in the project.  We expect that lib et al will be present in -->
<!-- .. from there -->

  <description>
  Check JMRI for Java 1.1.8 compatibility
  </description>

  <!-- Force use of 1.1/1.2 compiler to avoid hang in synchronized(this){} on MRJ 2.2 -->
  <property name="build.compiler" value="javac1.2" />

  <path id="compile1.1.8.path">
      <pathelement location="lib/JDKClasses.zip"/>
      <pathelement location="lib/swingall.jar"/>
      <path refid="project.class.path"/>
  </path>


  <!-- targets deferred to primary -->

  <target name="init" description="create needed directories">
    <ant target="init" antfile="build.xml" />
  </target>

  <target name="clean">
    <ant target="clean" antfile="build.xml" />
  </target>

  <target name="check1.1.8" depends="clean, init" description="compile source against 1.1.8 libs and run alltest with 1.
1.8">
    <!-- Compile specific classes with regular path -->
    <javac  srcdir = "${source}"
           destdir="${target}" 
           includes="jmri/util/StringUtil.java, 
                 jmri/util/FontUtil.java,
                 jmri/util/JmriJFrame.java,
                 jmri/util/JTreeUtil.java,
                 jmri/util/LocaleUtil.java,
                 jmri/util/JTabbedPaneUtil.java"
           target="1.1" 
           debug="no" >
       <classpath refid="project.class.path"    />
    </javac>
    <!-- Compile the java 1.1.8 code from ${source} into ${target} -->
    <javac srcdir="${source}" 
           destdir="${target}" 
           target="1.1" 
           debug="no" >
       <bootclasspath refid="compile1.1.8.path" />
       <classpath refid="project.class.path"    />
    </javac>
    <!-- Copy top level resources to include in jar file -->
    <copy todir="${target}/resources/">
      <fileset dir="src/resources" includes="*.gif"  /> 
    </copy>
    <copy todir="${target}">
      <fileset dir="src/" includes="**/*.properties"  /> 
    </copy>
    <!-- compile tests -->
    <javac srcdir="${test}" 
           destdir="${target}"
           target="1.1" 
           debug="no" >
       <bootclasspath refid="compile1.1.8.path" />
       <classpath refid="project.class.path"    />
    </javac>
    <!-- run alltest -->
    <java classname="apps.tests.AllTest"
          dir=".." 
          fork="yes" >
       <classpath refid="compile1.1.8.path"    />
       <sysproperty key="java.security.policy" value="lib/security.policy"/> 
    </java>

  </target>

</project>