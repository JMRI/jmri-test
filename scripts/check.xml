<!-- Special build file for doing Java 1.1.8 compatibility tests -->
<!-- Bob Jacobsen, April 2002 -->
<!-- Revision $Revision: 1.3 $ -->

<project name="JMRI" default="check" basedir=".">

<!-- much of this works by setting properties before invoking a target -->
<!-- in the usual build.xml file.    -->

<!-- basedir="." means all paths are relative to the "java" subdir -->
<!-- in the project.  We expect that lib et al will be present in -->
<!-- .. from there -->

  <description>
  Check JMRI for Java 1.1.8 compatibility
  </description>

  <!-- set global properties for this build -->
  <!-- still needed, as we dont (yet) defer everything to build.xml -->
  <property name="source" value="src"/>
  <property name="test" value="test"/>
  <property name="target" value="classes"/>
  <path id="project.class.path">
    <pathelement location="../lib/collections.jar" />
    <pathelement location="../lib/crimson.jar" />
    <pathelement location="../lib/comm.jar" />
    <pathelement location="../lib/jdom-jdk11.jar" />
    <pathelement location="../lib/log4j.jar" />
    <pathelement location="../lib/jh.jar" />
    <pathelement location="../lib/Serialio.jar" />
    <pathelement location="../lib/junit.jar" />
    <pathelement location="../lib/jython.jar" />
    <pathelement location="classes/" />
  </path>

  <!-- Force use of 1.1/1.2 compiler in case there are any issues (none known yet!) -->
  <property name="build.compiler" value="javac1.2" />

  <!-- special path including Java 1.1.8 libraries -->
  <path id="compile1.1.8.path">
      <pathelement location="lib118/JDKClasses.zip"/>
      <pathelement location="lib118/swingall.jar"/>
      <path refid="project.class.path"/>
  </path>


  <!-- targets deferred to primary -->

  <target name="init" description="create needed directories">
    <ant target="init" antfile="build.xml" />
  </target>

  <target name="clean">
    <ant target="clean" antfile="build.xml" />
  </target>

  <target name="rmic">
    <ant target="rmic" antfile="build.xml" />
  </target>




  <target name="libcheck">
    <available file="lib118/JDKClasses.zip" property="jdk.present"/>
    <available file="lib118/swingall.jar" property="swingall.present"/>
    <antcall target="swingcheck" />
    <antcall target="jdkcheck" />
  </target>
  
  <target name="swingcheck" unless="swingall.present">
  	<fail message="lib118/swingall.jar not present" />
  </target>
  <target name="jdkcheck" unless="jdk.present">
  	<fail message="lib118/JDKClasses.zip not present" />
  </target>
  
  <target name="nativecompile" description="compile files requiring Java 1.3">
    <!-- Compile specific classes with regular path -->
    <ant target="compilefiles" antfile="build.xml">
      <property name="project.class.path" value="${compile1.1.8.path}"/>
      <property name="files" 
          value="jmri/util/StringUtil.java, 
                 jmri/util/FontUtil.java,
                 jmri/util/FileUtil.java,
                 jmri/util/JmriJFrame.java,
                 jmri/util/JTreeUtil.java,
                 jmri/util/LocaleUtil.java,
                 jmri/util/JTabbedPaneUtil.java,
                 jmri/util/com/sun/TableSorter.java,
                 jmri/util/PythonInterp.java" />
    </ant>
  </target>

  <target name="compile" description="build code for 1.1.8 compatibility">
    <!-- Check and initialize -->
    <antcall target="libcheck"/>
    <antcall target="clean"/>
    <antcall target="init"/>

    <!-- Compile specific classes with regular path -->
    <antcall target="nativecompile"/>

    <!-- Compile the java 1.1.8 code from ${source} into ${target} -->
    <javac srcdir="${source}" 
           destdir="${target}" 
           target="1.1" 
           debug="no" >
       <bootclasspath refid="compile1.1.8.path" />
       <classpath refid="project.class.path"    />
    </javac>

    <!-- Do the rest of normal compilation -->
    <ant target="compile" antfile="build.xml" />
  </target>
  
  <target name="tests" description="compile tests for 1.1.8 compatibility check"
                depends="init">
    <!-- compile tests -->
    <javac srcdir="${test}" 
           destdir="${target}"
           target="1.1" 
           debug="no" >
       <bootclasspath refid="compile1.1.8.path" />
       <classpath refid="project.class.path"    />
    </javac>
 </target>
 
  <target name="check" description="check for 1.1.8 compatibility"
                depends="init, compile, tests">
    <!-- run alltest -->
    <java classname="apps.tests.AllTest"
          dir=".." 
          fork="yes" >
       <classpath refid="compile1.1.8.path"    />
       <sysproperty key="java.security.policy" value="lib/security.policy"/> 
    </java>

  </target>

  <target name="jar" depends="compile, rmic"  
          description="create working jar file with current contents">
    <jar jarfile="${jartarget}/jmri118.jar" 
         basedir="${target}"
         manifest="manifest" 
         compress="true" />   <!-- compress="true" is default -->
    <!-- create the index, using the information in the manifest -->
    <exec executable="jar" dir="${jartarget}">
    	<arg line="i jmri118.jar"/>
    </exec>
  </target>

 <!-- dist target forces the jar file to be built without test classes -->
 <target name="dist" depends="clean, init, compile, rmic, jar"
 		 description="create a distribution jar file"/>

</project>