<!-- ugly first attempt at an ANT build.xml file for JMRI development -->
<!-- Bob Jacobsen, April 2002 -->
<!-- Revision $Revision: 1.5 $ -->

<project name="JMRI" default="compile" basedir=".">
<!-- basedir="." means all paths are relative to the "java" subdir -->
<!-- in the project.  We expect that lib et al will be present in -->
<!-- .. from there -->

  <!-- set global properties for this build -->
  <property name="source" value="src"/>
  <property name="test" value="test"/>
  <property name="target" value="classes"/>

  <property name="dist" value="NODISTNAME" />
  <property name="distdir" value="../${dist}" />

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${target}"/>
    <mkdir dir="${target}/resources" />
  </target>

  <path id="project.class.path">
    <pathelement location="../lib/collections.jar" />
    <pathelement location="../lib/crimson.jar" />
    <pathelement location="../lib/comm.jar" />
    <pathelement location="../lib/jdom-jdk11.jar" />
    <pathelement location="../lib/log4j.jar" />
    <pathelement location="../lib/junit.jar" />
    <pathelement location="classes/" />
  </path>

  <target name="compile" depends="init">
    <!-- Compile the java code from ${source} into ${target} -->
    <javac srcdir="${source}" 
           destdir="${target}" >
       <classpath refid="project.class.path"    />
    </javac>
    <copy todir="${target}/resources/">
      <fileset dir="src/resources" includes="*.gif"  /> 
    </copy>
  </target>

  <target name="tests" depends="init">
    <!-- Compile the test java code from ${source} into ${target} -->
    <javac srcdir="${test}" 
           destdir="${target}" >
       <classpath refid="project.class.path"    />
    </javac>
  </target>

  <target name="decoderpro" depends="compile">
    <java classname="apps.DecoderPro.DecoderPro"
          dir=".." 
	  fork="yes" >
       <classpath refid="project.class.path"    />
    </java>
 </target>

  <target name="jmridemo" depends="compile">
    <java classname="apps.JmriDemo.JMRIdemo"
          dir=".."
	  fork="yes" >
       <classpath refid="project.class.path"    />
    </java>
  </target>

  <target name="alltest" depends="compile, tests">
    <java classname="apps.tests.AllTest"
          dir=".." 
	  fork="yes" >
       <classpath refid="project.class.path"    />
    </java>
 </target>

  <!-- make update distribution .zip file -->
  <target name="makeupdate" depends="compile">
    <echo message="Building ${dist} update into ${distdir}" />

    <delete dir="${distdir}" />
    <mkdir dir="${distdir}" />

    <!-- make a new xml directory, then remove the CVS directories -->
    <cvs package="xml" dest="${distdir}" />
    <!-- Ant default excludes will keep the zip action -->
    <!-- from including the CVS directories  -->

    <jar jarfile="${distdir}/jmri.jar" basedir="${target}" />

    <!-- zip it! -->
    <zip zipfile="../${dist}.zip" basedir="${distdir}" />

    <!-- and remove working directory -->
    <delete dir="${distdir}" />
  </target>

  <target name="uploadupdate">
    <ftp server="upload.sourceforge.net"
         userid="ftp" password="jake@physics.berkeley.edu"
         action="put"
         verbose="yes" remotedir="incoming" >
      <fileset dir=".." includes="${dist}.zip" />
    </ftp>
  </target>

</project>


