<!-- Ant file for creating JMRI distributions -->
<!-- Bob Jacobsen, April 2002 -->
<!-- Revision $Revision: 1.40 $ -->

<project name="JMRI" basedir="." default="none">
<!-- basedir="." means all paths are relative to the "java" subdir -->
<!-- in the project.  We expect that lib et al will be present in -->
<!-- .. from there -->

  <description>
  Build JMRI distributions
  </description>

  <!-- set global properties for this build -->
  <property name="source" value="src"/>
  <property name="test" value="test"/>
  <property name="target" value="classes"/>
  <property name="jartarget" value=".."/>

  <target name="none" depends="">
    <fail message="you must provide a target of release1,2,3, etc"/>
  </target>
<!-- ******************************************************* -->
<!-- ** below here are targets for building distributions ** -->
<!-- ******************************************************* -->

 <property name="release" value="NO_RELEASE_SPECIFIED" />
 <property name="number"  value="NO_NUMBER_SPECIFIED"  />
 
 <target name="release1" depends=""
 	description="part 1 of build a release; useage is ant -Drelease=Release-1-2-3 -Dnumber=1.2.3 release1" >

    <antcall target="x-rel-base-build" />
    <antcall target="x-rel-create-windows" />
    <antcall target="x-rel-installer-windows" />
    <antcall target="x-rel-create-osx" />
    <antcall target="x-rel-installer-osx" />
    <antcall target="x-rel-create-linux" />
    <antcall target="x-rel-installer-linux" />

	<echo message="***************************************************"/>
	<echo message=" Step 1 done - Three build files should be present "/>
	<echo message="***************************************************"/>

 </target>

 <target name="x-rel-base-build" depends=""
 					description="checkout, test, create jar files">

    <echo message="Building ${release} numbered ${number}" />
    <delete dir="${release}" />
    <mkdir dir="${release}"/>
    <echo message="cvs checkout" />
    <cvs package="all" reallyquiet="true" dest="${release}" tag="${release}"/>
    <!-- <cvs package="check" reallyquiet="true" dest="${release}" tag="${release}"/> -->

    <echo message="test" />
    <ant antfile="build.xml" dir="${release}/java" target="alltest" />
    
    <echo message="run decoderpro; check version, startup!" />
    <ant antfile="build.xml" dir="${release}/java" target="decoderpro" />
    
    <echo message="make distribution jar" />
    <ant antfile="build.xml" dir="${release}/java" target="dist" />
</target>


<target name="x-rel-create-windows" depends=""
 					description="update files in master Windows directory">

    <echo message="create files in master Windows directory" />
    <delete dir="Windows"/>
    <mkdir dir="Windows"/> <!-- insures no old files around -->
    <copy todir="Windows/JMRI">
      <fileset dir="${release}" includes="jmri.jar"  /> 
    </copy>
    <cvs command="export" reallyquiet="true" package="lib" dest="Windows/JMRI" tag="${release}"/>
    <move todir="Windows/JMRI" file="Windows/JMRI/lib/Serialio.jar"/>
    <delete file="Windows/JMRI/lib/junit.jar" />
    <delete file="Windows/JMRI/lib/jfcunit.jar" />
    <delete file="Windows/JMRI/lib/jakarta-regexp-1.5.jar" />
    <delete file="Windows/JMRI/lib/libjinput-linux.so" />
    <delete file="Windows/JMRI/lib/libjinput-osx.jnilib" />
    <delete file="Windows/JMRI/lib/libusbJava.jnilib" />
    <delete file="Windows/JMRI/lib/libusbJava.so" />
    <delete file="Windows/JMRI/lib/comm-rxtx.jar" />
    <delete file="Windows/JMRI/lib/librxtxSerial.jnilib" />
    <delete file="Windows/JMRI/lib/RXTXcomm.jar" />
    <delete file="Windows/JMRI/lib/libgluegen-rt.jnilib" />
    <delete file="Windows/JMRI/lib/libgluegen-rt.so" />
    <delete file="Windows/JMRI/lib/libjoal_native.jnilib" />
    <delete file="Windows/JMRI/lib/libjoal_native.so" />
    <cvs command="export" reallyquiet="true" package="xml" dest="Windows/JMRI" tag="${release}"/>
    <cvs command="export" reallyquiet="true" package="resources" dest="Windows/JMRI" tag="${release}"/>
    <cvs command="export" reallyquiet="true" package="help" dest="Windows/JMRI" tag="${release}"/>
    <cvs command="export" reallyquiet="true" package="jython" dest="Windows/JMRI" tag="${release}"/>
    <cvs command="export" reallyquiet="true" package="web" dest="Windows/JMRI" tag="${release}"/>
    <cvs command="export" reallyquiet="true" package="scripts" dest="Windows/JMRI" tag="${release}"/>
    <delete defaultexcludes="no" dir="Windows/JMRI" includes="**/.cvsignore"/>
    <move todir="Windows/JMRI">
		<fileset dir="Windows/JMRI/scripts" >
      		<include name="*.bat"/>
      		<include name="default.lcf"/>
      		<include name="COPYING"/>
      	</fileset>
	</move>
    <copy todir="Windows/JMRI">
		<fileset dir="Windows/JMRI/scripts/WinInstallFiles" >
      		<include name="*"/>
      	</fileset>
   	</copy>
    <copy todir="Windows/JMRI/lib">
		<fileset dir="Windows/JMRI/scripts/WinInstallFiles" >
      		<include name="javax.comm.properties"/>
      	</fileset>
   	</copy>
    <delete dir="Windows/JMRI/scripts" />
    <!-- move windows .jar files to top directory -->
    <move todir="Windows/JMRI">
		<fileset dir="Windows/JMRI/lib" >
      		<include name="comm.jar"/>
      		<include name="crimson.jar"/>
      		<include name="jdom.jar"/>
      		<include name="javacsv.jar"/>
      		<include name="jhall.jar"/>
      		<include name="jython.jar"/>
      		<include name="log4j.jar"/>
      		<include name="jinput.jar"/>
      		<include name="jinput-wintab.dll"/>
      		<include name="jinput-raw.dll"/>
      		<include name="jinput-dx8.dll"/>
      		<include name="ch.ntb.usb.jar"/>
      		<include name="LibusbJava.dll"/>
      		<include name="MRJAdapter.jar"/>
      		<include name="Serialio.jar"/>
      		<include name="servlet.jar"/>
      		<include name="vecmath.jar"/>
      	</fileset>
	</move>
    
</target>

<target name="x-rel-create-osx" depends=""
 					description="update files in master MacOSX directory">
    <echo message="update files in master MacOSX directory" />
    <copy todir="MacOSX/JMRI">
      <fileset dir="${release}" includes="jmri.jar"  /> 
    </copy>
    <delete dir="MacOSX/JMRI/lib" />
    <cvs command="export" reallyquiet="true" package="lib" dest="MacOSX/JMRI" tag="${release}"/>
    <delete file="MacOSX/JMRI/lib/junit.jar" />
    <delete file="MacOSX/JMRI/lib/jfcunit.jar" />
    <delete file="MacOSX/JMRI/lib/jakarta-regexp-1.5.jar" />
    <delete file="MacOSX/JMRI/lib/Serialio.jar" />
    <delete file="MacOSX/JMRI/lib/jinput-wintab.dll" />
    <delete file="MacOSX/JMRI/lib/jinput-raw.dll" />
    <delete file="MacOSX/JMRI/lib/jinput-dx8.dll" />
    <delete file="MacOSX/JMRI/lib/libjinput-linux.so" />
    <delete file="MacOSX/JMRI/lib/LibusbJava.dll" />
    <delete file="MacOSX/JMRI/lib/libusbJava.so" />
    <delete file="MacOSX/JMRI/lib/gluegen-rt.dll" />
    <delete file="MacOSX/JMRI/lib/libgluegen-rt.so" />
    <delete file="MacOSX/JMRI/lib/joal_native.dll" />
    <delete file="MacOSX/JMRI/lib/libjoal_native.so" />
    <delete dir="MacOSX/JMRI/xml" />
    <cvs command="export" reallyquiet="true" package="xml" dest="MacOSX/JMRI" tag="${release}"/>
    <delete dir="MacOSX/JMRI/resources" />
    <cvs command="export" reallyquiet="true" package="resources" dest="MacOSX/JMRI" tag="${release}"/>
    <delete dir="MacOSX/JMRI/help" />
    <cvs command="export" reallyquiet="true" package="help" dest="MacOSX/JMRI" tag="${release}"/>
    <delete dir="MacOSX/JMRI/web" />
    <cvs command="export" reallyquiet="true" package="web" dest="MacOSX/JMRI" tag="${release}"/>
    <delete dir="MacOSX/JMRI/jython" />
    <cvs command="export" reallyquiet="true" package="jython" dest="MacOSX/JMRI" tag="${release}"/>
    
    <!-- create the application bundles from CVS -->
    <delete dir="MacOSX/JMRI/scripts" />
    <cvs command="export" reallyquiet="true" package="scripts/MacOSXapps/V1" dest="MacOSX/JMRI" tag="${release}"/>
    <delete dir="MacOSX/JMRI/DecoderPro.app" />
    <delete dir="MacOSX/JMRI/PanelPro.app" />
    <delete dir="MacOSX/JMRI/JmriDemo.app" />
    <delete dir="MacOSX/JMRI/LocoTools.app" />
    <delete dir="MacOSX/JMRI/CornwallRR.app" />
    <move todir="MacOSX/JMRI" file="MacOSX/JMRI/scripts/MacOSXapps/V1/DecoderPro.app" />
    <move todir="MacOSX/JMRI" file="MacOSX/JMRI/scripts/MacOSXapps/V1/PanelPro.app" />
    <move todir="MacOSX/JMRI" file="MacOSX/JMRI/scripts/MacOSXapps/V1/JmriDemo.app" />
    <move todir="MacOSX/JMRI" file="MacOSX/JMRI/scripts/MacOSXapps/V1/LocoTools.app" />
    <move todir="MacOSX/JMRI" file="MacOSX/JMRI/scripts/MacOSXapps/V1/CornwallRR.app" />
    <delete dir="MacOSX/JMRI/scripts" />
    
    <!-- copy various files from CVS -->
    <cvs command="export" reallyquiet="true" package="scripts" dest="MacOSX/JMRI" tag="${release}"/>
    <delete defaultexcludes="no" dir="MacOSX/JMRI" includes="**/.cvsignore"/>
    <move todir="MacOSX/JMRI">
		<fileset dir="MacOSX/JMRI/scripts" >
      		<include name="default.lcf"/>
      		<include name="COPYING"/>
      	</fileset>
	</move>
    <delete dir="MacOSX/JMRI/scripts" />
</target>

<target name="x-rel-create-linux" depends=""
 					description="update files in master Linux directory">
    <echo message="update files in master Linux directory" />
    <copy todir="Linux/JMRI">
      <fileset dir="${release}" includes="jmri.jar"  /> 
    </copy>
    <delete dir="Linux/JMRI/lib" />
    <cvs command="export" reallyquiet="true" package="lib" dest="Linux/JMRI" tag="${release}"/>
    <delete file="Linux/JMRI/lib/junit.jar" />
    <delete file="Linux/JMRI/lib/jfcunit.jar" />
    <delete file="Linux/JMRI/lib/jakarta-regexp-1.5.jar" />
    <delete file="Linux/JMRI/lib/Serialio.jar" />
    <delete file="Linux/JMRI/lib/libjinput-osx.jnilib" />
    <delete file="Linux/JMRI/lib/jinput-wintab.dll" />
    <delete file="Linux/JMRI/lib/jinput-raw.dll" />
    <delete file="Linux/JMRI/lib/jinput-dx8.dll" />
    <delete file="Linux/JMRI/lib/LibusbJava.dll" />
    <delete file="Linux/JMRI/lib/libusbJava.jnilib" />
    <delete file="Linux/JMRI/lib/gluegen-rt.dll" />
    <delete file="Linux/JMRI/lib/libgluegen-rt.jnilib" />
    <delete file="Linux/JMRI/lib/joal_native.dll" />
    <delete file="Linux/JMRI/lib/libjoal_native.jnilib" />
    <delete dir="Linux/JMRI/xml" />
    <cvs command="export" reallyquiet="true" package="xml" dest="Linux/JMRI" tag="${release}"/>
    <delete dir="Linux/JMRI/resources" />
    <cvs command="export" reallyquiet="true" package="resources" dest="Linux/JMRI" tag="${release}"/>
    <delete dir="Linux/JMRI/help" />
    <cvs command="export" reallyquiet="true" package="help" dest="Linux/JMRI" tag="${release}"/>
    <delete dir="Linux/JMRI/web" />
    <cvs command="export" reallyquiet="true" package="web" dest="Linux/JMRI" tag="${release}"/>
    <delete dir="Linux/JMRI/jython" />
    <cvs command="export" reallyquiet="true" package="jython" dest="Linux/JMRI" tag="${release}"/>
    <cvs command="export" reallyquiet="true" package="scripts" dest="Linux/JMRI" tag="${release}"/>
    <delete defaultexcludes="no" dir="Linux/JMRI" includes="**/.cvsignore"/>
    <!-- ensure scripts are executable -->
    <chmod perm="ugo+rx">
		<fileset dir="Linux/JMRI/scripts" >
      		<include name="DecoderPro"/>
      		<include name="PanelPro"/>
      		<include name="LocoTools"/>
      		<include name="JmriDemo"/>
      		<include name="InstallTest"/>
      		<include name="cornwall"/>
      	</fileset>
    </chmod>
    <move todir="Linux/JMRI">
		<fileset dir="Linux/JMRI/scripts" >
      		<include name="DecoderPro"/>
      		<include name="PanelPro"/>
      		<include name="LocoTools"/>
      		<include name="JmriDemo"/>
      		<include name="InstallTest"/>
      		<include name="cornwall"/>
      		<include name="default.lcf"/>
      		<include name="COPYING"/>
      	</fileset>
	</move>
    <delete dir="Linux/JMRI/scripts" />
</target>

<target name="x-rel-installer-windows" depends=""
 					description="create MacOS X archive">
	<!-- The following steps build the distribution archive -->
    <!-- using NSIS tools -->
    <echo message="create Windows installer"/>
    <exec executable="/opt/local/bin/makensis" dir="Windows/JMRI">
        <arg line="-V2 InstallJMRI.nsi"/>
    </exec>
</target>

<target name="x-rel-installer-osx" depends=""
 					description="create MacOS X archive">
	<!-- The following steps build the distribution archive -->
    <!-- using MacOSX tools -->
    <echo message="create MacOS X disk image"/>
    <exec executable="./scripts/diskimage.csh">
        <arg line="${release} ${number}"/>
    </exec>
</target>

<target name="x-rel-installer-linux" depends=""
 					description="create linux archive">
	<!-- The following steps build the distribution archive -->
    <!-- using MacOSX tools -->
    <echo message="create Linux archive"/>
    <tar compression="gzip" 
        destfile="JMRI.${number}.tgz" >
            <tarfileset dir="Linux">
                <include name="JMRI/**" />
                <exclude name="JMRI/DecoderPro" />
                <exclude name="JMRI/PanelPro" />
                <exclude name="JMRI/LocoTools" />
                <exclude name="JMRI/JmriDemo" />
                <exclude name="JMRI/InstallTest" />
                <exclude name="JMRI/cornwall" />
            </tarfileset>
            <tarfileset  dir="Linux" filemode="755">
                <include name="JMRI/DecoderPro" />
                <include name="JMRI/PanelPro" />
                <include name="JMRI/LocoTools" />
                <include name="JMRI/JmriDemo" />
                <include name="JMRI/InstallTest" />
                <include name="JMRI/cornwall" />
            </tarfileset>
    </tar>
</target>
 
 <target name="x-rel-upload-mac-linux" depends=""
 					description="sftp uploads">

	<echo message="JMRI.${number}.dmg, JMRI.${number}.tgz"/>

    <ftp server="upload.sourceforge.net"
         userid="ftp" password="jake@physics.berkeley.edu"
         action="put" passive="yes"
         verbose="yes" remotedir="incoming" >
      <fileset dir="." includes="JMRI.${number}.dmg, JMRI.${number}.tgz" />
    </ftp>
 </target>
 
 <target name="release2" depends=""
 	description="part 2 of build a release; useage is ant -Drelease=Release-1-2-3 -Dnumber=1.2.3 release2" >
	<echo message="upload Linux file"/>
    <scp sftp="true" 
        keyfile="${user.home}/.ssh/id_dsa"
        password="${password}"
        todir="${user.name}@frs.sourceforge.net:uploads" >
      <fileset dir="." includes="JMRI.${number}.tgz" />
    </scp>
	<echo message="upload MacOS X file"/>
    <scp sftp="true" 
        keyfile="${user.home}/.ssh/id_dsa"
        password="${password}"
        todir="${user.name}@frs.sourceforge.net:uploads" >
      <fileset dir="." includes="JMRI.${number}.dmg" />
    </scp>
	<echo message="upload Windows file"/>
    <scp sftp="true" 
        keyfile="${user.home}/.ssh/id_dsa"
        password="${password}"
        todir="${user.name}@frs.sourceforge.net:uploads" >
      <fileset dir="." includes="JMRI.${number}.exe" />
    </scp>
</target>

 <target name="release3" depends=""
 					description="part 3 of build a release; usage is ant -Drelease=R1.2.3 -Dnumber=1.2.3 release3">
 	<echo message="upload javadocs"/>
    <ant antfile="build.xml" dir="${release}/java" target="uploadjavadoc" />
 	<echo message="upload XSLT decoder files"/>
    <ant antfile="build.xml" dir="${release}/xml/XSLT" target="xslt" inheritAll="false"/>
    <ant antfile="build.xml" dir="${release}/xml/XSLT" target="upload" inheritAll="false"/>
 </target>

</project>


