<!-- Ant file for creating JMRI distributions -->
<!-- Bob Jacobsen, April 2002 -->
<!-- Revision $Revision: 1.19 $ -->

<project name="JMRI" basedir="." default="none">
<!-- basedir="." means all paths are relative to the "java" subdir -->
<!-- in the project.  We expect that lib et al will be present in -->
<!-- .. from there -->

  <description>
  Build JMRI distributions
  </description>

  <!-- set global properties for this build -->
  <property name="source" value="src"/>
  <property name="test" value="test"/>
  <property name="target" value="classes"/>
  <property name="jartarget" value=".."/>

  <path id="project.class.path">
    <pathelement location="../lib/collections.jar" />
    <pathelement location="../lib/crimson.jar" />
    <pathelement location="../lib/comm.jar" />
    <pathelement location="../lib/jdom-jdk11.jar" />
    <pathelement location="../lib/log4j.jar" />
    <pathelement location="../lib/jh.jar" />
    <pathelement location="../lib/Serialio.jar" />
    <pathelement location="../lib/junit.jar" />
    <pathelement location="../lib/jython.jar" />
    <pathelement location="classes/" />
  </path>

  <target name="none" depends="">
    <fail message="you must provide a target of release1,2,3, etc"/>
  </target>
<!-- ******************************************************* -->
<!-- ** below here are targets for building distributions ** -->
<!-- ******************************************************* -->

 <property name="release" value="NO_RELEASE_SPECIFIED" />
 <property name="number"  value="NO_NUMBER_SPECIFIED"  />
 
 <target name="release1" depends=""
 	description="part 1 of build a release; useage is ant -Drelease=Release-1-2-3 -Dnumber=1.2.3 release1" >

    <antcall target="x-rel-base-build" />
    <antcall target="x-rel-create-windows" />
    <antcall target="x-rel-create-osx" />
    <antcall target="x-rel-create-linux" />
    <antcall target="x-rel-installer-osx" />
    <antcall target="x-rel-installer-linux" />
	<echo message="build the Windows .exe now"/>
	<echo message="end of part 1; do part 2 after MacOSX, Linux uploads completely built"/>
</target>

 <target name="x-rel-base-build" depends=""
 					description="checkout, test, create jar files">

    <echo message="Building ${release} numbered ${number}" />
    <delete dir="${release}" />
    <mkdir dir="${release}"/>
    <echo message="cvs checkout" />
    <cvs package="all" quiet="true" dest="${release}" tag="${release}"/>
    <!-- <cvs package="check" quiet="true" dest="${release}" tag="${release}"/> -->

    <echo message="test" />
    <ant antfile="build.xml" dir="${release}/java" target="alltest" />
    
    <echo message="run decoderpro; check version, startup!" />
    <ant antfile="build.xml" dir="${release}/java" target="decoderpro" />
    
    <echo message="make distribution jar" />
    <ant antfile="build.xml" dir="${release}/java" target="dist" />
</target>


<target name="x-rel-create-windows" depends=""
 					description="update files in master Windows directory">

    <echo message="create files in master Windows directory" />
    <delete dir="Windows"/>
    <mkdir dir="Windows"/> <!-- insures no old files around -->
    <copy todir="Windows/JMRI">
      <fileset dir="${release}" includes="jmri.jar"  /> 
    </copy>
    <cvs command="export" quiet="true" package="lib" dest="Windows/JMRI" tag="${release}"/>
    <move todir="Windows/JMRI" file="Windows/JMRI/lib/Serialio.jar"/>
    <delete file="Windows/JMRI/lib/junit.jar" />
    <delete file="Windows/JMRI/lib/jh.1.1.2.jar" />
    <cvs command="export" quiet="true" package="xml" dest="Windows/JMRI" tag="${release}"/>
    <cvs command="export" quiet="true" package="resources" dest="Windows/JMRI" tag="${release}"/>
    <cvs command="export" quiet="true" package="help" dest="Windows/JMRI" tag="${release}"/>
    <cvs command="export" quiet="true" package="jython" dest="Windows/JMRI" tag="${release}"/>
    <cvs command="export" quiet="true" package="scripts" dest="Windows/JMRI" tag="${release}"/>
    <move todir="Windows/JMRI">
		<fileset dir="Windows/JMRI/scripts" >
      		<include name="*.bat"/>
      		<include name="default.lcf"/>
      		<include name="COPYING"/>
      		<include name="README"/>
      	</fileset>
	</move>
    <copy todir="Windows/JMRI">
		<fileset dir="Windows/JMRI/scripts/WinInstallFiles" >
      		<include name="*"/>
      	</fileset>
   	</copy>
    <copy todir="Windows/JMRI/lib">
		<fileset dir="Windows/JMRI/scripts/WinInstallFiles" >
      		<include name="javax.comm.properties"/>
      	</fileset>
   	</copy>
    <delete dir="Windows/JMRI/scripts" />
    <!-- move windows .jar files to top directory -->
    <move todir="Windows/JMRI">
		<fileset dir="Windows/JMRI/lib" >
      		<include name="comm.jar"/>
      		<include name="crimson.jar"/>
      		<include name="jdom.jar"/>
      		<include name="javacsv.jar"/>
      		<include name="jhall.jar"/>
      		<include name="jython.jar"/>
      		<include name="log4j.jar"/>
      		<include name="MRJAdapter.jar"/>
      		<include name="Serialio.jar"/>
      		<include name="vecmath.jar"/>
      	</fileset>
	</move>
    
</target>

<target name="x-rel-create-osx" depends=""
 					description="update files in master MacOSX directory">
    <echo message="update files in master MacOSX directory" />
    <copy todir="MacOSX/JMRI">
      <fileset dir="${release}" includes="jmri.jar"  /> 
    </copy>
    <delete dir="MacOSX/JMRI/lib" />
    <cvs command="export" quiet="true" package="lib" dest="MacOSX/JMRI" tag="${release}"/>
    <delete file="MacOSX/JMRI/lib/junit.jar" />
    <delete file="MacOSX/JMRI/lib/jh.1.1.2.jar" />
    <delete file="MacOSX/JMRI/lib/Serialio.jar" />
    <delete dir="MacOSX/JMRI/xml" />
    <cvs command="export" quiet="true" package="xml" dest="MacOSX/JMRI" tag="${release}"/>
    <delete dir="MacOSX/JMRI/resources" />
    <cvs command="export" quiet="true" package="resources" dest="MacOSX/JMRI" tag="${release}"/>
    <delete dir="MacOSX/JMRI/help" />
    <cvs command="export" quiet="true" package="help" dest="MacOSX/JMRI" tag="${release}"/>
    <delete dir="MacOSX/JMRI/jython" />
    <cvs command="export" quiet="true" package="jython" dest="MacOSX/JMRI" tag="${release}"/>
    
    <cvs command="export" quiet="true" package="scripts" dest="MacOSX/JMRI" tag="${release}"/>
    <move todir="MacOSX/JMRI">
		<fileset dir="MacOSX/JMRI/scripts" >
      		<include name="default.lcf"/>
      		<include name="COPYING"/>
      	</fileset>
	</move>
    <delete dir="MacOSX/JMRI/scripts" />
</target>

<target name="x-rel-create-linux" depends=""
 					description="update files in master Linux directory">
    <echo message="update files in master Linux directory" />
    <copy todir="Linux/JMRI">
      <fileset dir="${release}" includes="jmri.jar"  /> 
    </copy>
    <delete dir="Linux/JMRI/lib" />
    <cvs command="export" quiet="true" package="lib" dest="Linux/JMRI" tag="${release}"/>
    <delete file="Linux/JMRI/lib/junit.jar" />
    <delete file="Linux/JMRI/lib/Serialio.jar" />
    <delete dir="Linux/JMRI/xml" />
    <cvs command="export" quiet="true" package="xml" dest="Linux/JMRI" tag="${release}"/>
    <delete dir="Linux/JMRI/resources" />
    <cvs command="export" quiet="true" package="resources" dest="Linux/JMRI" tag="${release}"/>
    <delete dir="Linux/JMRI/help" />
    <cvs command="export" quiet="true" package="help" dest="Linux/JMRI" tag="${release}"/>
    <delete dir="Linux/JMRI/jython" />
    <cvs command="export" quiet="true" package="jython" dest="Linux/JMRI" tag="${release}"/>
    <cvs command="export" quiet="true" package="scripts" dest="Linux/JMRI" tag="${release}"/>
    <!-- ensure scripts are executable -->
    <chmod perm="ugo+rx">
		<fileset dir="Linux/JMRI/scripts" >
      		<include name="*.csh"/>
      		<include name="cornwall"/>
      		<include name="DecoderPro"/>
      		<include name="JmriDemo"/>
      		<include name="LocoTools"/>
      		<include name="PacketPro"/>
      		<include name="PanelPro"/>
       		<include name="jmrithon"/>
      	</fileset>
    </chmod>
    <move todir="Linux/JMRI">
		<fileset dir="Linux/JMRI/scripts" >
      		<include name="*.csh"/>
      		<include name="DecoderPro"/>
      		<include name="PanelPro"/>
      		<include name="LocoTools"/>
      		<include name="cornwall"/>
      		<include name="JmriDemo"/>
      		<include name="PacketPro"/>
       		<include name="jmrithon"/>
      		<include name="default.lcf"/>
      		<include name="COPYING"/>
      	</fileset>
	</move>
    <delete dir="Linux/JMRI/scripts" />
</target>

<target name="x-rel-installer-osx" depends=""
 					description="create MacOS X archive">
	<!-- The following steps build the distribution archive -->
    <!-- using MacOSX tools -->
    <echo message="create MacOS X disk image"/>
    <exec executable="./scripts/diskimage.csh">
        <arg line="${release} ${number}"/>
    </exec>
</target>

<target name="x-rel-installer-linux" depends=""
 					description="create MacOS X archive">
	<!-- The following steps build the distribution archive -->
    <!-- using MacOSX tools -->
    <echo message="create Linux archive"/>
    <tar compression="gzip" 
        destfile="JMRI.${number}.tgz"
        basedir="Linux"
        includes="JMRI/**" />
        
    <!-- <exec executable="open">                 -->
    <!-- 	<arg line="-a DropTar Linux/JMRI" />  -->
    <!-- </exec>                                  -->
</target>
 
 <target name="release2" depends=""
 					description="part 2 of build a release; useage is ant -Drelease=R1.2.3 -Dnumber=1.2.3 release2">
    <!-- <move file="Linux/JMRI.tgz" tofile="JMRI.${number}.tgz" />  -->
 </target>
 
 <target name="release3" depends=""
 					description="part 3 of build a release; useage is ant -Drelease=R1.2.3 -Dnumber=1.2.3 release2">
	<echo message="upload Mac, Linux files"/>
	<echo message="JMRI.${number}.dmg, JMRI.${number}.tgz"/>
    <echo message="if you get an error here, upload manually and move to step 3"/>

    <ftp server="upload.sourceforge.net"
         userid="ftp" password="jake@physics.berkeley.edu"
         action="put"
         verbose="yes" remotedir="incoming" >
      <fileset dir="." includes="JMRI.${number}.dmg, JMRI.${number}.tgz" />
    </ftp>

	<echo message="end of part 3; part 4 will do the windows upload when ready"/>
	<echo message="make sure Release.${number}.exe is present"/>

 </target>
 
 <target name="release4" depends=""
 					description="part 4 of build a release; usage is ant -Drelease=R1.2.3 -Dnumber=1.2.3 release4">
	<echo message="upload file Windows .exe file"/>
	<echo message="if you get an error, upload manually, then ant uploadjavadoc"/>
    <!-- <ftp server="upload.sourceforge.net"  -->
    <!--      userid="ftp" password="jake@physics.berkeley.edu"  -->
    <!--      action="put"  -->
    <!--      verbose="yes" remotedir="incoming" >  -->
    <!--   <fileset dir="." includes="JMRI.${number}.exe" />  -->
    <!-- </ftp>  -->
 </target>
 
 <target name="release5" depends=""
 					description="part 5 of build a release; usage is ant -Drelease=R1.2.3 -Dnumber=1.2.3 release4">
 	<echo message="upload javadocs"/>
    <ant antfile="build.xml" dir="${release}/java" target="uploadjavadoc" />
 </target>

</project>


