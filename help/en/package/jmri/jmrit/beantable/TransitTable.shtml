<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<!-- $Id: TransitTable.shtml,v 1.3 2008-10-30 14:57:59 djduchamp Exp $ -->
<html lang="en">
<head>
 <TITLE>
      JMRI: Transit Table Help
 </TITLE>
    <META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
    <META content="Dave Duchamp" name=Author>
    <META name="keywords" content="JMRI help Transit Table">

<!-- Style -->
  <META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
  <link rel="stylesheet" type="text/css" href="/css/default.css" media="screen">
  <link rel="stylesheet" type="text/css" href="/css/print.css" media="print">
  <link rel="icon" href="/images/jmri.ico" type="image/png">
  <link rel="home" title="Home" href="/">
<!-- /Style -->
</head>

<body>
<!--#include virtual="/Header" -->

<H1>The Transit Table
</H1>
<H2>What is a Transit?
</H2
<P>A <b>Transit</b> is a group of two or more connected 
<b><a href="SectionTable.shtml">Sections</a></b> that describes a route around 
the layout of a train traveling in a given direction. A Section may be 
in multiple Transits, and may be in a given Transit multiple times. Sections are 
kept in order--the first Section is connected to the second, the second 
is connected to the third, etc. That means a Section in a Transit must be connected 
to the Section before it (if there is one) and to the Section after it (if there is 
one). The order of the Sections determines the direction of travel in the Transit. 
Trains travel from Sections with lower sequence numbers toward Sections with higher
sequence numbers. Normally Transits would only be defined for mainline track.</p> 
<p>In user-specified areas of a Transit, <i>alternate</i> Sections may be designated. 
For example, to move between the "2nd" and "4th" Sections in a Transit, there may  
be multiple "3rd" Sections, any of which might be used to travel between the 2nd and 
4th Sections. Alternate Sections provide for passing tracks and staging yards. 
Transits also provide for reverse loops. Currently Transits do not provide for an 
operator reversing the direction of a train.</P>
<p>Transits provide for a special action to be performed when a train is in a 
Section.  Currently two special actions are supported: <b>Pause</b> for a user-designated 
number of fast clock minutes, and <b>Await</b> a manual restart. The Pause action 
may be used for automatic station stops. The Await action is designed to support 
an engineer doing work in a specified Section, and requesting a restart when the 
work is complete. More actions may be added in the future as needed.</p>
<H2>How are Transits Activated and Used?
</H2
<p>Transits are static objects. They specify routes for trains to follow around the 
layout. Transits do not run trains, or keep track of running trains. A Transit 
becomes part of the train running process when it is <i>activated</i> by being 
assigned to an Active Train. Transits are saved as part of a panel/configuration 
file, only need to be set up once, and can be reused. Active Trains, on the other 
hand are dynamic and transient.  Active Trains are not saved to disk, and must be 
set up each time they are used.</p>
<p>Transits are <i>activated</i> in the 
<a href="../dispatcher/DispatcherFrame.shtml">Dispatcher</a> window, where a Transit is 
linked to a train to create an Active Train. When an Active Train is created, a 
Transit is selected, a Train is selected, and a starting Block (train location 
at start) and ending Block (train location when travel is complete) are 
specified. This process results in an <b>Active Train</b>, which can then be 
dispatched. A Transit may be in only one Active Train at a time. When an Active 
Train is done, its Transit is <i>deactivated</i>, and may be reused for a subsequent 
Active Train.</p>
<p>A train usually starts from a Block outside of the Transit, but connected 
to a Block within the Transit. Optionally a train may start from a Block within a Section 
in the Transit. A train moves through a Transit in only one direction--defined by 
the order in which Sections are included in the Transit. Trains move from lower 
sequence number Sections toward higher sequence number Sections. When an Active 
Train is initiated, an <i>allocation</i> request is placed for a starting Section.
If the Section is free, the Section will be <i>allocated</i> to the train. 
<i>Allocation</i> means that the Section is assigned the Active Train, and the 
train is authorized by the dispatcher to proceed to the end of that Section.</p>
<p>When an Active Train is created, it may be activated for running by an engineer 
using a throttle, or automatically by a <i>virtual engineer</i>. Dispatching 
consists of <i>allocating</i> Sections, one by one, to the Active Train. The 
actual dispatching may be done by a dispatcher sitting at the computer running JMRI, 
or automatically by the computer. If a requested Section is currently in 
use, a request for assignment is placed in the dispatcher's queue. When a Section 
is freed, the queue is scanned for the highest priority train requesting it.</p>
<p><b>Note: Automated dispatching and automatic running of Active Trains are not 
currently supported!</b> They will be in a future version of JMRI.</p>
<H2>Using the Transit Table to Set Up Transits
</H2
<p>Transits are set up in the Transit Table.  When set up, Transits are independent 
of the trains that use them.  
<P></P>
<P>All the Transits that JMRI knows about can be referenced
using the <b>Transit Table</b> tool under <b>Tables</b> in the Tools menu of most 
JMRI programs. There are seven columns in the Transit Table:</P>
<UL>
<LI><b>System Name</b> - The system name is assigned to the Transit when it's created, 
and can't be changed.</LI>
<LI><b>User Name</b> - If you're interested in having your Transits carry "human 
readable" names, you can click in the "User Name" column and change that information
to whatever you want.</LI>
<LI><b>State</b> - The state of a Transit tells whether a section is <b>IDLE</b> 
(available for activation and assignment to a train), or <b>ASSIGNED</b> (linked 
to a train to form an Active Train). The state of a newly added Transit is always 
<b>IDLE</b>.</LI>
<LI><b>Comment</b> - This column is for your use to record any comment you may want
to use to keep track of your Transits. It is for information only.</LI>
<LI>Click the <b>Delete</b> button in a specific row to delete the Transit in that 
row. Use this button with caution! Do not delete a running Transit.</LI>
<LI>Click the <b>Edit</b> button in a row to view or change entered information
for a Transit. System name cannot be changed. User name may be changed, 
Sections may be redefined, etc. Only one Transit may be edited at a time. A 
Transit may not be edited if another is being created, or if the Transit is 
not in the IDLE state.</LI>
<LI>Click the <b>Duplicate</b> button in a row to add another Transit identical 
to this one. Clicking this button is similar to clicking the <b>Add...</b> 
button (see below) except the information from this Transit is copied into the 
Add/Edit Transit window. This option offers an easy way to enter multiple copies 
of a Transit when multiple trains must follow the same route at the same time.
</LI></UL>
<P>To define a new Transit, click the <b><A HREF="TransitAddEdit.shtml">Add...</a>
</b> button. An Add/Edit Transit window will 
be brought up that will allow you to define the Sections in the new Transit.  
(Obviously, Sections must be defined before any Transit can be created.) Since a 
Transit may be used in only one Active Train at a time, the Duplicate option 
(see above) may save time when creating multiple copies of the same Transit.</p>
<H2>Saving Transits to Disk
</H2
<P> Use the Store item in the File menu to save Transit information to disk. This 
information is saved with the configuration in an XML file, along
with control panel setup and similar items.  To store your panels in the same 
file (recommended), select <b>File>Store>Store Configuration and Panels To 
File...</b> or select <b>Panels>Store panels...</b> in the main JMRI window.
</P>
<!--#include virtual="/Footer" -->
</body>
</html>
