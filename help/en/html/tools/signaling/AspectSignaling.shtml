<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="en">
<head>
<!-- Copyright Bob Jacobsen 2008 -->
<!-- $Id: AspectSignaling.shtml,v 1.4 2009-12-29 20:57:07 jacobsen Exp $ -->
<title>JMRI: Aspect Signaling</title>

<!-- Style -->
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" type="text/css" href="/css/default.css" media="screen">
<link rel="stylesheet" type="text/css" href="/css/print.css" media="print">
<link rel="icon" href="/images/jmri.ico" TYPE="image/png">
<link rel="home" title="Home" href="/">
<!-- /Style -->
</head>

<body>
<!--#include virtual="/Header" -->

<!--#include virtual="Sidebar" -->
<div id="mainContent">


<H1>JMRI: Aspect Signaling</H1>
<p class=subtitle>
Controling signaling in a prototypical manner
</p>

<a href="images/Rule282.png">
    <img src="images/Rule282.png" height="241" width="159" align="right">
</a>
Protoypical signal systems present "aspects" to the engineer
to tell him how to run his train. 
The "Stop" aspect, for example, is pretty simple: Stop the train.  
The "Approach medium" aspect indicates something more complicated:
"Proceed approaching next signal at medium speed".  
Each aspect has an associated "indication", which is usually 
codified in the railroad's rule book.
<p>
Different signals may
show an aspect using different combinations of 
lights, semaphore positions, and/or placards; these are called
"appearances".  For example, the "stop" aspect will be a single red
light on a signal mast with one lamp, red over red lamps for a signal
mast with two lamps, etc.  

<h2>JMRI Support for Aspect Signaling</h2>

The original JMRI support for signals was via
"Signal Heads", which could be set to specific
appearances (colors).
<p>

Starting with JMRI 2.9.1 (early 2010), 
JMRI also contains 
"<a href="SignalMasts.shtml">Signal Mast</a>" 
objects that represent an
entire signal, not just an individual head.  A Signal Mast
can operate multiple heads, as required to do full prototypical
signaling based on aspects. When its "Aspect" is set to 
e.g. "Approach medium", it handles the layout operations 
needed to make the signals on the layout appear properly.

<p>
<a href="../../../package/jmri/jmrit/beantable/SignalMastTable.png">
   <img src="../../../package/jmri/jmrit/beantable/SignalMastTable.png" 
        height="86" width="338" align="right">
</a>
Signal Masts are configured through the
<a href="../../../package/jmri/jmrit/beantable/SignalMastTable.shtml">Signal Mast Table</a>
You add new ones with the "Add..."  button
on the table, which takes you to the
<a href="../../../package/jmri/jmrit/beantable/SignalMastAddEdit.shtml">"Add Signal Mast" window</a>.
To add a new signal mast, you specify 
what kind of signaling system it uses
(see <a href="#systems">below</a>),
the specific signal type like "double searchlight" or "double head dwarf",
and what signal heads it's going to drive.

<p>
From the table, you can set individual signal masts to 
any aspect that they're able to
display by clicking in the "Aspect" column.

<h2>Available Signaling Systems</h2>

JMRI users have provided a number of pre-defined signal systems:
<dl>
<dt><a href="../../../../../xml/signals/basic/index.shtml">basic</a>
    <dd>A non-prototypical set of aspects and appearances that most 
        model railroaders will understand easily.
<dt><a href="../../../../../xml/signals/AAR-1948/index.shtml">AAR-1948</a>
    <dd>American Association of Railroads 1948 rule book
<dt><a href="../../../../../xml/signals/SPTCO-1960/index.shtml">SPTCO-1960</a>
    <dd>Southern Pacific Railway and Transportation Company 1960 rule book
</dl>

There are instructions for creating additional signal system
definitions on
<a href="DefineNewAspects.shtml">a separate page</a>.
If you do create a new definition for a new prototype, 
please contribute it back to the JMRI project so we 
can distribute it with future releases of the project for
others to use.  Like decoder definitions in DecoderPro, the
more signal system definitions we have, the more useful the program
becomes, and the more people spend time to improve it. We all
win that way!

<h2>Program Access to Aspect Information</h2>

A program (in Java or Python) can get access to 
aspect information two ways.  If it has a reference
to a specific SignalMast &quot;m&quot;, it can use
<code><pre>
   m.getValidAspects()
</pre></code>
to get the list of aspect names that this signal mast can display.
The program can then access the signal system definition with
<code><pre>
   SignalSystem sys = m.getSignalSystem()
</pre></code>
and then enquire about properties of the aspect:
<code><pre>
   sys.getProperty("Clear","speed");
</pre></code>
where the first argument is the aspect name (use, for example,
<code>m.getAspect()</code> to obtain the current one on the mast)
and the second is a specific property.  
Properties can be defined programatically via e.g.
<code>m.setProperty("Clear","speed","69");</code>
or get loaded automatically from elements in the 
<a href="DefineNewAspects.shtml">aspect.xml</a>
file that defines the specific signal system.

<p>
Alternately, if you know the name of the signal system in use,
you can go directly to it via the InstanceManager:
<code><pre>
   SignalSystem sys = InstanceManager.signalSystemManagerInstance().getSystem("basic");
</pre></code>

<!--#include virtual="/Footer" -->
</body>
</html>

