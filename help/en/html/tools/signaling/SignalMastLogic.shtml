<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="en">
<head>
<!-- Copyright Kevin Dickerson 2011 -->
<!-- $Id: SignalMastLogic.shtml,v 1.3 2011-06-13 16:09:41 kevin-dickerson Exp $ -->
<title>JMRI: Signal Mast Logic</title>

<!-- Style -->
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" type="text/css" href="/css/default.css" media="screen">
<link rel="stylesheet" type="text/css" href="/css/print.css" media="print">
<link rel="icon" href="/images/jmri.ico" TYPE="image/png">
<link rel="home" title="Home" href="/">
<!-- /Style -->
</head>

<body>
<!--#include virtual="/Header" -->

<!--#include virtual="Sidebar" -->
<div id="mainContent">


<H1>JMRI: Signal Mast Logics</H1>
<p class=subtitle>
    Background information on JMRI Signal Masts Logic
</p>

<div class=para>


The JMRI "SignalMastLogic" allows you to build up a set of creteria for a 
signal mast as to what aspect it should be displaying for a specific route 
through to a destination mast.
<p>
Each signal mast logic is built from a source and destination signal mast pair, 
along with a series blocks, turnouts and sensors between the two masts and the
state that they must be in for the source mast to be released from a Danger or 
Stop Aspect.
<p>
<img src="images/logic1.png" height="92" width="437"><br>Example 1
<p>
In the example above, you have a source signal mast of SM20, there are then two 
destination masts of SM22 and SM23.<br>
The logic behind signalling pair, SM20 and SM23, is that blocks 2 & 3 must be 
unoccupied, and turnout IT1 must be set "Closed".  Once that criteria is met then 
signal SM20, will be released from Danger to Caution, if signal mast SM23 was set 
to Caution, then SM20 would be set to Proceed and show a Green aspect.  As soon 
as block 2 or 3 become active or turnout 1 is set thrown, the signal SM20 is set 
back to Danger.
<p>
Each signal mast pair must be directly reachable from the other, without any other
other signal mast in-between being in the same direction.
<p>
<img src="images/logic2.png" height="93" width="511"><br>Example 2
<p>
In the example above, a signalling logic from SM20 to SM24 would be invalid as 
SM23 is in between the two.  You would have to create two separate logics, one as 
above for SM20 to SM23, the second for SM23 to SM24.
<p>
<hr>
Which aspect our source mast displays after being released from Danger is firstly
determined by the aspect mapping that has been defined in the signal mast appearance 
file.  If there is only one aspect that could be displayed, then the signal mast 
will be set to that aspect.

However if there are multiple aspects that could potentially be displayed then 
the logic looks at two areas to determine the resulting aspect to be displayed<br>
<ul><li>Diverging route<br><ul>
<li>If there are aspects for a diverging route and any of the turnouts on the path are set thrown 
then it will use the aspect for a diverging route.</li>
<li>If none of the turnouts on the route are set thrown, then the aspect that is not 
designated as a diverging aspect will be used.</li>
</ul></li>
<li>Block/Signal Speed<br>
<ul><li>
If the diverging route is not available on the signal aspects, or it does not 
return a single potential aspect, then the speed of the block and speed rating 
of the aspect is used.
<br>
Each aspect and block can be configured with a Speed value, the logic will take 
the lowest speed defined on the blocks in the route and choose the aspect with 
the highest speed which is under the routes lowest speed.  ie if the routes 
lowest speed is 65 mph, then it will choose the aspect that has a speed equal or
less than 65mph.
</li></ul>
</li>
</ul>
<p>
In addition to being able to specify the turnouts, blocks and sensors that make 
up a logic, you can also specify which other signal masts must be set to a specific 
aspect before the source mast can be released.  In general, there should be no 
need to add extra signal masts as the route between all the different source mast 
to the destination mast should have unique criteria.  However there are certain 
situation such as where two tracks crossover on the same level where a conflicting 
route could be set.  Therefore to get around this, the signal mast or masts that 
are protecting the crossover should be part of each others criteria.
<p>
<H2>Manual and Auto Generated Information</H2>
The signalling logic holds two sets of block and turnout information, the 
first is user generated, the second is where a tool such as used with the layout 
editor (See Below) has automatically built up a set of blocks or turnouts from 
the panel layout as signalling criteria.<p>
Both sets of information is used by the signalling logic to determine if a signal 
can be released or not, however the manually created information has a higher 
priority over the automatically generated information. Thus allowing the user to 
over-ride what the system has determined.<p>
The automatically generated information is not saved with the rest of the panel 
information, however the manually generated user information is.  If the layout 
editor is being used to base the signalling logic on (See below) then the signalling 
logic will rediscover this information from the panel each time it is loaded, thus 
if any changes have been made they will be discovered.  Please note, that this 
re-generation of information is not done on the "fly" when the layout editor panel 
is changed.
<p>
<H2>Logic to Un-Signalled Areas or Buffer Stops</H2>
The signalling logic works only between a source and destination signal mast, 
if you have a valid route to an End Bumper/Buffer Stop/Dark Area, then there is 
no specific destination signal mast.  In this instance you would create a "dummy" 
signal mast to act as your destination mast, it doesn't have to be a real signal 
mast on the system or have real signal heads associated.  All that this dummy 
signal mast has to do is display a Danger aspect.
<p>
<H2>Using The Layout Editor for Signal Mast Logic</H2>
By using the layout block editor, it is possible to have the signal mast logic 
determine the signalling pairs, along with the blocks and turnouts that make up 
the criteria.  This can be done across all the signal mast on the a layout editor 
or on a source signal mast basis.
<p>It has the advantage that if the layout editor panel is changed, the 
signalling logic will discover this change when the panel is reloaded and use the 
new block and turnout information.
Please be aware that the re-discover at load process will not discover any new 
signalling pairs or remove invalid signalling pairs, it will simply update the 
information between existing pairs.
<p>
<H3>Placing Signal Masts</H3>
Signal masts can be placed by turnouts, anchor points and level crossings, 
but only where there is a boundary between two different layout blocks.<p>
To add the signal mast, right click on the turnout, level crossing or anchor point 
and if a block boundary existing you will be given the option to "set Signal Mast.." <p>
<img src="images/popup.png" height="316" width="300"><br>Example 3
<p>
You will then be presented with a fresh window that allows you to enter in the 
name of the signal mast that will protect a boundary between two blocks.<br>
For turnouts and crossings, you can only add a signal mast for the boundary going 
into the turnout or crossing, it is not possible to add a signal mast for the 
boundary going out from the turnout or crossing.  eg, If block A is the section 
of track attached to the turnout and the turnout is in block B, you can only add 
a signal mast that faces into block A that protects block B, you can not add a 
signal mast that faces into block B to protect block A.
<p>
<H3>Generate Signalling Logic</H3>
Signalling logic can automatically be generated in two different ways.<br>
The first is to build it on a signal mast by signal mast basis.  This can be done
by selecting "Signal Mast Logic" from the pop up menu for the signal mast icon on 
the panel, from here you then click on the "Discover" button, the system will go 
and find all potential destination masts that are valid from the selected mast.<p>
<img src="images/discover.png" height="209" width="502"><p>
The second method is from the "Pair" menu option in the Signal Mast Logic table, 
this will generate logic based upon all the signal mast on the layout editor panel.<p>
<img src="images/pairs.png" height="125" width="308"><p>
Please be aware that on large layouts with a large number of signal masts configured, this 
can take some time.
<p>
Access to configuring Signal Mast Logics can be done from three different locations
<ul>
<li><a href="../../../package/jmri/jmrit/beantable/SignalMastLogicTable.shtml">Signal Mast Logic Table</a></li>
<li>From the Signal Mast Table, there is an edit Logic button against each Signal Mast</li>
<li>From the Pop up menu on the Signal Mast Icon, there is a menu item for Signal Mast Logic</li>
</ul>

You add new ones with the "Add..."  button on each of the subsequent tables, which takes you to the
<a href="../../../package/jmri/jmrit/signalling/AddEditSignallingLogic.shtml">"Add Edit Signal Mast Logics" window</a>.
<!--#include virtual="/Footer" -->
</body>
</html>

