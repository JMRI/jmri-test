<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<!-- $Id: TurnoutFeedback.shtml,v 1.3 2008-02-17 15:51:14 jacobsen Exp $ -->
<html lang="en">
<head>
    <TITLE>
 	JMRI: Turnout Feedback
    </TITLE>
    <META content="Bob Jacobsen" name=Author>
    <meta name="keywords" content="JMRI Turnout feedback">

    <!-- The combination of "Define" and {Header,Style, Logo and Footer} comments -->
    <!-- are an arbitrary design pattern used by the update.pl script to -->
    <!-- easily replace the common header/footer code for all the web pages -->


<!-- Style -->
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="stylesheet" TYPE="text/css" HREF="/css/default.css"
	MEDIA="screen">
<LINK REL="stylesheet" TYPE="text/css" HREF="/css/print.css"
	MEDIA="print">
<LINK REL="icon" HREF="/images/jmri.ico" TYPE="image/png">
<LINK REL="home" TITLE="Home" HREF="/">
<!-- /Style -->
</HEAD>

<BODY>
<!--#include virtual="/Header" -->

  <div class="nomenu" id="mBody">
    <div id="mainContent">

	    <H1>JMRI: Turnout Feedback</H1>

Model railroaders  want different things when it comes to knowing the 
status of the turnouts on their layout.  Some are quite happy
to say "I told it to move, that's good enough for me".  
These people don't worry about whether a turnout 
on their layout actually moved when they told it to.  Those people
can just ignore this page, and leave the JMRI settings at their 
default.

<P>
But some modelers want to have better information about the
status of the turnouts on their layout, and so use
some form of "feedback" to indicate turnout position.  This could be
as complicated as two microswitches, adjusted to only close when the
turnout is properly seated in either position.  Or it could be something
simpler.

<P>
In the code, Turnout objects actually know about two different 
states:  "Commanded" state and "Known" state.  The commanded state is "This is 
what was asked for last".  The known state is "This is what's 
actually correct on the layout as far as I know".

<P>
Built into both LocoNet and XPressNet are limited abilities to monitor what 
is happening on their networks and adapt to messages about Turnout 
state changes. All the other protocols normally use a "you told it to 
change, so it did" logic.  In other words, 
when something in the code 
(the Turnout Tool or a script) commands a state change from closed 
to thrown, the default is for both
both the commanded state and the known state to change 
to "thrown".

<P>
But it is also possible to control this in more detail if you have 
wired your layout to allow it.

<P>
The whole question of turnout feedback is then "How do we configure
the program to understand the known state properly, given my
layout hardware?"

<P>
If you go to the "Turnout Table" tool, you'll find it has four columns
associated with feedback:
<DL>
<DT>"Feedback"</DT><DD>This is the "known state".  You can't change it, but this 
column will show you what the program thinks it is.</DD>

<DT>"Mode"</DT><DD>This is the feedback method used by this turnout.  (You can 
change it for each turnout individually, but note the change doesn't 
take effect until you click somewhere else, and you might need to add 
some sensor names in the next column(s))</DD>

<DT>"Sensor 1", "Sensor 2"</DT><DD>These define the sensors needed by certain 
types of feedback. You can type a sensor number, system name or user 
name here; the program will change it to the system name that it 
needs.</DD>
</DL>

<P>
Available feedback modes are:
<DL>
<DT>DIRECT</DT><DD>The default in many cases, and also the original behavior
of the program.  When something 
tells the turnout to change, it's just immediately assumed that it 
actually did it.</DD>

<DT>ONESENSOR</DT><DD>The turnout watches the sensor defined by the "Sensor 1" 
column, which is probably hooked to a microswitch on the turnout or 
similar.  When the sensor is Active, the turnout is known to be in 
the "Thrown" position.  When it's Inactive, the turnout is known to 
be in the "Closed" position.</DD>

<DT>TWOSENSOR</DT><DD>The turnout watches two sensors defined by the "Sensor 1" 
and "Sensor 2" columns, which are probably hooked to microswitches at 
either end of the turnout's throw bar. When Sensor 1 is active, the 
turnout is known to be thrown.  When Sensor 2 is active, the turnout 
is known to be closed (normal).</DD>

<DT>MONITORING</DT><DD>Default for LocoNet turnouts (and probably XpressNet 
soon), this means the network is monitored for messages about the 
status of the turnout.  This mode is only available for certain 
protocols, i.e. some protocols can't do the monitoring properly, 
and don't have this choice.</DD>

<DT>INDIRECT</DT><DD>Currently only available for LocoNet
turnouts, this informs the program that the turnout is
being driven by a Digitrax DS54 with a microswitch attached
to the switch lead.  For more information, see the
<A HREF="../../hardware/loconet/DS54.shtml">DS54 page</a>.</DD>

<DT>EXACT</DT><DD>Currently only available for LocoNet
turnouts, this informs the program that the turnout is
being driven by a Digitrax DS54 with two microswitches attached
to the switch and aux leads.  For more information, see the
<A HREF="../../hardware/loconet/DS54.shtml">DS54 page</a>.</DD>

</DL>

<P>Most people will (and probably should!!!) stick with the default 
feedback type that the software selects for them.

<P>Right now, the only people who should probably run out and try this 
are those who have their Digitrax DS54 
devices set up to trigger from a local input, and to send sensor 
messages when that happens.  in that case, switching to "ONESENSOR" 
or "TWOSENSOR" feedback will make everything work properly.  (DON'T 
FORGET TO SAVE THE CONFIGURATION!)

<!--#include virtual="/Footer" -->

	  </div><!-- closes #mainContent-->
	</div> <!-- closes #mBody-->
</body>
</html>

