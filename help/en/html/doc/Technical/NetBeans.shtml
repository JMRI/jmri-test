<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<!-- $Id$ -->
<html lang="en">
<head>
    <TITLE>
 	JMRI: Building with NetBeans
    </TITLE>
    <META content="Bob Jacobsen" name=Author>
    <meta name="keywords" content="JMRI technical code NetBeans">

    <!-- The combination of "Define" and {Header,Style, Logo and Footer} comments -->
    <!-- are an arbitrary design pattern used by the update.pl script to -->
    <!-- easily replace the common header/footer code for all the web pages -->

    <!-- delete the following 2 Defines if you want to use the default JMRI logo -->
    <!-- or change them to reflect your alternative logo -->

<!-- Style -->
  <META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
  <link rel="stylesheet" type="text/css" href="/css/default.css" media="screen">
  <link rel="stylesheet" type="text/css" href="/css/print.css" media="print">
  <link rel="icon" href="/images/jmri.ico" type="image/png">
  <link rel="home" title="Home" href="/">
<!-- /Style -->
</head>

<!--#include virtual="/Header" -->
<!--#include virtual="Sidebar" -->

	<div id="mainContent">
	    <!-- - - - - - - - - -->
	    <!--  Teaser  --> <!-- Optional -->
	    <!-- - - - - - - - - -->

    <h1>JMRI: Building with NetBeans</h1>
    <ul>
        <li><a href="#intro">Introduction</a>
        <li><a href="#installing">Getting and Installing NetBeans</a>
        <li><a href="#checkout">Checking out code</a>
        <li><a href="#buildandrun">Building and running JMRI</a>
        <li><a href="#updating">Updating the code from SVN</a>
        <li><a href="#jar">Making a Jar File</a>
        <li><a href="#patch">Making a Patch File</a>
        <li><a href="#nsis">Making a release package for Windows using NSIS</a></li>
        <li><a href="#findbugs">Running FindBugs</a></li>
            
    </ul>
    
    <h2><a id="intro">Introduction</a></h2>
    <p>NetBeans 7.2 (available at <a href="http://www.netbeans.org">www.netbeans.org</a>)
    makes a great platform for working with JMRI.
    The JMRI code is setup to work with NetBeans with almost no
    additional setup.
    (The description below is accurate for the Windows version of NetBeans 7.2.
    NetBeans is <i>supposed</i> to be identical across platforms, but this hasn't 
    been checked on anything else). </p>
    <p>NetBeans is a very powerful Integrated Development Environment (IDE),
    which can make working with the JMRI code pretty easy.  But it takes a little
    getting used to, and reading the tutorials on the 
    <a href="http://netbeans.org/community/releases/72/">NetBeans 7.2 web site</a>
    will be helpful.
    </p>

    
    <h2><a id="installing">Getting and Installing NetBeans</a></h2>
    <ul>
        <li> Download NetBeans 7.2 (The Java SE version is fine) from 
            <a href="http://www.netbeans.org">www.netbeans.org</a><br>
            (If you don't yet have Java Development Kit 6.0 (JDK) installed on your
            system, download a JDK-NetBeans bundle - on the NetBeans download page, 
            look for a link similar to "JDK with NetBeans IDE Java SE bundle".)</li>
        <li> Run the NetBeans package installer</li>
    </ul>
	<p></p>
	<p>Many Linux distributions have NetBeans available in their software repositories
	- search your package manager for NetBeans.</p>
    
    <h2><a id="checkout">Checking out code</a></h2>
    <p>
    The easiest way to get the initial copy of the code is to 
    directly check it out using NetBeans' integrated SVN.  Once you've done that,
    NetBeans will automatically use it.
    </p>
    <p>Start NetBeans and do the following steps. Text in brackets [] are menu items to be selected
    or buttons to be pressed.
    Text in <strong>this style</strong> should be typed into NetBeans exactly as written.  
    Text in <strong><em>this style</em></strong> denotes information related to your
    sourceforge.net login.  <em>This font</em> denotes explanations and stage directions to follow.<br />
    </p>
        [Team]-&gt;[Subversion]-&gt;[Checkout]
        <ul>
            <li> Repository URL: <strong>svn+ssh://svn.code.sf.net/p/jmri/code</strong>
            <li> User: <strong><i>your SourceForge.net login name</i></strong>
            <li> Password: <strong><i>your SourceForge.net password</i></strong>

            <li> [Next &gt;]
			<br>&nbsp;
            <li> Repository Folder(s): <strong>trunk/jmri</strong>
            <li> Repository Revision:
                <ul><li><em>The "Repository Revision" entry defaults to <strong>HEAD</strong> .  
                        This effectively selects the most recently checked-in source
                        code.</em></li>
                    <li><em>You may instead use the </em>[Browse] <em>button to browse the SVN
                        repository to select a specific code-base using a "tag" 
                        or "branch" or some other portion from the "trunk".  This can
                        be useful if you need to work with an older version of the 
                        JMRI project.</em></li>
                    <li><em>You may instead use the </em>[Search] <em>button to select code based on
                    commit date.</em></li>
                </ul>
                    
            <li> Skip "&lt;selected-folder&gt;" and checkout only its content:  <em> leave unchecked</em>
            <li> Export a clean directory tree from the repository:  <em> leave unchecked</em>
            <li> Local Folder: <em>pick someplace on your hard drive...</em>
            <li> Scan for NetBeans Projects after Checkout:  <em> ensure checked</em>
            <li> [Finish]
        </ul>
    <br />
    [Window]-&gt;[Output]-&gt;[Output]     <em>shows SVN activity log window...</em>
    <ul>
        <li><em>wait a few minutes for the SVN checkout to complete<br />
            A popup will display stating that 2 projects were checked out
            and asking if you want to open the projects.</em>
        <li>[Open Project...]<br />&nbsp;
        <li><em>In the Open Projects popup, choose JMRI
        </em>
        <li>[Open]
    </ul>

    <h2><a id="buildandrun">Building and running JMRI</a></h2>
    <p>    To build and run DecoderPro, all you have to do is select
           "Run Project (JMRI)" from the Run menu, or click the Run icon in the tool bar.
    </p>

    <ul>
        <li>Run -> Run Project (JMRI)  <em>will compile and invoke DecoderPro</em>
        <li><em>You can choose other targets (i.e. PanelPro...) by changing 
                [File]-&gt;[Project Properties (JMRI)]-&gt;[Build and Run]-&gt;
                [Run Project]</em>
    </ul>
    <p>
        If you want to run the program under the NetBeans debugger,
        first set JMRI to be the Main project via [Run]-&gt;[Set Main Project]-&gt;[JMRI] then
        select "Debug Main Project" from the "Debug" menu.
    </p>

    <h2><a id="updating">Updating the code from SVN</a></h2>

    <p>From time to time, you can update the code to match the current 
    repository contents. To do this, use the
    [Team]-&gt;[Update] menu choice.  You will probably need to provide your 
    sourceforge login information as was required to initially check out JMRI
    from sourceforge, as described above.</p>

    
    <h2><a id="jar">Making a Jar File</a></h2>

    Most of the code in a normal JMRI installation lives in a file called
    jmri.jar.  If you want to replace this with your updated version, you
    need to create a new jmri.jar file from your modified code.  
    <P>
    To do this,
    ctrl-click (or right-click) on the name of the "JMRI" project in the
    "Projects" window.  This will open a pop-up menu, on which you'll
    find "Make Jar File". Select that, and a new jmri.jar file will be
    produced in the project's main directory.
    
    
    <h2><a id="patch">Making a Patch File</a></h2>
    
    A "diff patch file" is an easy way to gather up all your changes, even
    if they span multiple files, into one file that you can then send to us.
    It's also easy to merge in with the rest of the code, so we greatly 
    prefer that you use this.
    
    <p>
    To create the file:
    <ul>
 
    <li>From the [Team] menu, select "Export Diff Patch ..."
    <li>A file browser will open; enter a new file name
        in your preferred location and hit "Save" or "Open", 
        depending on what the dialog shows. 
    <li>After it finishes calculating the diffs, the file you selected will contain
        the patches, along with an information header.
    </ul>

    <h2><a id="nsis">Making a release package for Windows using NSIS</a></h2>

    <p>It is possible for NetBeans users to create a release package for use on 
        the Windows platform.  This requires installation of the Nullsoft Scriptable 
        Install System (NSIS), which can be downloaded from 
        <a href="http://sourceforge.net/projects/nsis"> the NSIS project web page</a> 
        on SourceForge.</p>
    <p>Once NSIS is installed on the computer, it is necessary to create a file called
        local.properties in the same directory as JMRI's build.xml file.  This file is
        specifically <i>not</i> checked in via SVN, so that your machine-specific
        tool installation paths are <i>not</i> checked in to SVN.  Create the file, 
        and add a variable definition with the correct path to the directory which
        includes the NSIS executable, such as:</p>
    <p style="font-family: monospace">nsis.home=C:/Program Files (x86)/NSIS</p>
    <p>or</p>
    <p style="font-family: monospace">nsis.home=/opt/nsis/nsis-2.46/</p>
    <p>If you will be installing a "findbugs" tool, you will also define findbugs.home
        in this file.  You may also define several other machine-specific and 
        user-specific information as described in various locations in the 
        build.xml file.</p>
    <p>With the NSIS package installed to your computer, and build.xml properly 
            modified, the Windows package may be created by running the 
            "package-windows" ant target in build.xml.</p>

    <h2><a id="findbugs">Running FindBugs</a></h2>

    <p>The FindBugs tool is a static code analysis tool which examines JAVA source code
        for common coding issues.  Installation of a FindBugs tool allows an ant task
        defined in build.xml to run FindBugs analysis across all of the JAVA source code
        in JMRI.</p>
    <p>It appears that the build.xml file is not configured to allow a NetBeans
        FindBugs "plugin" to run analysis on the JMRI code except on a one-file-at-
        a-time basis.  As such, it seems advisable to download and install the
        appropriate stand-alone FindBugs tool for your operating system.  FindBugs
        downloads may be found at <a href="findbugs.sourceforge.net">the 
        FindBugs web site</a>.
    <p>Once you have the FindBugs tool installed, you must provide a path to the 
        directory containing the executable for use by the build.xml ant file.  
        If necessary, create the local.properties file in the same directory as 
        the JMRI build.xml file.  In the local.properties file, add the variable 
        findbugs.home with a path to the findbugs executable, such as:</p>
    <p style="font-family: monospace">findbugs.home=C:/findbugs-1.3.8</p>
    <p>or</p>
    <p style="font-family: monospace">findbugs.home=/opt/findbugs-1.3.8</p>
    <p>To run the FindBugs tool on JMRI code, execute the ant target "findbugs" 
        which is defined in build.xml.  Within Netbeans this can be accomplished 
        by right-clicking build.xml in the "Files" pane and "Run"ing the "findbugs" 
        target.  When FindBugs completes, the Netbeans Output window will show 
        the path to a report file in HTML format.  Open that file with a browser 
        to review the FindBugs results.</p>        


<!--#include virtual="/Footer" -->


      </div>
      <!-- closes #mainContent-->
</body>

</html>
