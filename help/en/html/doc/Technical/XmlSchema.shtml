<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<!-- $Id: XmlSchema.shtml,v 1.1 2009-12-31 19:56:27 jacobsen Exp $ -->
<html lang="en">
<head>
    <TITLE>
 	JMRI: Xml Schema Usage
    </TITLE>
    <META content="Bob Jacobsen" name=Author>
    <meta name="keywords" content="JMRI technical code xml schema usage">

    <!-- The combination of "Define" and {Header,Style, Logo and Footer} comments -->
    <!-- are an arbitrary design pattern used by the update.pl script to -->
    <!-- easily replace the common header/footer code for all the web pages -->

    <!-- delete the following 2 Defines if you want to use the default JMRI logo -->
    <!-- or change them to reflect your alternative logo -->

<!-- Style -->
  <META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
  <link rel="stylesheet" type="text/css" href="/css/default.css" media="screen">
  <link rel="stylesheet" type="text/css" href="/css/print.css" media="print">
  <link rel="icon" href="/images/jmri.ico" type="image/png">
  <link rel="home" title="Home" href="/">
<!-- /Style -->
</head>

<!--#include virtual="/Header" -->
<!--#include virtual="Sidebar" -->

	<div id="mainContent">

<H1>JMRI: XML Schema Usage</H1>

JMRI uses XML for a number of purposes: 
to hold decoder definitions, for its
<a href="XmlPersistance.shtml">persistance system</a>
for configuration and panel information,
and to create parts of the web site from other files.
This page describes how we specify the 
content of those files using 
<a href="">XML schema</a>.

<h2>Access to Schema Definitions</h2>
JMRI uses XML Schema to define the format of its files.
<P>
Those XML Schema  need to be available to the program when it
reads the files, as they define the default values of missing
attributes and other needed information.
<P>
In the JMRI distributions, these are stored in the 
<a href="/xml/schema">xml/schema</a> 
directory.  
Note that they are not stored in each directory
alongside the XML files. There are just too many 
locations to keep such a set of schema definition files up to date.
JMRI itself, via the jmri.jmrit.XmlFile class, provides
support for locating those files when the XML parser
needs them.  
<p/>

(Stuff about the DOCTYPE lines and the DTDs they reference)

<p>
The W3C online 
<a href="http://www.w3.org/2001/03/webdata/xsv">schema validation tool</a>.
Works, but doesn't seem to to check compliance with nested 
JMRIschema elements.

<p>
The venetian blind pattern

http://www.ibm.com/developerworks/xml/library/ws-soa-xmlwsdl.html#N1012B

But check out this one:
http://developers.sun.com/jsenterprise/archive/nb_enterprise_pack/reference/techart/design_patterns.html
http://www.javapassion.com/webservices/XMLSchemaDesignPatterns.pdf

<p>
Our approach is based on the structure of the underlying code:
A particular *Xml class is the unit of reuse.
s
<p>
Overall structure of the schema; planning for inclusion, merging and reuse; 
planning for extension.


By convention, provide &lt;xsd:annotation&gt;&lt;xsd:appinfo&gt; element containing
the class name that reads/writes and element:
<pre><code>
    <xs:annotation>
        <xs:documentation>
        Some human readable docs go here
        </xs:documentation>
        <xs:appinfo>
            <jmri:usingclass configurexml="false">jmri.managers.DefaultSignalSystemManager</jmri:usingclass>
        </xs:appinfo>
    </xs:annotation>
</code></pre>

Validation locally:
xmllint -schema schema/aspecttable.xsd -noout signals/AAR-1946/aspects.xml

Standard stylesheet:
<?xml-stylesheet href="schema2xhtml.xsl" type="text/xsl"?>
We really need a better one, but what can you do?

<h2>External Standards and Future Work</h2>

Once JMRI has moved forward to Java 1.4, we will 
consider moving from DTDs (which have issues of name reuse, localization, etc)
to schema for defining our formats.

<p>
The 
<a href="http://www.oasis-open.org/">OASIS collaboration</a>
defines a number of schema and schema elements that have become 
well-known standards. Were possible, we should use those 
<a href="http://www.oasis-open.org/specs/index.php">standard elements</a>
to improve inter-operability. Perhaps the first ones of interest are:
<ul>
<li><a href="http://docbook.org/">DockBook</a> defines elements for several concepts we use:
    <ul>
    <li>author (http://www.docbook.org/tdg/en/html/author.html)
    <li>address (http://www.docbook.org/tdg/en/html/address.html)
    <li>revision history (http://www.docbook.org/tdg/en/html/revhistory.html)
    </ul>

http://www.docbook.org/tdg/en/html/docbook.html

http://www.docbook.org/specs/wd-docbook-docbook-5.0a1.html

<li><a href="http://www.oasis-open.org/committees/ubl/faq.php">UBL</a>, 
though aimed at business 
transactions, defines elements to represent parties (companies, people), 
devices, model numbers, etc.
<li><a href="http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=office">OpenDocument</a> 
(OODF) defines a set of elements and structures for 
computations as part of its spreadsheet module. (But they provide Relax-NG schema, not W3C XML Schema,
so that doesn't help so much)
</ul>

Learning to use these will require some work, as 
we can't assume that computers using JMRI have internet access,
so can't just reference the entire schema as remote entities.

<p>
(Can we say you can't validate without an Internet connection?
Can we use weak validation to complete anyway?)

<!--#include virtual="/Footer" -->

	  </div><!-- closes #mainContent-->
	</div> <!-- closes #mBody-->
</body>
</html>

