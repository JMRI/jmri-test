<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="en">
<head>
<!-- Copyright Bob Jacobsen 2008 -->
<!-- $Id$ -->
<title>JMRI: DecoderPro User Guide - Advanced Decoder Definitions</title>

<!-- Style -->
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" type="text/css" href="/css/default.css" media="screen">
<link rel="stylesheet" type="text/css" href="/css/print.css" media="print">
<link rel="icon" href="/images/jmri.ico" TYPE="image/png">
<link rel="home" title="Home" href="/">
<!-- /Style -->
</head>

<body>
<!--#include virtual="/Header" -->

<!--#include virtual="Sidebar" -->
<div id="mainContent">


<H2>DecoderPro User Guide - Advanced Decoder Definitions</h2>

<p>This page provides information on advanced features in
the decoder definiton
files for the DecoderPro Symbolic Programmer.</p>


<h3>Identification</h3>
Three pieces:
<ul>
<li>Manufacturer - from CV8
<li>Version code - from CV7
<li>Product code - read from a manufacturer specific CV or CVs, 
this only works for specific manufacturers.  The read process
is handled in the code (the jmri.jmrit.decoderdefn.IdentifyDecoder class)
and has to be updated each time a manufacturer starts providing this number
in a CV.
</ul>

<h3>Visibility</h3>
 
The model element has a "show" attribute. It's possible values are:

<ul>
<li>"yes" (default) - the traditional behavior, always show this model and the family it contains
<li>"no" - never show this model, even if it matches a possible selection.
            Used for legacy (old) definitions that have been replaced with newer ones.
<li>"maybe" - only show if it matches a (possible) automatic identification.
</ul>


<h3>Updates and Migration</h3>

Sometimes, we replace a decoder definition with a better one.  The old one is in use,
but we'd like to move those users to the new one eventually.  There are model-level
attributes that can be added to the old (not the new) definition to facilitate that:

<code><pre>
&lt;model show="no" model="A4X" replacementModel="A4X" replacementFamily="Jan 2012"&gt;
</pre></code>

The user selects "Update decoder definitions" from the Debug Menu, and 
all existing roster entries what point a decoder definitions with replacementModel and/or
replacementFamily defined will be updated to those replacements.

<h3>Programming Capabilities</h3>

Some decoders can do extra things, for example bypassing limitations on CV
programming in the command station.  "Capability" elements are used to 
tell DecoderPro about these.

<h4>Access to High CV addresses</h4>

Certain command stations can only access up to CV 256 or CV512.  Some
decoder manufacturers have built in mechanisms to bypass this.  For example,
some ESU decoders can use writes to various CVs to access high-address CVs.
To tell DecoderPro that a decoder can do this, use an element like:
<code><pre>
        &lt;capability&gt;
            &lt;name&gt;High Access via Double Index&lt;/name&gt;
            &lt;parameter name="Max Regular CV address"&gt;256&lt;/parameter&gt;
            &lt;parameter name="High Address CV"&gt;96&lt;/parameter&gt;
            &lt;parameter name="Low Address CV"&gt;97&lt;/parameter&gt;
            &lt;parameter name="Access Register CV"&gt;99&lt;/parameter&gt;
            &lt;parameter name="Modulo"&gt;100&lt;/parameter&gt;
        &lt;/capability&gt;
</pre></code>
For an example of where to position it, etc, see the 
<a href="http://jmri.org/xml/decoders/ESU_LokSoundV4_0.xml">xml/decoders/ESU_LokSoundV4_0.xml</a> file.


<h4>Indexed CV Access</h4>

To access indexed CVs via regular variables (not iVariables), include this capability element:
<code><pre>
        &lt;capability&gt;
            &lt;name&gt;Indexed CV access&lt;/name&gt;
            &lt;parameter name="PI"&gt;31&lt;/parameter&gt;
            &lt;parameter name="SI"&gt;32&lt;/parameter&gt;
            &lt;parameter name="cvFirst"&gt;false&lt;/parameter&gt;
        &lt;/capability&gt;
</pre></code>
If cvFirst is true, the format is CV.PI or CV.PI.SI as used by QSI.
If it's false, the format is PI.CV or PI.SI.CV as used by ESU.
<p>
If both this and the "access to high CV" capabilities are present, this one
should be listed second.
<p>
For an example of where to position it, etc, see the 
<a href="http://jmri.org/xml/decoders/ESU_LokSoundV4_0.xml">xml/decoders/ESU_LokSoundV4_0.xml</a> file.


<h4>Qualifying Variables</h4>

A "qualifier" element on a variable element allows you to enable or disable the variable
depending on the current value of another variable.  In the following example, 
a CV is interpreted as two different variables depending on whether the 
decoder is set for short or long addressing.

<code><pre>
  &lt;variable label="Variable for Short Address" CV="11"&gt;
    &lt;qualifier&gt;
      &lt;variableref&gt;Address Format&lt;/variableref&gt;
      &lt;relation&gt;eq&lt;/relation&gt;
      &lt;value&gt;0&lt;/value&gt;
    &lt;/qualifier&gt;
    &lt;decVal/&gt;
  &lt;/variable&gt;
  &lt;variable label="Variable for Long Address" CV="11"&gt;
    &lt;qualifier&gt;
      &lt;variableref&gt;Address Format&lt;/variableref&gt;
      &lt;relation&gt;eq&lt;/relation&gt;
      &lt;value&gt;1&lt;/value&gt;
    &lt;/qualifier&gt;
    &lt;decVal/&gt;
  &lt;/variable&gt;
</pre></code>

Other available operators include "gt", "ge", "ne", "lt" and "le".

<h4>Qualifying Panes</h4>

A "qualifier" element on a pane element allows you to enable or disable the pane
depending on the current value of a variable.  The following example enables
one of two panes depending on whether the decoder is currently set for short or
long addressing.

<code><pre>
  &lt;pane name="Short Only"&gt;
    &lt;qualifier&gt;
      &lt;variableref&gt;Address Format&lt;/variableref&gt;
      &lt;relation&gt;eq&lt;/relation&gt;
      &lt;value&gt;0&lt;/value&gt;
    &lt;/qualifier&gt;
    &lt;column&gt;&lt;row&gt;
      &lt;label label="Short Only Pane"/&gt;
    &lt;/row&gt;&lt;/column&gt;
  &lt;/pane&gt;
  &lt;pane name="Long Only"&gt;
    &lt;qualifier&gt;
      &lt;variableref&gt;Address Format&lt;/variableref&gt;
      &lt;relation&gt;eq&lt;/relation&gt;
      &lt;value&gt;1&lt;/value&gt;
    &lt;/qualifier&gt;
    &lt;column&gt;&lt;row&gt;
      &lt;label label="Long Only Pane"/&gt;
    &lt;/row&gt;&lt;/column&gt;
  &lt;/pane&gt;
</pre></code>

Other available operators include "gt", "ge", "ne", "lt" and "le".


<!--#include virtual="/Footer" -->
</div>
</body>
</html>
