
# Default java.util.logging configuration file for JMRI project development.
#

# Output is sent to system.err, generally a console window.
# The output info consists of relative time, priority, thread name,
# category name, nested diagnostic context, the and the message in
# that order.

# For the general syntax of property based configuration files see
# http://docs.oracle.com/javase/7/docs/api/java/util/logging/LogManager.html

# Valid priority names are SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST.
# These map to the internally used SLF4J priorities as follows:
# FINEST  -> TRACE
# FINER   -> DEBUG
# FINE    -> DEBUG
# INFO    -> INFO
# WARNING -> WARN
# SEVERE  -> ERROR
# There are two other priorities: ALL and OFF, which respectively either record
# all messages without checking priority, or disable logging entirely.

# Set the default handlers for log messages
handlers=java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Set the default logging level
.level=INFO

# --- ConsoleHandler ---
# Override of global logging level
java.util.logging.ConsoleHandler.level=INFO
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter

# --- FileHandler ---
# Override of global logging level
java.util.logging.FileHandler.level=FINE

# Naming style for the output file:
# (The output file is placed in the directory
# defined by the "user.home" System property.)
java.util.logging.FileHandler.pattern=%h/JMRI.%u.log

# Limiting size of output file in bytes:
java.util.logging.FileHandler.limit=50000

# Number of output files to cycle through, by appending an
# integer to the base file name:
java.util.logging.FileHandler.count=10

# Style of output (Simple or XML):
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter

# Default Jetty server to only logging WARN since it can be verbose at points
org.eclipse.jetty.level=WARNING

# Examples of changing priority of specific categories (classes, packages):
#
# jmri.level=FINE
# jmri.jmrit.beantable.LogixTableAction.level=FINE
# jmri.jmrit.display.level=FINE
# jmri.jmrit.display.IndicatorTurnoutIcon.level=FINE
# jmri.jmrit.display.IndicatorTrackPaths.level=FINE
# jmri.jmrit.logix.level=FINE
# jmri.jmrit.logix.Engineer.level=FINE
# jmri.jmrit.logix.OBlock.level=FINE
# jmri.jmrit.logix.Portal.level=FINE
# jmri.jmrit.logix.Warrant.level=FINE
# jmri.jmrit.logix.WarrantFrame.level=FINE
# jmri.jmrit.logix.WarrantTableAction.level=FINE
# jmri.jmrit.symbolicprog.tabbedframe.level=FINE
# jmri.jmrit.symbolicprog.tabbedframe.PaneProgPaneTest.level=FINE
# jmri.jmrit.symbolicprog.DecVariableValue.level=FINE
# jmri.jmrit.symbolicprog.LongAddrVariableValueTest.level=FINE
# jmri.jmrix.level=FINE
# jmri.jmrix.can.level=FINE
# jmri.jmrix.openlcb.level=FINE
# jmri.jmrix.nce.NceTrafficController.level=WARNING
# org.eclipse.jetty.level=INFO
