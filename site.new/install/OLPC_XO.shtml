<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
	<META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset=utf-8">
	<TITLE>Installing JMRI on OLPC XO</TITLE>
	<META NAME="GENERATOR" CONTENT="OpenOffice.org 2.3  (Unix)">
	<META NAME="CREATED" CONTENT="20070720;11550900">
	<META NAME="CHANGEDBY" CONTENT="Robert Myers">
	<META NAME="CHANGED" CONTENT="20080407;17011000">
	<!-- $Id: OLPC_XO.shtml,v 1.1 2008-04-12 01:38:19 jacobsen Exp $ -->
	
<!-- Style -->
  <META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
  <link rel="stylesheet" type="text/css" href="/css/default.css" media="screen">
  <link rel="stylesheet" type="text/css" href="/css/print.css" media="print">
  <link rel="icon" href="/images/jmri.ico" type="image/png">
  <link rel="home" title="Home" href="/">
<!-- /Style -->

</HEAD>

<!--#include virtual="/Header" -->
<!--#include virtual="Sidebar" -->

<div id="mainContent">

<H1>Installing JMRI on the OLPC XO</H1>
		
		
		<P>This document outlines the steps taken to install the JMRI
		suite on an OLPC XO. 
		</P>

		<P><IMG SRC="OLPC_XO_files/xo_view1_v2.jpg" NAME="graphics1" ALIGN=LEFT WIDTH=426 HEIGHT=370 
		BORDER=0><BR CLEAR=LEFT>
		</P>

		<P>The OLPC (One Laptop Per Child ) XO is a small, rugged, Linux
		based sub-notebook designed to bring a
		<A HREF="http://en.wikipedia.org/wiki/Constructionism_%28learning_theory%29">constructionist</A> learning
		experience to the children of the world. Particularly to bring this to those living
		in less developed countries.</P>
		
		<P>However, being a small, rugged Linux based sub-notebook, also
		makes it an excellent candidate for running JMRI.</P>
		
		<A HREF="http://wiki.laptop.org/go/Hardware_specification">XO Hardware Specification</A>.</P>
		<A HREF="http://wiki.laptop.org/go/Software_components">XO Software Description</A>.</P>

		<P>More information about OLPC and the XO can be found at the
		<A HREF="http://www.laptop.org">OLPC Web site</A>, and the
		<A HREF="http://wiki.laptop.org">OLPC wiki</A>.</P>
		<P>I also hope that this document will provide guidance to others
		who are trying to install JMRI on other Linux machines.</P>

		<H2>About the XO and Sugar
</H2>
		<P>The XO is a flash-based device running a version of Linux based
		on Fedora 7 and Linux kernel 2.6.22 with OLPC modifications. Because
		of the limited space available with the flash drive, some Linux
		kernel services and utilities are not installed. Space
		considerations are an issue with adding software to this device.</P>
		<P>The XO has a GUI, <A HREF="http://wiki.laptop.org/go/Sugar">Sugar</A>,
		running over X which has been developed
		specifically for its intended use. Sugar runs an application in a
		single window, with the current application occupying the entire
		screen, with rapid switching between open applications.</P>
		<P>To install applications such as JMRI which have multiple windows
		open requires that an alternative GUI be used. 
		I installed <A HREF="http://www.xfce.org">XFCE</A>. 
		It is a lightweight windowing system, that has already been
		successfully installed on the XO. As you you will see in the
		section discussing the installation of XFCE, it is simple to switch
		between the two.</P>
		<P>Any Linux installation of JMRI seems to be a matter of shooting
		at a moving target. These are the parameters of my installation:</P>
		<UL>
			<LI>Date (last installation) 3/29/08
			<LI>XO Firmware Q2D13 (also installed successfully on Q2D7)
			<LI>XO Build 699 (also installed successfully on 656)
			<LI>XFCE 4.4.2
			<LI>Java JDK 1.5.0_13
			<LI>Sun commapi 2.0? (see below)
			<LI>rxtx 2.0.7pre2
			<LI>JMRI 2.0
			<LI>Dynex DX-UBDB9 USB to Serial adapter
			<LI>Wangrow System One DCC system
		</UL>
		<H2>Installation procedure</H2>
		<P>A certain familiarity with using the Linux shell, executing
		commands in Linux, and editing files in Linux is assumed. I used vi
		as my editor. If you have an editor that you are comfortable with,
		use it instead.</P>
		<P>The basic installation goes like this:</P>
		<UL>
			<LI><A HREF="#Install_XFCE">Install XFCE</A>
			<LI><A HREF="#Install_Java">Install Java</A>
			<LI><A HREF="#Install_comm">Install commapi and rxtx</A>
			<LI><A HREF="#Install_USB">USB to Serial Adapter</A>
			<LI><A HREF="#Install_JMRI">Install JMRI</A>
			<LI><A HREF="#Install_Fini">Finishing touches</A>
		</UL>
		
	<A NAME="Install_XFCE"><H2>Install XFCE</H2></A>
		<P> To install XFCE you need simply to follow the instructions on the <A HREF="http://wiki.laptop.org/go/Xfce">XFCE page in the OLPC wiki</A>.
		</P>
		<P> One minor change that I'd suggest is that while following the instructions to make XFCE the default environment, to do this instead:
		</P>
		<UL>
			<LI><P>in /home/olpc/ create a copy of .xsession-example called .xsession-xfce.</P> 
			<PRE>cd
cp .xsession-example .xsession-xfce</PRE>

        	<LI><P>Edit the .xsession-xfce file to launch Xfce on startup.  
        	In your favorite editor find the commented line that reads #exec xterm - below that line, add the following line:</P>
        	<PRE>exec startxfce4</PRE>
			<LI><P>save and exit.</P>
		</UL>
		<P>Then, you can enable XFCE by doing the following in a terminal window:</P>
		<PRE>	cp .xsession-xfce .xsession</PRE>
		<P>followed by rebooting, while in the home directory. And</P>
		<PRE>	rm .xsession</PRE>
		<P> and a reboot to switch back to Sugar.</P>
		
	<A NAME="Install_Java"><H2>Install Java</H2></A>
		To install Java, instructions exist in the OLPC Wiki, <A HREF="http://wiki.laptop.org/go/RestrictedFormats#Sun_Java">here.</A></P>
		<P>Again some minor changes from the OLPC page. If you've installed XFCE and Firefox at this
		time, and have internet connectivity from inside XFCE, you can download the '.bin' file directly to your XO, rather than following the 
		instructions requiring download to another machine and transferring the '.bin' file to the XO.</BR></P>
		
		I installed JDK 1.5.0-13 rather than the JRE.
		When I first tried to install JMRI I thought I'd have to compile rxtx, so I installed the JDK.
		I haven't tried running JMRI with just the JRE at this time (see Issues below). I'm 
		recommending JDK as a known successful path, so follow the 'Download JDK' link.</P>
		<P>The XO has a very limited PATH environment. I ended up creating a soft link from the 
		/usr/bin/ directory to the Java executable.</P>	
		
<PRE>	su -
	cd /usr/bin
	ln -s /usr/java/jdk1.5.0_13/jre/bin/java
	exit
</PRE>

		
		<P>at this point 'java -version' should return:</P>
		
<PRE>	java version "1.5.0_13"
	Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_13-b05)
	Java HotSpot(TM) Client VM (build 1.5.0_13-b05, mixed mode, sharing)
</PRE>

		<P>If this is what happened you have a successful Java install. Congratulations.
		
		<P>You can now discard the '.bin' and '.rpm' files to reclaim some space on your XO.</P>
		
	<A NAME="Install_comm"><H2>Install commapi and rxtx</H2></A>
		
		<P>JMRI requires that the Sun <A HREF= "http://java.sun.com/products/javacomm/">commapi</A>
		extension be added over Java to support communications.
		In addition, another library <A HREF="http://www.rxtx.org/">rxtx</A> 
		needs to be added to go from commapi's abstract support to 
		actually supporting physical serial ports.</P>
		<P></P>
		<P>Get the rxtx.tar.gz file from the JMRIUsers list on Yahoo 
		
		<A HREF="http://groups.yahoo.com/group/jmriusers/files/Linux/RxTx%20Stuff/">here</A>.</P>
		<P>This has all the files you need for installing commapi and rxtx. I believe the 'comm.jar'
		file is Sun commapi version 2. The rxtx libraries are 2.0.7pre2, which work. The properties 
		files provide the proper links from Java to the rxtx libraries from the rxtx libraries to
		your serial port.
		</P>

		<P>Place this file in your home (/home/olpc) folder.</P>
		<P>Despite being called 'rxtx.tar.gz' this is not a gzip file, but is simply a tar archive.
		Expand it by executing the command</p>
	<PRE>	tar xvf rxtx.tar.gz
	</PRE>
		<P>This will create a folder 'lib' with the expanded contents of the library. Rename this 
		directory, 'lib' is just too generic for safety.</P>
		<PRE>	mv lib rxtx-lib
		</PRE>
		<P>Now copy the contents ot this folder to the approprite places within Java. The name of
		the rxtx serial library as delivered will not be found, so we need a link from the desired
		name too.</P>
	<PRE>	su
	cd rxtx-lib
	cp javax.comm.properties /usr/java/jdk1.5.0_13/jre/lib/
	cp ext/* /usr/java/jdk1.5.0_13/jre/lib/ext
	cp i386/* /usr/java/jdk1.5.0_13/jre/lib/i386/
	cd /usr/java/jdk1.5.0_13/jre/lib/i386/
	ln -s librxtxSerial-2.0.7pre2.so librxtxSerial.so
	exit
	</PRE>

		<P>You might also want to download the 3.0 commapi from Sun. This contains a suite of 
		example programs for the commapi. I found that the Serial Demo program was useful for 
		testing the installation of the commapi, rxtx, and USB to serial converter.</P>
		
		<P>Keep the expanded rxtx-lib folder that you have, you will need it for one final step when
		installing JMRI.</P>

	<A NAME="Install_USB"><H2>USB to Serial Adapter</H2></A>

		<P>The XO has no user accessible serial ports. It has 3 USB 2.0 ports. A USB to serial 
		adapter is required for connection to most DCC systems.</P>
		
		<P>There currently is somewhat limited 
		<A HREF="http://wiki.laptop.org/go/USB_peripherals#Serial_Port">support for USB to serial devices on the XO</A>.
		ftdi_sio is supported, but I have been led to believe that there is a ftdi_sio related bug in the 
		2.6.22 kernel. Rather than having to deal with this I avoided these adapters. 
		Keyspan adapters are not currently supported by the kernel. This is a 
		<A HREF="http://dev.laptop.org/ticket/3050">known defect in the XO</A>,
		and the fix is currently scheduled for 6/30/08.</P>
		<P>So I chose to use an adapter that uses what seems to be the best supported chip set, the 
		<A HREF= "http://www.prolific.com.tw/eng/Products.asp?ID=59">PL 2303</A>.</P>
		<P>The adapter I chose is the 
		<a HREF="http://www.bestbuy.com/site/olspage.jsp?skuId=7135664&type=product&id=1110263657278&ref=06&loc=01&ci_src=14110944&ci_sku=7135664">
		Dynex DX-UBDB9</A>. This is Best Buy's private label adapter. Other  
		PL 2303 based adapters should work.</P>
		
		<P>The adapter should work by simply being plugged in. It's presence can be checked for by
		looking for the following device '/dev/ttyUSB0'. Checking should return something like:</P>
		
		<PRE>
	ls -l /dev/ttyUSB0
	crw-rw---- 1 root uucp 188, 0 2008-04-09 11:12 /dev/ttyUSB0
		</PRE>
		
		<P>Proper operation can be checked using the Sun
		SerialDemo Program and shorting pin 2 to pin 3 for loopback.
		Note that you have do do this as root, because we haven't allowed user 'olpc' access
		to the serial port yet.</P>
		<PRE>
	su
	cd commapi/examples/SerialDemo
	java SerialDemo
		</PRE>	
		
		<P>Should return something like:	
		</P>
		<PRE>	Experimental:  JNI_OnLoad called.
	Devel Library
	=========================================
	Native lib Version = RXTX-2.0-7pre2
	Java lib Version   = RXTX-2.0-7pre2
		</PRE>
		
		<P>and open the SerialDemo window. You should be able to select 'Port Name' /dev/ttyUSB0. 
		Click 'Open Port'.
		Click in the upper frame to focus.
		Short pin 2 and 3 on your adapter.
		What you type should be echoed in the lower frame.
		</P>
		<P>If this is the case, congratulations, you have a successful installation of the commapi 
		and rxtx. If not, it's time to check your work and figure out what went wrong.
		</P>
		
	<A NAME="Install_JMRI"><H2>Install JMRI</H2></A>
		<P>Now determine what version of JMRI you want to install and 
		<A HREF="http://jmri.sourceforge.net/download/index.html#prod-rel">download</A> 
		the Linux version of 
		it. Generally the latest release version is a good choice unless you have some specific 
		reason for wanting to try something else.</P>
		
		<P>Uncompress and expand the archive.</P>
		
<PRE>	su
	gunzip JMRI.2.0.tgz (this file name will depend on what you downloaded)
	tar xvf JMRI.2.0.tar
	exit
</PRE>
		<P>You now should have a folder JMRI. If you want to, move it to another location. 
		I put JMRI in /usr/share, which is where OLPC puts a lot of support files.</P>
<PRE>	su
	mv JMRI /usr/share/JMRI
	exit
</PRE>
		<P>Move a copy of javax.comms.properties to your JMRI folder. This is necessary to allow
		JMRI to know about the commapi.		
		</P>
<PRE>
	cd /home/olpc/rxtx-lib		( or wherever you put the rxtx you downloaded )
	cp javax.comm.properties /usr/share/JMRI ( or wherever you put JMRI )
</PRE>
		<P>Having to have two copies of this file is bogus, but necessary. See
		<A HREF="bogus_dup">below</A>.
		</P>
		
		<P>At this point your basic installation of JMRI is complete. You should be able to
		run JMRI as root from a terminal window.</P>
<PRE>	su
	cd /usr/share/JMRI
	./DecoderPro
		( work inside of DecoderPo, eventually exiting )
	exit
</PRE>

	<A NAME="Install_Fini"><H2>Finishing touches</H2></A>

	<P>There are now a few finishing touches that you will want to do to allow yourself to run JMRI
	as user rather than root, and to open JMRI from the XFCE desktop, rather than from
	a terminal window.</P>
	
			<H3>Add olpc to lock and uucp groups</H3>
			<P>This is necessary to allow the olpc user account to have access to the serial ports.
			Be very careful here, as messing up the user account group membership can have adverse
			effects, up to and including needing to reinstall the entire XO software install.</P>
			<P>There are two ways of doing this, editing the /etc/group file or using the usermod
			command.</P>
				<H4>editing /etc/group/</H4>
				<UL>
					<LI>Change to root. 
					<LI>Open /etc/group for editing.
					<LI>Find the uucp group line, add ',olpc' to the end of it.
					<LI>Find the lock group line, add ',olpc' to the end of it.
					<LI>Save the file and exit.
				</UL>
				
				<H4>usermod</H4>
				<P>Execute the following:</P>				
				<PRE>	su
	usermod -Gwheel,uucp,lock olpc
			</PRE>
			<P>In either case, it is best to make sure that you did this correctly before logging 
			out of the root account.</P>
			<PRE>	cat /etc/group | grep olpc
			</PRE>
			<P>Should return:</P>
			<PRE>	wheel::10:root,olpc
	uucp::14:uucp,olpc
	lock::54:olpc
	olpc::x:500:
			</PRE>
			If so, you can:
			<PRE>	exit
			</PRE>
			
			
			<H3>Modify the JMRI scripts so they can be executed from the
			desktop</H3>
			<P>The JMRI scripts like 'DecoderPro' are designed to be run while your are in their
			directory. A small change must de done to allow them to be run from another location -- 
			like what you'll be doing when you connect controls in the XFCE dock to them.</P>
			
			<P>Open the desired script file -- DeocderPro for example -- in an editor. You must
			do this as root.
			<PRE>	su
	vi DecoderPro
			</PRE>
			
			Find the line</P>
			<PRE>	#   cd /usr/local/JMRI</PRE>
			<P>uncomment it, and change the cd to wherever you have JMRI installed --</P>
			<PRE>	cd /usr/share/JMRI</PRE>
			<P>save the file and exit.</P>
			
			<P>Set the script so that it can be executed by the user account and exit root.</P>
			<PRE>	chmod +x DecoderPro
	exit
			</PRE>
			
			<P>Repeat this for whatever scripts you may want to run from the XFCE desktop.</P>
			
			<H3>Add links to the JMRI applications on the XFCE desktop</H3>
			<P>Now you can add controls to a XFCE panel to run JMRI components.</P>
			<UL>
				<LI>Right click on a panel on the desktop.
				<LI>Select 'Add New Item' from the pop-up menu.
				<LI>Select 'Launcher' from the dialog.
				<LI>Click 'Add'.
				<LI>'Name' and 'Description' are two lines of text that will appear when you hover
				over the icon in the panel. Example -- 'DecoderPro', 'Part of JMRI'.
				<LI>The button with the gear-like thing allows you to select an icon, click it.
				<LI>Select 'Other' from the list.
				<LI>Navigate the file system browser to select '/usr/share/JMRI/resources/jmri48x48.gif'
				<LI>Click 'Open'.
				<LI>Click the folder button next to 'Command' to open a file system browser to
				navigate to the scriipt you want. Example -- '/usr/share/JMRI/DecoderPro'.
				<LI>Click 'Close'.
			</UL>
		
		<H2>Success</H2> 
		
		<P>If everything has gone right you should now be able to run JMRI simply by opening
		it in the dock.</P>
		<P><IMG SRC="OLPC_XO_files/xo1.jpg" NAME="graphics1" ALIGN=LEFT WIDTH=640 HEIGHT=480 
		BORDER=0><BR CLEAR=LEFT>
		</P>
		<P>Here is a long view showing pretty much the whole XO running DecoderPro.</P>
		<P><IMG SRC="OLPC_XO_files/xo2.jpg" NAME="graphics1" ALIGN=LEFT WIDTH=640 HEIGHT=480 
		BORDER=0><BR CLEAR=LEFT>
		</P>
		<P>Here is a tighter view of the screen. There's plenty of memory left.</P>
		
		<P><IMG SRC="OLPC_XO_files/xo3.jpg" NAME="graphics1" ALIGN=LEFT WIDTH=640 HEIGHT=480 
		BORDER=0><BR CLEAR=LEFT>
		</P>
		<P>XO running ruler activity, posed with an N scale locomotive to show how small it is. 
		This is truly a N scale computer for N scale trains.</P>
	
		<H2>Issues</H2>
		<P>There are still some issues to be resolved before this installation can be considered 
		optimal. They include:
		</P>
			<H3>JRE vs. JDK</H3>
			<P>Space is tight on the XO and JDK is obviously larger than JRE. It would be 
			advantageous to install JRE rather than JDK. I see no reason that JRE 1.5.0_13 
			should not work. I simply have not gotten around to trying it.</P>
			
			<H3>Java version</H3>
			<P>I installed 1.5.0_13 on the strength of the recommendation on the XO wiki. It would 
			be worthwhile to figure out what other versions work (and which do not).</P>
			
			<H3>commapi version</H3>
			<P>I ended up installing the commapi version that was included in the rxtx lib posted 
			to the JMRI Users Yahoo group. I don't know its provenance. commapi 3.0 is the only 
			version actively supported by Sun. Some sources have complained about the stability 
			of version 3 of the Sun commapi.</P>
			
			<H3>Install folder for JMRI</H3>
			<P>I installed the JMRI suite in /usr/share/JMRI. Many resources are stored in 
			/usr/share on the XO. However, the XO has a nasty habit of deleting items when updating 
			-- and at this point updates are common. I don't know if this is the optimum or safe
			location for JMRI.</P>
			
			<A NAME="bogus_dup"><H3>Having to duplicate javax.comm.properties</H3></A>		
			<P>Having to have two copies of a configuration file in two different places is 
			definitely a bad thing. This need to be resolved. Is there a common place they could be?
			Does an environment variable need to be tweaked?
			Could one be a soft link?</P>
			
			<H3>Direct USB connection</H3>
			<P>My install used a USB to serial adapter. A growing number of DCC command stations
			use direct USB connections. Connecting to these have not been investigated at this time.</P>
			
			<H3>Getting an XO</H3>
			<P>There is no easy way of purchasing XOs at the time of this writing. They were
			available to the general public in the US and Canada directly from OLPC
			for a six week period at the end of
			2007 as part of a charitible giving program. There are no current plans to repeat such a
			program or to make them available to
			international buyers.</P>
			
			<P>OLPC has a <A HREF="http://laptopfoundation.org/participate/givemany.shtml">program</A>
			for mass purchases by non-profits. The current minimum order is
			for 100 units at $300 each.
			</P>
			
			<P>There are usually XOs available on eBay (and likely other aftermarket vendors). A
			recent search of eBay showed over twenty available.
			</P>

		<H2>Acknowledgements</H2> 

		<P>My thanks to:
		everyone at OLPC for creating this small wonder.
		To Bob Jacobsen for creating, maintaining and evangelizing for JMRI, truly a great example 
		of what can be done with FOSS software.
		To the OLPC and JMRI communities for helping me get this going.
		</P>
		
		<P>Special thanks to: Francisco Athens for doing the original XFCE install on the XO, and
		making me aware of that path. Dick Bronson, and Bob Jacobsen (again) for support and advice
		during the sometimes frustrating install. My son for letting me play with his XO.</P>
		
		<P>I hope that in some small way this document is giving back to those communities.
		</P>
		<P>Any errors are mine alone.
		</P>

		<P>Robert Myers, April 2008
		</P>

<!--#include virtual="/Footer" -->

</BODY>
</HTML>