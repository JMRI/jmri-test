<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="en">
<head>
<!-- Copyright ($Author$) 2009 -->
<!-- $Id$ -->
<title>Operations-A Trip Through Operations</title>

<!-- Style -->
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" type="text/css" href="/css/default.css" media="screen">
<link rel="stylesheet" type="text/css" href="/css/print.css" media="print">
<link rel="icon" href="/images/jmri.ico" TYPE="image/png">
<link rel="home" title="Home" href="/">
<!-- /Style -->
</head>

<body>
<!--#include virtual="/Header" -->

<!--#include virtual="Sidebar" -->
<div id="mainContent">

<a NAME="Top"></a>
<h1>Using DecoderPro&reg; to Operate Trains</h1>
<h1>A Trip Through Operations</h1>

<div align=right>
<p><a href="Ops_Trains.shtml">Previous</a></p>
<p><a href="index.shtml#Operations">Index</a></p>
</div>

<hr>
<p>Well, we&rsquo;ve had an overview of Operations, so let&rsquo;s see if  we can make it work.&nbsp; We could sit down  and enter a whole bunch of information into the Locations, Cars, Engines,  Routes and Trains screens or do it the easy way and use the built-in Demo  Railroad.&nbsp; Since this is a training (pun  intended) exercise, we&rsquo;ll use the Demo files.&nbsp; <br>
To get the demo files entered, Go to the main menu and click  on Tools, scroll all the way to the bottom to select Operations, and slide sideways  to select Settings.&nbsp; On the Operations Settings  screen click the box marked Tools and slide down and click on Load Demo  Files.&nbsp; </p>
<p align="center"><img src="images/Ops_Operations01.png" width="497" height="428" alt="demo"></p>
<p align="left">Now go back to the DecoderPro main menu to quit and then  re-start the program.&nbsp; When the program  presents the main DecoderPro screen, click on Tools, scroll all the way to the bottom to select Operations, slide sideways and this time click on  Locations.&nbsp; You should have a Locations  Screen that looks like this:</p>
<p align="center"><img src="images/Ops_Operations02.png" width="497" height="217" alt="operations"></p>
<p align="left">If you select Lakeview and click on the Edit box way over on  the right of the entry for Lakeview, you&rsquo;ll see a screen like that below,  showing that Lakeview is a staging area that can accommodate almost any kind of  car.&nbsp; This will be the starting point for  our mythical trip.</p>
<p align="center"><img src="images/Ops_Operations03.png" width="497" height="510" alt="operations"></p>
<p>We will now exit the description screen for Lakeview by clicking  the red X in the upper right.<br>
  Next, let&rsquo;s take a look at what&rsquo;s available to make up our  train.&nbsp; The Cars Screen is loaded with  entries from which the Operations Program can choose, so many that there&rsquo;s a  slider on the right to scroll the list.&nbsp;  Again clicking on the Edit box on the right we could see the specifics  of any one car and of course Edit the data (if it was our own).&nbsp; We won&rsquo;t bother.</p>
<p align="center"><img src="images/Ops_Operations04.png" width="497" height="248" alt="operations"></p>
<p>Of course, we&rsquo;ll need Motive Power to pull our train, so  let&rsquo;s look at what&rsquo;s in the Engines stable.</p>
<p align="center"><img src="images/Ops_Operations05.png" width="497" height="216" alt="operations"></p>
<p>Since we know we&rsquo;re departing from Lakeview we probably want  to eyeball that pair of Trainmasters sitting over on track #97.&nbsp; The Command Station on our Demo railroad is  obviously an NCE product because these locos are assigned NCE consist #118.</p>
<p>So how does Operations REALLY work??&nbsp; Well, once you have all the data entered as  we&rsquo;ve seen above, we can generate a set of manifests for the train  operations.&nbsp; To do this we use the Trains  Screen:</p>
<p align="center"><img src="images/Ops_Operations06.png" width="497" height="182" alt="operations"></p>
<p>Here there are several trains ready to build.&nbsp; The highlighted train is #LB3029 from  Lakeview to Bakersfield.&nbsp; By putting a  check mark in the box under build and then clicking the Build Box at the bottom  of the screen we were able to get the manifest built so that we can preview  it.&nbsp; It&rsquo;s a short run, but still takes more  than one page of fine print instructions for the crew.</p>
<p align="center"><img src="images/Ops_Operations07.png" width="497" height="381" alt="manifest"></p>
<p align="center"><img src="images/Ops_Operations08.png" width="497" height="235" alt="manifest"></p>
<p align="center"><img src="images/Ops_Operations09.png" width="497" height="178" alt="manifest"></p>
<p>We pick up our engines in Lakeview and head over to the yard  to gather up a bunch of cars and a caboose.&nbsp;  Then we get ready to depart at 7:10 on the fast clock.&nbsp; We should arrive at Farmington at 7:14, and  since there were no Farmington bound cars in Lakeview, and nothing in  Farmington bound for 
  Hillsboro or Bakersfield, the program has scheduled no work to do at  Farmington.&nbsp; So we&rsquo;ll keep going.&nbsp; When we arrive at Hillsboro (hopefully at  7:18), we have some set-outs and pick-ups to attend to.&nbsp; Then, we&rsquo;re off to Bakersfield, gliding  through Danville and Port Arthur on the way.&nbsp;  Arriving at Bakersfield right on time at 8:21, we drop the boxcar at  Heritage Furniture, the Coalhopper in the yard, and slide the caboose gently  into the caboose track.&nbsp; Now we can take  the motive power over to the engine terminal and call in to Dispatch asking for  the trip to be terminated.<br>
  The trip is terminated by selecting it in the Trains screen  and clicking the terminate button.&nbsp; This  would then enter the new locations of the rolling stock into the data screens  and release them for the next build.<br>
  So that wasn&rsquo;t so difficult, was it?&nbsp; Hope you enjoyed your cab ride.</p>
<hr>

<div align=right>
<p><a href="Ops_Trains.shtml">Previous</a></p>
<p><a href="index.shtml#Operations">Index</a><a href="index.shtml#Operations"></a></p>
</div>

<!--#include virtual="/Footer" -->
</body>
</html>
