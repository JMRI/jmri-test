# LogixTableBundle.properties
#
# Revision $Revision: 1.1 $
# by Simon Ginsburg
# German properties for the jmri.jmrit.LogixTableAction GUI elements

LogixSystemName = Logik Systemname
LogixSystemNameHint = Geben Sie den Systemnamen fuer ein neues Logikelement an, z.B. IX13
LogixUserName = Logik Nutzername
LogixUserNameHint = Geben Sie den Nutzernamen fuer ein neues Logikelement an, z.B. Signal 2 Steuerung
LogixUserNameHint2 = Geben Sie einen neuen Nutzernamen fuer ein Logikelement an, z.B. Signal 2 Steuerung
AddLogixMessage1 = Geben Sie einen Systemnamen und einen Nutzernamen an, danach
AddLogixMessage2 = auf "Logik Erzeugen" clicken und die Bedingungen hinzufuegen.
ConditionalSystemName = Bedingung Systemnamen
ConditionalUserName = Bedingung Nutzernamen
ConditionalUserNameHint = Gebe Nutzernamen fuer Bedingung an, z.B. Signal 2 Rot

ColumnLabelSystemName = Systemname
ColumnLabelName = Name
ColumnLabelUserName = Nutzername
ColumnLabelState = Zustand
ColumnLabelVariableType = Variablentyp
ColumnLabelData1 = Daten 1
ColumnLabelData2 = Daten 2
ColumnLabelTriggersCalculation = Berechne Aktivierungen

TitleAddLogix = Logik Hinzufuegen
TitleEditLogix = Logik Bearbeiten
TitleEditConditional = Bedingung Bearbeiten
TitleLogicalExpression = Logischer Ausdruck
TitleAction	= Ereignisse
ConditionalTableTitle = Bedingungen ( in der Reihenfolge der Berechnung, maximal
StateVariableTableTitle = Zustandsvariablen ( maximal
LogicalExpressionTitle = Logischer Ausdruck
NotApplicableAbbreviation = N/A
ActionTitle = Ereignisse
Action1Title = Ereignis 1 - Ereignis Aktivierung 
Action2Title = Ereignis 2 - Ereignis Aktivierung
OnChangeToTrue = Beim Uebergang zu "Wahr"
OnChangeToFalse = Beim Uebergang zu "Unwahr"
OnChange = Beim Uebergang
Action1Type = Ereignis 1 - Typus
Action2Type = Ereignis 2 - Typus 

True = Wahr
False = Unwahr
Unknown = Unbekannt
LogicAND = UND
LogicNOT = NICHT

CreateLogixButton = Erzeuge Logik
LogixCreateButtonHint = Clicken um neues Logikelement zu erzeugen
DoneButton = Erledigt
DoneButtonHint = Clicken um Nutzernamen zu speichern und zur Logiktabelle zurueckzukehren
DeleteLogixButton = Logik loeschen
DeleteLogixButtonHint = Clicken um die Logik mit allen Bedingungen zu loeschen
CancelButton = Abbrechen
CancelButtonHint = Clicken um abzubrechen und ohne Aenderungen zur Logiktabelle zurueckzukehren
NewConditionalButton = Neue Bedingung
NewConditionalButtonHint = Clicke um neue Bedingung einzugeben
CalculateButton = Berechne
CalculateButtonHint = Clicke um Zustandsvariablen zu berechnen ohne Ereignisse
ReorderButton = Neu ordnen
ReorderButtonHint = Clicken um rechte Spalte in gewuenschter Reihenfolge zu ordnen
AddVariableButton = Zustandsvariable hinzufuegen
AddVariableButtonHint = Clicken um neue Zeile in der Zustandstabelle zu erzeugen.
CheckVariableButton = Zustandsvariablen kontrollieren
CheckVariableButtonHint = In Zustandsspalte Klicken und druecken um informationen in Zustandstabelle zu kontrollieren. 
UpdateConditionalButton = Bedingungen aktualisieren
UpdateConditionalButtonHint = Druecken um Aenderungen zu speichern und zu Logikbearbeitung zurueckzukehren
CancelConditionalButtonHint = Druecken um ohne Aenderungen zu speichern zu Logikbearbeitung zurueckzukehren
DeleteConditionalButton = Bedingung loeschen
DeleteConditionalButtonHint = Druecken um Bedingung zu loeschen und zu Logikbearbeitung zurueckzukehren

NameHintTurnout = Geben Sie Namen (System oder Nutzer) fuer Weiche um dieses Ereignis zu empfangen
NameHintSensor = Geben Sie Namen (System oder Nutzer) fuer Sensor um dieses Ereignis zu empfangen
NameHintSignal = Geben Sie Namen (System oder Nutzer) fuer Lichtsignal um dieses Ereignis zu empfangen
NameHintLight = Geben Sie Namen (System oder Nutzer) fuer Licht um dieses Ereignis zu empfangen
NameHintRoute = Geben Sie Namen (System oder Nutzer) fuer zu beeinflussende Weichenstrasse
NameHintMemory = Geben Sie Namen (System oder Nutzer) fuer zu beeinflussenden Speicher
NameHintLogix = Geben Sie Namen (System oder Nutzer) fuer Logik um dieses Ereignis zu empfangen 
TurnoutSetHint = Waehle "Geradeaus" oder "Abzweigung" je nach Vorgabe der Weichenstellung
SensorSetHint = Waehle "Besetzt" oder "Frei" je nach Vorgabe des Sensorstatus
LightSetHint = Waehle "Ein" oder "Aus" je nach Vorgabe der Bedingung fuer Licht
SignalSetHint = Waehle geforderte Signalstellung
DataHintDelayedSensor = Waehle Verzoegerungszeit (Sekunden) fuer Sensor
DataHintMemory = Waehle geforderter Zustand des Speichers
DataHintSound = Waehle zu spielendes Soundfile
DataHintScript = Waehle zu startendes Skript
SetHintSound = Clicke im Dokumentwahldialog auf ein Soundfile der Wahl
SetHintScript = Clicke im Dokumentwahldialog auf ein Skriptfile der Wahl

ButtonDelete = Loeschen
ButtonFirst = Erstes
ButtonNext = Naechstes
ReorderMessage = Bitte erst "Erstes" druecken, danach "Naechstes", "Naechstens", ... in der gewuenschten Anordnung.

ReminderTitle = Erinnerung
Reminder1 = Bitte das speichern der Logik auf die Festplatte. (Waehle "Speichern der Konfiguration" im Filemenu der Logiktabelle)

TypeSelectMessage = Wariablentyp auswaehlen, danach benoetigte Parameter eingeben
TypeSensorActive = Sensor Aktiv
TypeSensorInactive = Sensor Inaktiv
TypeSensorMessage = Namen (System oder Nutzer) fuer Sensor eingeben (e.g. CS2)
TypeTurnoutThrown = Weiche Abzweigung
TypeTurnoutClosed = Weiche Geradeaus
TypeTurnoutMessage = Namen (System oder Nutzer) fuer Weiche eingeben (e.g. LT12)
TypeConditionalTrue = Conditional True
TypeConditionalFalse = Conditional False
TypeConditionalMessage = Systemnamen fuer Bedingung eingeben (oder Nutzernamen falls Logik)
TypeLightOn = Licht An
TypeLightOff = Licht Aus
TypeLightMessage = Namen (System oder Nutzer) fuer Licht eingeben (e.g. CL21)
TypeMemoryEquals = Speicher mit Wert
TypeMemoryMessage = Namen (System oder Nutzer) fuer Speicher eingebenzugehoeriger Text in Datenfeld 1 
TypeFastClockRange = Spieluhr Bereich
TypeClockMessage = Startzeit in Datenfeld 1, Endzeit in Datenfeld 2 (hh:mm, 24-Stundenuhr)
TypeSignalHeadRed = Signal Rot
TypeSignalHeadYellow = Signal Gelb
TypeSignalHeadGreen = Signal Gruen
TypeSignalHeadDark = Signal Dunkel
TypeSignalHeadFlashRed = Signal Rot Blinkend
TypeSignalHeadFlashYellow = Signal Gelb Blinkend
TypeSignalHeadFlashGreen = Signal Gruen Blinkend
TypeSignalHeadLit = Signal Erleuchtet
TypeSignalHeadHeld = Signal Gehalten
TypeSignalMessage = Namen (System oder Nutzer) fuer Signal eingeben (e.g. IH34)
VariableOKMessage = Alle Zustandsvariablen sind in Ordnung.
VariableErrorMessage = Fehler aufgetreten, bitte korrigieren und erneut versuchen.

ActionNone = Keine
ActionSetTurnout = Setze Weiche
ActionSetSignal = Setze Signalbegriff
ActionSetSignalHeld = Setze Signal haltend
ActionClearSignalHeld = Loesche gehaltenes Signal
ActionSetSignalDark = Setze Signal Dunkel
ActionSetSignalLit = Setze Signal Erleuchtet
ActionTriggerRoute = Weichenstrasse anstossen
ActionSetSensor = Setze Sensor
ActionDelayedSensor = Setze Sensor verzoegert 
ActionSetLight = Setze Liche
ActionSetMemory = Setze Speicher
ActionEnableLogix = Aktiviere Logik
ActionDisableLogix = Deaktiviere Logik
ActionPlaySound = Gerauschdokument abspielen
ActionRunScript = Skript ablaufen lassen
ActionTypeHint = Ereignis auswaehlen oder, falls nicht noetig, "Keine" anwaehlen.

TurnoutClosed = Geradeaus
TurnoutThrown = Abzweigung
SensorActive = Aktiv
SensorInactive = Inaktiv
LightOn = Ein
LightOff = Aus

AppearanceRed = Rot
AppearanceYellow = Gelb
AppearanceGreen = Gruen
AppearanceDark = Dunkel
AppearanceFlashRed = Rot Blinkend
AppearanceFlashYellow = Gelb Blinkend
AppearanceFlashGreen = Gruen Blinkend

ErrorTitle = Fehler
Error1 = Eine Logik mit diesem Systemnamen existiert bereits.\nBitte anderen Namen waehlen und erneut versuchen.
Error3 = Eine Logik mit diesem Nutzernamen existiert bereits.\nBitte anderen Namen waehlen und erneut versuchen.
Error5 = Es existiert keine Logik mit diesem Namen.
Error6 = Dieser neue Nutzernamen wird bereits verwendet. Logik kann nicht aktualisiert werden.\nNutzernamen aendern und erneut versuchen.
Error8 = Systemnamen ungueltig oder noch nicht eingegeben.\nGueltigen Systemnamen eingeben (e.g. IX3) und erneut versuchen.
Error10 = Dieser neue Nutzernamen wird bereits verwendet. Bedingung kann nicht aktualisiert werden.\nNutzernamen aendern und erneut versuchen.
Error11 = Zur Reorganisation sind mindestens zwei Bedingungen notwendig.
Error13 = Der Name "{0}" passt zu keiner existierenden Weiche.\nNamen korrigieren oder Weiche erstellen und erneut versuchen.
Error14 = Der Name "{0}" passt zu keinem existierenden Signal.\nNamen korrigieren oder Signal erstellen und erneut versuchen.
Error15 = Der Name "{0}" passt zu keinem existierenden Sensor.\nNamen korrigieren oder Sensor erstellen und erneut versuchen.
Error16 = Der Name "{0}" passt zu keinem existierenden Licht.\nNamen korrigieren oder Licht erstellen und erneut versuchen.
Error17 = Der Name "{0}" passt zu keinem existierenden Speicher.\nNamen korrigieren oder Speicher erstellen und erneut versuchen.
Error18 = Der Name "{0}" passt zu keiner existierenden Weichenstrasse.\nNamen korrigieren oder Weichenstrasse erstellen und erneut versuchen.
Error19 = Korrigieren oder neu erstellen, falls noetig und erneut versuchen. 
Error20 = Der Name "{0}" passt zu keiner existierenden Bedingung.\nKorrekten System oder Nutzernamen fuer Bedingung eingeben.
Error21 = Anmerkung: Fuer das Arbeiten innerhalb der Tabelle bitte in die Spalte "Zustand" clicken und erneut versuchen.
Error22 = Der Name "{0}" passt zu keiner existierenden Logik.\nNamen korrigieren oder Logik erstellen und erneut versuchen.
Error23 = Ungueltige Sekundeneingabe fuer verzoegerte Sensorreaktion - {0}\nBitte Anzahl Sekunden eingeben (nur Ziffern) und erneut versuchen.
Error25 = Unsinnige oder fehlende Sekundeneingabe fuer verzoegerte Sensorreaktion - {0}\nBitte Anzahl Sekunden eingeben (nur Ziffern) und erneut versuchen.
Error26 = Ungueltige Zeiteingabe "{0}"\nZeit muss im hh:mm Format eingegeben werden (e.g. 01:30, 16:00)\nfuer eine 24-Sunden Uhr. Bitte im korrekten Format eingeben und erneut versuchen. 
Error30 = Doppelte Nutzernameneingabe. Dieser Name ist bereits in Bedingung "{0}" verwendet.\nBitte anderen Nutzernamen aus der Tabelle auswaehlen.
Error32 = Es koennen keine zwei Logiken gleichzeitig bearbeitet werden. Bitte erst Logik "{0}" fertig bearbeiten und erneut versuchen.
Error34 = Es koennen keine zwei Bedingungen gleichzeitig bearbeitet werden. Bitte erst Bedingung "{0}" fertig bearbeiten und erneut versuchen.
Error35 = Es wird gerade eine Bedingung bearbeitet. Bitte erst Bedingung "{0}" fertig bearbeiten und erneut versuchen.
Error36 = Es koennen keine weiteren Bedingungen fuer diese Logik eingegeben werden;\n da die Maximallimite erreicht ist.
Error37 = Es koennen keine weiteren Zustandsvariablen fuer diese Bedingung eingegeben werden;\n da die Maximallimite erreicht ist.

WarnTitle = Warnung
ButtonDisabled = Ausgeschaltet weiterfahren
ButtonEnabled = Eingeschaltet weiterfahren
Logix = Logik
Warn1 = Die letzte Bedingung dieser Logik wurde geloescht.
Warn2 = Eine Logik muss mindestens eine Bedingung enthalten um sinnvoll arbeiten zu koennen.
Warn3 = Die letzte Zustandsvariable fuer diese Bedingung wurde geloescht.\nEine Bedingung muss mindestens eine Zustandsvariable enthalten um sinnvoll arbeiten zu koennen.
Warn5 = Die Bedingung "{0}" enthaelt keine Zustandsvariablen.\nEine Bedingung muss mindestens eine Zustandsvariable enthalten um sinnvoll arbeiten zu koennen.
Warn6 = Warnung - Eine Aenderung {0} von {1} {2} startet die Berechnung dieser Logik.\nIn einigen Bedingungen wurde die Berechnung ein- und in anderen ausgeschaltet.\nBitte Berechnung ueberall ausschalten, wenn jetzt keine Neuberechnung gewuenscht wird.
# Warn7 is inserted as {2} in Warn6 when the item being warned about 
# is a SignalHead, or otherwise has a specific value as part of the trigger.
Warn7 = von oder zu{0}

Warn9 = Die Bedingungen koennten in eine Endlosschlaufe fuehren. \n Die beiden folgenden Beinflussen diese Logik und werden gleichzeitig von ihr beeinflusst:\n
Warn10 = wurde ausgeschaltet wie vorgegeben.\nNicht vergessen, sie spaeter wieder einzuschalten.