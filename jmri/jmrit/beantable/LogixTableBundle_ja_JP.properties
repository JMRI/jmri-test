# Logix\u2122TableBundle.properties
#
# Revision $Revision: 1.3 $
#
# Japanese properties for the jmri.jmrit.Logix\u2122TableAction GUI elements
# Translated by Sakae Akanuma <sakaeakanuma@gmail.com>

LogixSystemName = Logix\u2122 \u30B7\u30B9\u30C6\u30E0\u540D
LogixSystemNameHint = \u65B0\u898F\u306ELogix\u2122\u306E\u540D\u79F0\u3092\u5165\u529B\u3057\u3066\u4E0B\u3055\u3044, \u4F8B.IX13
LogixUserName = Logix\u2122 \u30E6\u30FC\u30B6\u30FC\u540D
LogixUserNameHint = Enter \u30E6\u30FC\u30B6\u30FC\u540D for new Logix\u2122, e.g. Signal 2 Control
LogixUserNameHint2 = Enter new \u30E6\u30FC\u30B6\u30FC\u540D for Logix\u2122, e.g. Signal 2 Control
AddLogixMessage1 = Please enter \u30B7\u30B9\u30C6\u30E0\u540D and \u30E6\u30FC\u30B6\u30FC\u540D, then
AddLogixMessage2 = click Create Logix\u2122, then \u8FFD\u52A0 Conditionals.
CopyLogixMessage1 = Please enter \u30B7\u30B9\u30C6\u30E0\u540D and \u30E6\u30FC\u30B6\u30FC\u540D\n
CopyLogixMessage2 = of target Logix\u2122, then click \u8907\u5199
ConditionalSystemName = Conditional \u30B7\u30B9\u30C6\u30E0\u540D
ConditionalUserName = Conditional \u30E6\u30FC\u30B6\u30FC\u540D
ConditionalUserNameHint = Enter \u30E6\u30FC\u30B6\u30FC\u540D for Conditional, e.g. Signal 2 \u8D64
OptionsMenu = \u30AA\u30D7\u30B7\u30E7\u30F3
SuppressWithDisable = Suppress Save Reminders
SuppressWithEnable = Don't Change Logix\u2122 Enabled/Disable


ColumnLabelSystemName = \u30B7\u30B9\u30C6\u30E0\u540D
ColumnLabelUserName = \u30E6\u30FC\u30B6\u30FC\u540D
ColumnLabelRow = Row
ColumnLabelOperator = Oper
ColumnLabelNot = Neg
ColumnLabelDescription = State Variable Description
ColumnLabelState = State
ColumnLabelTriggersCalculation = Trigger Calculation

# Route Table
ColumnLabelInclude = Include
ColumnLabelSetState = Set State
Set = \u30BB\u30C3\u30C8

# Maintenance Dialog
ElementName = Element Name
ElementNameHint = Enter the System or \u30E6\u30FC\u30B6\u30FC\u540D of an element to find where it is referenced.
ReferenceButton = Get References
OrphanButton = \u8FF7\u5B50\u3092\u635C\u3059
EmptyButton = Empty Cond'ls

TitleAddLogix = Logix\u2122\u8FFD\u52A0
TitleCopyLogix = Logix\u2122\u8907\u5199
TitleEditLogix = Logix\u2122\u7DE8\u96C6
TitleEditConditional = Edit Conditional
TitleEditAction = Edit Action
TitleEditVariable = Edit Variable
TitleLogicalExpression = Logical Expression:
TitleAntecedentPhrase = Antecedent Variable
TitleConsequentPhrase = Consequent Action 
TitleAction = Actions
ConditionalTableTitle = Conditionals (in Order of Calculation)
NotApplicableAbbreviation = N/A
ActionTableTitle = Consequent Actions (the 'then' part) 
StateVariableTableTitle = Antecedent Variables (the 'if' part)
OnChangeToTrue = On Change To True
OnChangeToFalse = On Change To False
OnChange = On Change
FromFile = from file,
After = , after
Seconds = \u79D2
to = to
ValueInMemory = (Memory Value)

True = True
False = False
Unknown = \u4E0D\u660E
LogicAND = \u304B\u3064
LogicOR = \u307E\u305F\u306F
LogicNOT = \u5426\u5B9A
LogicMixed = Mixed
rowAbrev = R

LabelLogicType = \u30ED\u30B8\u30C3\u30AF\u30AA\u30DA\u30EC\u30FC\u30BF\u30FC
TypeLogicHint = Choose logic operator joining state variables for the antecedent ('if' part) of this conditional
LabelAntecedent = Antecedent Expression (the 'if' part of the Conditional)
LabelAntecedentHint = Insert parenthesis so the statement satisfies the logic you want
HelpButton = \u30D8\u30EB\u30D7
LogicHelpText1 = Mixing AND's and OR's may introduce ambiguous evaluations. The antecedent\n
LogicHelpText2 = statement is evaluated from left to right, which corresponds to computing\n
LogicHelpText3 = the innermost variable on the left to the outermost variable on the right.\n
LogicHelpText4 = To modify this order of evaluation, please insert parenthesis to indicate the
LogicHelpText5 = logic you want.  You may also modify the operators to use.  The evaluation
LogicHelpText6 = logic of 'Mixed' mode is the content of the antecedent field and not the\n
LogicHelpText7 = operators shown in the rows of the state variable table.

CreateLogixButton = Create Logix\u2122
LogixCreateButtonHint = Press to create a new Logix\u2122
DoneButton = \u5B8C\u4E86
DoneButtonHint = Press to save any \u30E6\u30FC\u30B6\u30FC\u540D changes and return to Logix\u2122 Table
DeleteLogixButton = \u524A\u9664 Logix\u2122
DeleteLogixButtonHint = Press to \u524A\u9664 this Logix\u2122 and all its Conditionals
CancelButton = \u30AD\u30E3\u30F3\u30BB\u30EB
CancelLogixButtonHint = Press to return to Logix\u2122 Table without any changes
NewConditionalButton = New Conditional
NewConditionalButtonHint = Press for window to create a new Conditional
CalculateButton = Calculate
CalculateButtonHint = Press to calculate Conditional states without action
ReorderButton = Reorder
ReorderButtonHint = Press then click in right column in order desired
AddVariableButton = \u8FFD\u52A0 State Variable
AddVariableButtonHint = Press to \u8FFD\u52A0 a new row in State Variable table
CheckVariableButton = Check State Variables
CheckVariableButtonHint = Press to evaluate current state of the Variables
UpdateConditionalButton = Update Conditional
UpdateConditionalButtonHint = Press to keep changes and return to Edit Logix\u2122
CancelConditionalButtonHint = Press to return to Edit Logix\u2122 without any changes
DeleteConditionalButton = \u524A\u9664 Conditional
DeleteConditionalButtonHint = Press to \u524A\u9664 this Conditional and return to Edit Logix\u2122
addActionButton = \u8FFD\u52A0 Action
addActionButtonHint = Press to \u8FFD\u52A0 a new row to Action Table
UpdateButton = \u66F4\u65B0
DeleteButton = \u524A\u9664
UpdateButtonHint = Press to keep changes and return to Edit Conditional
CancelButtonHint = Press to return to Edit Conditional without any changes
DeleteButtonHint = Press to \u524A\u9664 and return to Edit Conditional

NameHintTurnout = Enter Name (system or user) for \u5206\u5C90 (e.g. LT12)
NameHintSensor = Enter Name (system or user) for \u30BB\u30F3\u30B5\u30FC (e.g. CS2)
NameHintSignal = Enter Name (system or user) for Signal Head (e.g. IH34)
NameHintLight = Enter Name (system or user) for Light (e.g. CL21)
NameHintRoute = Enter name (system or user) of Route to be triggered
NameHintMemory = Enter name (system or user) of Memory
CompareHintMemory = Select an operator to compare memory values
NameHintLogix = Enter name (system or user) of Logix\u2122 to receive this action
NameHintConditional = Enter \u30B7\u30B9\u30C6\u30E0\u540D for Conditional (or \u30E6\u30FC\u30B6\u30FC\u540D if in this Logix\u2122)
TurnoutSetHint = \u9078\u629E Closed or Thrown depending upon how \u5206\u5C90 is to be set
SensorSetHint = \u9078\u629E Active or Inactive depending upon how \u30BB\u30F3\u30B5\u30FC is to be set
LightSetHint = \u9078\u629E On or Off depending upon how Light is to be set
SignalSetHint = \u9078\u629E Signal Head Appearance to set
LockSetHint = \u9078\u629E Lock or Unlock
DataHintDelayedSensor = Enter time (seconds) to wait before setting \u30BB\u30F3\u30B5\u30FC
DataHintDelayedTurnout = Enter time (seconds) to wait before setting \u5206\u5C90
DataHintMemory = Enter value Memory is to be set to
DataHintSound = Enter name of sound file to be played
DataHintScript = Enter name of script to be run
SetHintSound = Click for a file \u9078\u629Eion dialog for choosing a sound file
SetHintScript = Click for a file \u9078\u629Eion dialog for choosing a script file
DataHintTime = Enter time (hh:mm) for a 24-hour clock
NameHintFromMemory = Enter name (system or user) of Memory to be copied from
DataHintToMemory = Enter name (system or user) of Memory to receive the copied value
DataHintLightIntensity = Enter intensity percentage as an integer 0 to 100.
DataHintLightTransitionTime = \u756A\u53F7 of fast clock minutes to transition between 0% and 100%\u3092\u5165\u529B\u3057\u3066\u4E0B\u3055\u3044.

ButtonDelete = \u524A\u9664
ButtonEdit = \u7DE8\u96C6
ButtonFirst = \u5148\u982D
ButtonNext = \u6B21
ReorderMessage = Please press First, then Next, Next, ... in desired order.
ButtonCopy = \u8907\u5199
ButtonMove = Move
ButtonSelect = \u9078\u629E
ConfirmTitle = Question
ConfirmLogixDelete = Are you sure you want to \u524A\u9664 Logix\u2122 "{0}"?
ConfirmLogixDuplicate = Logix\u2122 "{0}" already exists. Do you want \u8907\u5199\nthe Conditionals of Logix\u2122 "{1}" into "{0}"?
NameConditionalCopy = Rename the \u8907\u5199 of Conditional "{0}" ({1})\nin Logix\u2122 {2}being copied into Logix\u2122 "{3}" ({4}).\nPress Cancel if you don't want to \u8907\u5199 this conditional.

ReminderTitle = Reminder
Reminder1 = Please remember to save your Logix\u2122s to disk.  (\u9078\u629E\n'Store Configuration...' in File menu of Logix\u2122 Table.)

TypeVariableHint = \u4F7F\u7528\u3059\u308B\u72B6\u614B\u5909\u6570\u306E\u7A2E\u985E\u3092\u9078\u629E\u3057\u3066\u4E0B\u3055\u3044\u3002
TypeSensorActive = \u30BB\u30F3\u30B5\u30FC\u52D5\u4F5C
TypeSensorInactive = \u30BB\u30F3\u30B5\u30FC\u975E\u52D5\u4F5C
TypeTurnoutThrown = \u5206\u5C90\u304C\u53CD\u4F4D
TypeTurnoutClosed = \u5206\u5C90\u304C\u5B9A\u4F4D
TypeConditionalTrue = \u6761\u4EF6\u304C\u771F
TypeConditionalFalse = \u6761\u4EF6\u304C\u507D
TypeLightOn = \u30E9\u30A4\u30C8\u70B9\u706F
TypeLightOff = \u30E9\u30A4\u30C8\u6D88\u706F
TypeMemoryEquals = \u30E1\u30E2\u30EA\u30FC\u540C\u5024
TypeMemoryCompare = Memory-Memory Compare
TypeFastClockRange = \u30D5\u30A1\u30B9\u30C8\u30AF\u30ED\u30C3\u30AF\u7BC4\u56F2
TypeSignalHeadRed = \u8D64\u4FE1\u53F7
TypeSignalHeadYellow = \u9EC4\u4FE1\u53F7
TypeSignalHeadGreen = \u7DD1\u4FE1\u53F7
TypeSignalHeadDark = \u4FE1\u53F7\u6D88\u706F
TypeSignalHeadFlashRed = \u8D64\u70B9\u6EC5\u4FE1\u53F7
TypeSignalHeadFlashYellow = \u9EC4\u70B9\u6EC5\u4FE1\u53F7
TypeSignalHeadFlashGreen = \u7DD1\u70B9\u6EC5\u4FE1\u53F7
TypeSignalHeadLit = \u4FE1\u53F7\u70B9\u706F
TypeSignalHeadHeld = \u4FE1\u53F7\u4FDD\u6301

VariableOKMessage = \u3059\u3079\u3066\u306E\u72B6\u614B\u5909\u6570\u306F\u826F\u597D\u3067\u3059.
VariableErrorMessage = \u8AA4\u308A\u304C\u691C\u51FA\u3055\u308C\u307E\u3057\u305F\u3002\u4FEE\u6B63\u3057\u3066\u304B\u3089\u3082\u3046\u4E00\u5EA6\u8A66\u3057\u3066\u4E0B\u3055\u3044\u3002
ActionOKMessage = \u3059\u3079\u3066\u306E\u52D5\u4F5C\u306F\u6B63\u5E38\u3067\u3059\u3002
NoActionMessage = \uFF11\u3064\u306E\u72B6\u614B\u306F\u3001\u5C11\u306A\u304F\u3068\u3082\u3072\u3068\u3064\u306E\u72B6\u614B\u5909\u6570\u3068\u3001\u901A\u5E381\u3064\u4EE5\u4E0A\u306E\u52D5\u4F5C\u3092\u542B\u307F\u307E\u3059\u3002

FileButton = \u30D5\u30A1\u30A4\u30EB
LabelActionType = \u52D5\u4F5C\u6642\u9593
LabelVariableType = \u5909\u5316\u6642\u9593
LabelMemoryValue  = \u30E1\u30E2\u30EA\u30FC\u306E\u5024
LabelStartTime  = \u958B\u59CB\u6642\u9593
LabelEndTime    = \u7D42\u4E86\u6642\u9593
LabelCompareOp  = \u4EE5\u4E0B\u306E\u5024\u3092\u6BD4\u8F03
LabelActionOption = \u30AA\u30D7\u30B7\u30E7\u30F3\u5909\u66F4
LabelActionName = \u30B7\u30B9\u30C6\u30E0 / \u30E6\u30FC\u30B6\u30FC\u540D
LabelActionTurnout = \u5206\u5C90\u65B9\u5411
LabelActionSensor = \u30BB\u30F3\u30B5\u30FC\u72B6\u614B
LabelActionLight = \u706F\u706B\u72B6\u614B
LabelActionSignal = \u4FE1\u53F7\u306E\u5411\u304D
LabelActionLock = \u30ED\u30C3\u30AF\u72B6\u614B
LabelActionFile = \u30D5\u30A1\u30A4\u30EB\u3092\u30BB\u30C3\u30C8
LabelActionText = \u52D5\u4F5C\u306E\u30C7\u30FC\u30BF
LabelActionDescription = \u52D5\u4F5C\u306E\u8A18\u8FF0

ActionNone = \u7121\u3057
ActionSetTurnout = \u5206\u5C90\u8A2D\u5B9A
ActionSetSignal = \u4FE1\u53F7\u8868\u793A\u8A2D\u5B9A
ActionSetSignalHeld = \u4FE1\u53F7\u4FDD\u6301\u8A2D\u5B9A
ActionClearSignalHeld = Clear Signal Held
ActionSetSignalDark = Set Signal Dark
ActionSetSignalLit = \u4FE1\u53F7\u70B9\u706F\u8A2D\u5B9A
ActionTriggerRoute = \u30C8\u30EA\u30AC\u30FC\u30EB\u30FC\u30C8
ActionSetSensor = \u30BB\u30F3\u30B5\u30FC\u8A2D\u5B9A
ActionDelayedSensor = \u9045\u5EF6\u30BB\u30F3\u30B5\u30FC\u8A2D\u5B9A
ActionResetDelayedSensor = Reset Delayed Set \u30BB\u30F3\u30B5\u30FC
ActionCancelSensorTimers = Cancel Timers for \u30BB\u30F3\u30B5\u30FC
ActionDelayedTurnout = \u9045\u5EF6\u5206\u5C90\u8A2D\u5B9A
ActionResetDelayedTurnout = \u9045\u5EF6\u5206\u5C90\u8A2D\u5B9A\u306E\u53D6\u308A\u6D88\u3057
ActionCancelTurnoutTimers = \u5206\u5C90\u30BF\u30A4\u30DE\u30FC\u306E\u53D6\u308A\u6D88\u3057
ActionSetLight = \u30E9\u30A4\u30C8\u8A2D\u5B9A
ActionSetLightIntensity = \u30E9\u30A4\u30C8\u8F1D\u5EA6\u306E\u8A2D\u5B9A
ActionSetLightTransitionTime = \u30E9\u30A4\u30C8\u79FB\u884C\u6642\u9593\u306E\u8A2D\u5B9A
ActionSetMemory = \u30E1\u30E2\u30EA\u30FC\u3092\u30BB\u30C3\u30C8
ActionCopyMemory = \u30E1\u30E2\u30EA\u30FC\u540C\u58EB\u306E\u8907\u5199
ActionEnableLogix = Logix\u2122\u6709\u52B9
ActionDisableLogix = Logix\u2122\u7121\u52B9
ActionPlaySound = \u52B9\u679C\u97F3\u30D5\u30A1\u30A4\u30EB\u518D\u751F
ActionRunScript = \u30B9\u30AF\u30EA\u30D7\u30C8\u5B9F\u884C
ActionTurnoutLock = \u5206\u5C90\u3092\u30ED\u30C3\u30AF
ActionSetFastClockTime = \u30D5\u30A1\u30B9\u30C8\u30AF\u30ED\u30C3\u30AF\u6642\u9593\u8A2D\u5B9A
ActionStartFastClock = \u30D5\u30A1\u30B9\u30C8\u30AF\u30ED\u30C3\u30AF\u3092\u958B\u59CB
ActionStopFastClock = \u30D5\u30A1\u30B9\u30C8\u30AF\u30ED\u30C3\u30AF\u3092\u505C\u6B62
ActionTypeHint = \u9078\u629E type of action, or \u9078\u629E None if no action is needed.
ActionOptionHint = \u9078\u629E when action should occur

TurnoutClosed = \u5B9A\u4F4D
TurnoutThrown = \u53CD\u4F4D
TurnoutUnlock = \u30A2\u30F3\u30ED\u30C3\u30AF
TurnoutLock = \u30ED\u30C3\u30AF
SensorActive = Active
SensorInactive = Inactive
LightOn = On
LightOff = Off
Toggle = \u5207\u66FF
Sensor = \u30BB\u30F3\u30B5\u30FC
Turnout = \u5206\u5C90
Conditional = \u6761\u4EF6\u4ED8
Light = \u706F\u706B
Memory = \u30E1\u30E2\u30EA\u30FC
SignalHead = \u4FE1\u53F7\u6A5F
Signal = \u4FE1\u53F7
Logix = Logix\u2122
FastClock = \u30D5\u30A1\u30B9\u30C8\u30AF\u30ED\u30C3\u30AF
VarStateDescrpt = {0} "{1}" state is {2}
MemoryValueDescrpt = {0} "{1}" {2} value "{3}"
MemoryCompareDescrpt = {0} "{1}" {2} {0} "{3}"
FastClockDescrpt = {0} range from {1} to {2}
CopyOf = \u8907\u5199 of {0}

LessThan        = \u672A\u6E80
LessOrEqual     = \u4EE5\u4E0B
Equal           = \u7B49\u5024
GreaterOrEqual  = \u4EE5\u4E0A
GreaterThan     = \u9AD8\u5024

AppearanceRed = \u8D64\u70B9\u706F
AppearanceYellow = \u9EC4\u70B9\u706F
AppearanceGreen = \u7DD1\u70B9\u706F
AppearanceDark = \u6697\u70B9\u706F
AppearanceFlashRed = \u8D64\u70B9\u6EC5
AppearanceFlashYellow = \u9EC4\u70B9\u6EC5
AppearanceFlashGreen = \u7DD1\u70B9\u6EC5

ErrorTitle = \u30A8\u30E9\u30FC
Error1 = \u3053\u306E\u30B7\u30B9\u30C6\u30E0\u540D\u306ELogix\u2122\u306F\u65E2\u306B\u5B58\u5728\u3057\u307E\u3059\u3002\n\u30B7\u30B9\u30C6\u30E0\u540D\u3092\u5909\u66F4\u3057\u3066\u3084\u308A\u76F4\u3057\u3066\u4E0B\u3055\u3044\u3002.
Error3 = \u3053\u306E\u30E6\u30FC\u30B6\u30FC\u540D\u306ELogix\u2122\u306F\u65E2\u306B\u5B58\u5728\u3057\u307E\u3059\u3002\n\u30E6\u30FC\u30B6\u30FC\u540D\u3092\u5909\u66F4\u3057\u3066\u3084\u308A\u76F4\u3057\u3066\u4E0B\u3055\u3044\u3002
Error5 = \u6307\u5B9A\u3055\u308C\u305F\u30B7\u30B9\u30C6\u30E0\u540D\u306ELogix\u2122\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3002.
Error6 = \u6307\u5B9A\u3055\u308C\u305F\u30E6\u30FC\u30B6\u30FC\u540D\u306F\u65E2\u306B\u4F7F\u7528\u6E08\u307F\u3067\u3059\u3002\u3053\u306ELogix\u2122\u306F\u66F4\u65B0\u3067\u304D\u307E\u305B\u3093\u3002.\n\u30E6\u30FC\u30B6\u30FC\u540D\u3092\u5909\u66F4\u3057\u3066\u3084\u308A\u76F4\u3057\u3066\u4E0B\u3055\u3044\u3002
Error4 = \u3053\u306ELogix\u2122\u306E\u8D77\u52D5\u6642\u306B\u4EE5\u4E0B\u306E\u8AA4\u308A\u304C\u691C\u51FA\u3055\u308C\u307E\u3057\u305F\u3002\n
Error7 = \nLogix\u2122\u306E\u53C2\u7167\u3092\u4FEE\u6B63\u3059\u308B\u304B\u3001\u524A\u9664\u3057\u3066\u4E0B\u3055\u3044\u3002 .
Error8 = \u7121\u52B9\u306A\u30B7\u30B9\u30C6\u30E0\u540D\u3067\u3059\u3001\u307E\u305F\u306F\u30B7\u30B9\u30C6\u30E0\u540D\u304C\u5165\u529B\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002\n\u9069\u5207\u306ALogix\u2122 \u30B7\u30B9\u30C6\u30E0\u540D (\u4F8B IX3)\u3092\u5165\u529B\u3057\u3066\u3084\u308A\u76F4\u3057\u3066\u4E0B\u3055\u3044\u3002
Error9  = Enter an integer (digits only) or a Memory variable containing\nan integer for the number of seconds to {0} .
Error10 = New \u30E6\u30FC\u30B6\u30FC\u540D is already in use. Cannot update this Conditional.\nPlease change \u30E6\u30FC\u30B6\u30FC\u540D and try again.
Error11 = Conditional "{0}" ({1}) is a Conditional Variable in the Conditional,\n"{2}" ({3}), of Logix\u2122, "{4}" ({5}).\nPlease remove that variable first.
Error13 = "{0}"\u3068\u3044\u3046\u540D\u79F0\u306F\u3001\u65E2\u77E5\u306E\u5206\u5C90.\n\u540D\u79F0\u3092\u4FEE\u6B63\u3059\u308B\u304B\u3001\u65B0\u898F\u306B\u4F5C\u6210\u3057\u3001\u3082\u3046\u4E00\u5EA6\u8A66\u3057\u3066\u4E0B\u3055\u3044\u3002
Error14 = "{0}"\u3068\u3044\u3046\u540D\u79F0\u306F\u3001\u65E2\u77E5\u306Esignal head.\n\u540D\u79F0\u3092\u4FEE\u6B63\u3059\u308B\u304B\u3001\u65B0\u898F\u306B\u4F5C\u6210\u3057\u3001\u3082\u3046\u4E00\u5EA6\u8A66\u3057\u3066\u4E0B\u3055\u3044\u3002
Error15 = "{0}"\u3068\u3044\u3046\u540D\u79F0\u306F\u3001\u65E2\u77E5\u306E\u30BB\u30F3\u30B5\u30FC.\n\u540D\u79F0\u3092\u4FEE\u6B63\u3059\u308B\u304B\u3001\u65B0\u898F\u306B\u4F5C\u6210\u3057\u3001\u3082\u3046\u4E00\u5EA6\u8A66\u3057\u3066\u4E0B\u3055\u3044\u3002
Error16 = "{0}"\u3068\u3044\u3046\u540D\u79F0\u306F\u3001\u65E2\u77E5\u306Elight.\n\u540D\u79F0\u3092\u4FEE\u6B63\u3059\u308B\u304B\u3001\u65B0\u898F\u306B\u4F5C\u6210\u3057\u3001\u3082\u3046\u4E00\u5EA6\u8A66\u3057\u3066\u4E0B\u3055\u3044\u3002
Error17 = "{0}"\u3068\u3044\u3046\u540D\u79F0\u306F\u3001\u65E2\u77E5\u306Ememory.\n\u540D\u79F0\u3092\u4FEE\u6B63\u3059\u308B\u304B\u3001\u65B0\u898F\u306B\u4F5C\u6210\u3057\u3001\u3082\u3046\u4E00\u5EA6\u8A66\u3057\u3066\u4E0B\u3055\u3044\u3002
Error18 = "{0}"\u3068\u3044\u3046\u540D\u79F0\u306F\u3001\u65E2\u77E5\u306Eroute.\n\u540D\u79F0\u3092\u4FEE\u6B63\u3059\u308B\u304B\u3001\u65B0\u898F\u306B\u4F5C\u6210\u3057\u3001\u3082\u3046\u4E00\u5EA6\u8A66\u3057\u3066\u4E0B\u3055\u3044\u3002
Error19 = \u540D\u79F0\u3092\u4FEE\u6B63\u3059\u308B\u304B\u3001\u65B0\u898F\u306B\u4F5C\u6210\u3057\u3001\u3082\u3046\u4E00\u5EA6\u8A66\u3057\u3066\u4E0B\u3055\u3044\u3002
Error20 = "{0}"\u3068\u3044\u3046\u540D\u79F0\u306F\u3001\u65E2\u77E5\u306Econditional.\nPlease enter a valid conditional \u30B7\u30B9\u30C6\u30E0\u540D, or the \u30E6\u30FC\u30B6\u30FC\u540D of a conditional in this Logix\u2122.
Error21 = Note: If you were editing in table, click in State column and try again.
Error22 = "{0}"\u3068\u3044\u3046\u540D\u79F0\u306F\u3001\u65E2\u77E5\u306ELogix\u2122.\n\u540D\u79F0\u3092\u4FEE\u6B63\u3059\u308B\u304B\u3001\u65B0\u898F\u306B\u4F5C\u6210\u3057\u3001\u3082\u3046\u4E00\u5EA6\u8A66\u3057\u3066\u4E0B\u3055\u3044\u3002
Error23 = Invalid entry for \u756A\u53F7 of seconds to wait for Delayed Set \u30BB\u30F3\u30B5\u30FC action - {0}\nPlease enter \u756A\u53F7 of seconds (digits only), and try again.
Error25 = Unreasonable or missing entry of time to wait for Delayed Set \u30BB\u30F3\u30B5\u30FC action - {0}\nPlease enter a positive \u756A\u53F7 of seconds less than 1 hour, and try again.
Error26 = Invalid time entry "{0}"\nTime must be entered in hh:mm format (e.g. 01:30, 16:00)\nfor a 24-hour clock. Please reenter in correct format, and try again. 
Error27 = Invalid entry for \u756A\u53F7 of seconds to wait for Reset Delayed Set \u30BB\u30F3\u30B5\u30FC action - {0}\nPlease enter \u756A\u53F7 of seconds (digits only), and try again.
Error29 = \u30E9\u30A4\u30C8\u306E\u79FB\u884C\u6642\u9593\u306E\u8A2D\u5B9A
Error30 = Duplicate \u30E6\u30FC\u30B6\u30FC\u540D error. Entered \u30E6\u30FC\u30B6\u30FC\u540D is already in use by Conditional "{0}".\nPlease enter a different \u30E6\u30FC\u30B6\u30FC\u540D from others in this table.
Error31 = \u8907\u5199 of Logix\u2122 "{0}" in progress.  Please complete and try again.
Error32 = Cannot edit two Logix\u2122s at the same time. Please complete edit of Logix\u2122 "{0}" and try again.
Error34 = Cannot edit two Conditionals at the same time. Please complete edit of Conditional "{0}" and try again.
Error35 = Edit conditional in progress. Please complete edit of Conditional "{0}" and try again.
Error38 = {0} is an unreasonable amount to {1}\nPlease enter a positive number of seconds less than 1 hour, and try again.
Error39 = \u9045\u5EF6\u5206\u5C90\u52D5\u4F5C\u8A2D\u5B9A
Error40 = Light - {0} - does not support transition time.\nPlease enter a light with Transition Time or change action type, and try again.
Error41 = \u9045\u5EF6\u5206\u5C90\u52D5\u4F5C\u521D\u671F\u5316
Error42 = Set Light Intensity action
Error43 = Enter an integer (digits only) or a Memory variable containing\nan integer to Set Light Intensity.
Error45 = Light - {0} - does not have variable intensity.\nPlease enter a light with variable intensity or change action type, and try again.
Error46 = \u30A2\u30AF\u30B7\u30E7\u30F3\u3092\u4E26\u3079\u66FF\u3048\u308B\u306B\u306F\u5C11\u306A\u304F\u3068\u3082\uFF12\u3064\u306E\u30A2\u30AF\u30B7\u30E7\u30F3\u304C\u5FC5\u8981\u3067\u3059\u3002
Error47 = Edit of State Variable in progress. Please complete and try again.
Error48 = Edit of Action in progress. Please complete edit and try again.

ParseError1 = \u5DE6\u5074\u306E\u5F15\u6570\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3002 < {0} >
ParseError2 = Could not find expected operator. < {0} >
ParseError3 = Could not find expected Right argument. < {0} >
ParseError4 = Antecedent parsing error: Unexpected character found. < {0} > 
ParseError5 = Antecedent parsing error: All {0} rows must be used.  Row {1} is missing.
ParseError6 = Exception thrown while parsing antecedent\n
ParseError7 = \u62EC\u5F27\u304C\u5BFE\u5FDC\u3057\u3066\u3044\u307E\u305B\u3093\u3002 < {0} >.\u304C\u3042\u308A\u307E\u305B\u3093\u3002
ParseError8 = \nIf the above message is 'String index out of range:', the following \u756A\u53F7 is the position in the antecedent where the error occurred.
ParseError9 = < {0} >\u306F\u3001\u60F3\u5B9A\u5916\u306E\u30AA\u30DA\u30EC\u30FC\u30BF\u30FC\u307E\u305F\u306F\u30AD\u30E3\u30E9\u30AF\u30BF\u30FC\u3067\u3059\u3002

WarnTitle = \u8B66\u544A
ButtonDisabled = \u7D99\u7D9A\u7121\u52B9
ButtonEnabled = \u7D99\u7D9A\u6709\u52B9
Warn1 = The last Conditional has been \u524A\u9664d from this Logix\u2122.
Warn2 = Logix\u2122 \u306F\u5C11\u306A\u304F\u3068\u3082\uFF11\u3064\u306E\u72B6\u614B\u3092\u8A2D\u5B9A\u3057\u306A\u3044\u3068\u4F55\u3082\u8D77\u3053\u308A\u307E\u305B\u3093\u3002
Warn3 = The last State Variable has been \u524A\u9664d from this Conditional.\nA Conditional must have at least one State Variable to do anything useful.
Warn5 = The Conditional {0} ({1}) has no State Variables.\nA Conditional must have at least one State Variable to do anything useful.
#Warn6 = Warning - A change in the {0} of {1} {2} will trigger calculation of this Logix\u2122.\nYou have Triggers Calculation checked for some occurrences and unchecked for others.\nPlease uncheck all occurrences if you do not want calculation to be triggered by this change.
# Warn7 is inserted as {2} in Warn6 when the item being warned about 
# is a SignalHead, or otherwise has a specific value as part of the trigger.
#Warn7 = to or from {0}
Warn8 = Logix\u2122\u306E\u6761\u4EF6 "{0}" ({1})\n\u306F\u7DE8\u96C6\u3067\u304D\u307E\u305B\u3093\u3002Go to the \u30BB\u30F3\u30B5\u30FC Group Table to edit \u30BB\u30F3\u30B5\u30FC groups.
Warn9 = Conditions exist that could result in a logic loop. \n The following both trigger this Logix\u2122 and are changed by it:\n
Warn10 = was disabled as requested.\nPlease remember to enable it later.
Warn11 = \nYou may \u524A\u9664Conditional "{0}" ({1})\nor edit it from the template window where it was created.