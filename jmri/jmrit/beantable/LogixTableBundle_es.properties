# LogixTableBundle.properties
#
# Revision $Revision: 1.1 $
#
# Default properties for the jmri.jmrit.LogixTableAction GUI elements

LogixSystemName = Nombre de sistema Logix
LogixSystemNameHint = Ponga el nombre de sistema para el nuevo Logix, p.e. IX13
LogixUserName = Nombre de usuario del Logix
LogixUserNameHint = Ponga el nombre de usuario para el nuevo Logix, p.e. Semaforo 2
LogixUserNameHint2 = Ponga el nombre de usuario para el Logix, p.e. Semaforo 2
AddLogixMessage1 = Por favor, ponga el nombre de sistema y el de usuario, y 
AddLogixMessage2 = luego pulse en Crear Logix, y luego ponga Condiciones.
ConditionalSystemName = Nombre de sistema de la condicion
ConditionalUserName = Nombre de usuario de la condicion
ConditionalUserNameHint = Ponga el nombre de usuario para la condicion, p.e. Semaforo 2 en rojo

ColumnLabelSystemName = Nombre de sistema
ColumnLabelName = Nombre
ColumnLabelUserName = Nombre de usuario
ColumnLabelState = Estado
ColumnLabelVariableType = Tipo Variable
ColumnLabelData1 = Dato 1
ColumnLabelData2 = Dato 2
ColumnLabelTriggersCalculation = Calculo de disparo

TitleAddLogix = Agregar Logix
TitleEditLogix = Editar Logix
TitleEditConditional = Editar Condicion
TitleLogicalExpression = Expresion logica
TitleAction	= Acciones
ConditionalTableTitle = Condiciones ( por orden de calculo, max
StateVariableTableTitle = Variables de estado ( max 
LogicalExpressionTitle = Expresion logica
NotApplicableAbbreviation = N/A
ActionTitle = Acciones
Action1Title = Accion 1 - Accion de disparo 
Action2Title = Accion 2 - Accion de disparo
OnChangeToTrue = Al cambiar a verdadero
OnChangeToFalse = Al cambiar a falso
OnChange = Al cambiar
Action1Type = Accion 1 - Tipo 
Action2Type = Accion 2 - Tipo 

True = Verdadero
False = Falso
Unknown = Desconocido
LogicAND = Y
LogicNOT = NO

CreateLogixButton = Crear Logix
LogixCreateButtonHint = Pulsar para crear un Logix
DoneButton = Hecho
DoneButtonHint = Pulsar para guardar cambios de nombre de usuario y volver a la tabla de Logix
DeleteLogixButton = Borrar Logix
DeleteLogixButtonHint = Pulsar para borrar este Logix y todas sus condiciones
CancelButton = Cancelar
CancelButtonHint = Pulsar para volver a la tabla de Logix sin cambiar nada
NewConditionalButton = Nueva condicion
NewConditionalButtonHint = Pulsar para sacar una ventana para crear una nueva condicion
CalculateButton = Calcular
CalculateButtonHint = Pulsar para calcular estados condicionales sin accion
ReorderButton = Reordenar
ReorderButtonHint = Pulsar y luego pulsar en la columna derecha el orden deseado
AddVariableButton = Agregar variable de estado
AddVariableButtonHint = Pulsar para agregar una fila en la tabla de variables de estado
CheckVariableButton = Check State Variables
CheckVariableButtonHint = Click in state column, then press to check information in State Variable table. 
UpdateConditionalButton = Update Conditional
UpdateConditionalButtonHint = Press to keep changes and return to Edit Logix
CancelConditionalButtonHint = Press to return to Edit Logix without any changes
DeleteConditionalButton = Delete Conditional
DeleteConditionalButtonHint = Press to delete this Conditional and return to Edit Logix

NameHintTurnout = Enter name (system or user) for turnout to receive this action
NameHintSensor = Enter name (system or user) for sensor to receive this action
NameHintSignal = Enter name (system or user) for signal to receive this action
NameHintLight = Enter name (system or user) for light to receive this action
NameHintRoute = Enter name (system or user) of Route to be triggered
NameHintMemory = Enter name (system or user) of Memory to be set
NameHintLogix = Enter name (system or user) of Logix to receive this action 
TurnoutSetHint = Select Closed or Thrown depending upon how Turnout is to be set
SensorSetHint = Select Active or Inactive depending upon how Sensor is to be set
LightSetHint = Select On or Off depending upon how Light is to be set
SignalSetHint = Select Signal Head Appearance to set
DataHintDelayedSensor = Enter time (seconds) to wait before setting sensor
DataHintDelayedTurnout = Enter time (seconds) to wait before setting turnout
DataHintMemory = Enter value Memory is to be set to
DataHintSound = Enter name of sound file to be played
DataHintScript = Enter name of script to be run
SetHintSound = Click for a file selection dialog for choosing a sound file
SetHintScript = Click for a file selection dialog for choosing a script file

ButtonDelete = Delete
ButtonFirst = First
ButtonNext = Next
ReorderMessage = Please press First, then Next, Next, ... in desired order.

ReminderTitle = Reminder
Reminder1 = Please remember to save your Logixs to disk.  (Select\n'Store Configuration...' in File menu of Logix Table.)

TypeSelectMessage = Select Variable Type, then enter required information
TypeSensorActive = Sensor Active
TypeSensorInactive = Sensor Inactive
TypeSensorMessage = Enter Name (system or user) for Sensor (e.g. CS2)
TypeTurnoutThrown = Turnout Thrown
TypeTurnoutClosed = Turnout Closed
TypeTurnoutMessage = Enter Name (system or user) for Turnout (e.g. LT12)
TypeConditionalTrue = Conditional True
TypeConditionalFalse = Conditional False
TypeConditionalMessage = Enter System Name for Conditional (or User Name if in this Logix)
TypeLightOn = Light On
TypeLightOff = Light Off
TypeLightMessage = Enter Name (system or user) for Light (e.g. CL21)
TypeMemoryEquals = Memory Equals
TypeMemoryMessage = Enter Name (system or user) for Memory, and matching Text in Data 1 
TypeFastClockRange = Fast Clock Range
TypeClockMessage = Enter beginning time in Data 1, and end time in Data 2 (hh:mm, 24-hour clock)
TypeSignalHeadRed = Signal Red
TypeSignalHeadYellow = Signal Yellow
TypeSignalHeadGreen = Signal Green
TypeSignalHeadDark = Signal Dark
TypeSignalHeadFlashRed = Signal Flashing Red
TypeSignalHeadFlashYellow = Signal Flashing Yellow
TypeSignalHeadFlashGreen = Signal Flashing Green
TypeSignalHeadLit = Signal Lit
TypeSignalHeadHeld = Signal Held
TypeSignalMessage = Enter Name (system or user) for Signal Head (e.g. IH34)
VariableOKMessage = All state variables are OK.
VariableErrorMessage = Error found, please correct and try again.

ActionNone = None
ActionSetTurnout = Set Turnout
ActionSetSignal = Set Signal Appearance
ActionSetSignalHeld = Set Signal Held
ActionClearSignalHeld = Clear Signal Held
ActionSetSignalDark = Set Signal Dark
ActionSetSignalLit = Set Signal Lit
ActionTriggerRoute = Trigger Route
ActionSetSensor = Set Sensor
ActionDelayedSensor = Delayed Set Sensor 
ActionDelayedTurnout = Delayed Set Turnout
ActionSetLight = Set Light
ActionSetMemory = Set Memory 
ActionEnableLogix = Enable Logix
ActionDisableLogix = Disable Logix
ActionPlaySound = Play Sound File
ActionRunScript = Run Script
ActionTypeHint = Select type of action, or select None if no action is needed.

TurnoutClosed = Closed
TurnoutThrown = Thrown
SensorActive = Active
SensorInactive = Inactive
LightOn = On
LightOff = Off

AppearanceRed = Red
AppearanceYellow = Yellow
AppearanceGreen = Green
AppearanceDark = Dark
AppearanceFlashRed = Flashing Red
AppearanceFlashYellow = Flashing Yellow
AppearanceFlashGreen = Flashing Green

ErrorTitle = Error
Error1 = A Logix with this system name already exists.\nPlease change system name and try again.
Error3 = A Logix with this user name already exists.\nPlease change user name and try again.
Error5 = Cannot find a Logix with that system name.
Error6 = New user name is already in use. Cannot update this Logix.\nPlease change user name and try again.
Error8 = Invalid system name, or system name not entered.\nPlease enter a valid Logix system name (e.g. IX3) and try again.
Error10 = New user name is already in use. Cannot update this Conditional.\nPlease change user name and try again.
Error11 = At least two Conditionals are needed to reorder Conditionals.
Error13 = The name "{0}" does not match an existing turnout.\nPlease correct or create as required, and try again.
Error14 = The name "{0}" does not match an existing signal head.\nPlease correct or create as required, and try again.
Error15 = The name "{0}" does not match an existing sensor.\nPlease correct or create as required, and try again.
Error16 = The name "{0}" does not match an existing light.\nPlease correct or create as required, and try again.
Error17 = The name "{0}" does not match an existing memory.\nPlease correct or create as required, and try again.
Error18 = The name "{0}" does not match an existing route.\nPlease correct or create as required, and try again.
Error19 = Please correct or create as required, and try again. 
Error20 = The name "{0}" does not match an existing conditional.\nPlease enter a valid conditional system name, or the user name of a conditional in this logix.
Error21 = Note: If you were editing in table, click in State column and try again.
Error22 = The name "{0}" does not match an existing logix.\nPlease correct or create as required, and try again.
Error23 = Invalid entry for number of seconds to wait for Delayed Set Sensor action - {0}\nPlease enter number of seconds (digits only), and try again.
Error25 = Unreasonable or missing entry of time to wait for Delayed Set Sensor action - {0}\nPlease enter number of seconds (digits only), and try again.
Error26 = Invalid time entry "{0}"\nTime must be entered in hh:mm format (e.g. 01:30, 16:00)\nfor a 24-hour clock. Please reenter in correct format, and try again. 
Error30 = Duplicate user name error. Entered user name is already in use by Conditional "{0}".\nPlease enter a different user name from others in this table.
Error32 = Cannot edit two Logixs at the same time. Please complete edit of Logix "{0}" and try again.
Error34 = Cannot edit two Conditionals at the same time. Please complete edit of Conditional "{0}" and try again.
Error35 = Edit conditional in progress. Please complete edit of Conditional "{0}" and try again.
Error36 = Sorry, cannot add more Conditionals to this Logix;\n it has the maximum allowed.
Error37 = Sorry, cannot add more state variables to this conditional;\n it has the maximum allowed.
Error38 = Unreasonable or missing entry of time to wait for Delayed Set Turnout action - {0}\nPlease enter number of seconds (digits only), and try again.
Error39 = Invalid entry for number of seconds to wait for Delayed Set Turnout action - {0}\nPlease enter number of seconds (digits only), and try again.

WarnTitle = Warning
ButtonDisabled = Continue Disabled
ButtonEnabled = Continue Enabled
Logix = Logix
Warn1 = The last Conditional has been deleted from this Logix.
Warn2 = A Logix must have at least one Conditional to do anything useful.
Warn3 = The last State Variable has been deleted from this Conditional.\nA Conditional must have at least one State Variable to do anything useful.
Warn5 = The Conditional "{0}" has no State Variables.\nA Conditional must have at least one State Variable to do anything useful.
Warn6 = Warning - A change in the {0} of {1} {2} will trigger calculation of this Logix.\nYou have Triggers Calculation checked for some occurances and unchecked for others.\nPlease uncheck all occurances if you do not want calculation to be triggered by this change.
# Warn7 is inserted as {2} in Warn6 when the item being warned about 
# is a SignalHead, or otherwise has a specific value as part of the trigger.
Warn7 = to or from {0}

Warn9 = Conditions exist that could result in a logic loop. \n The following both trigger this Logix and are changed by it:\n
Warn10 = was disabled as requested.\nPlease remember to enable it later.