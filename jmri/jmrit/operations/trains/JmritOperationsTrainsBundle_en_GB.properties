# JmritOperationsTrainsBundle_en_GB.properties
#
# Revision $Revision: 1.19 $
#
# Default properties for the jmri.jmrit.operations.trains

TitleModifyTrains	= Modify Trains by Wagon Type
MenuItemShowCarTypes = Show Wagon Types Serviced

North				= Up
South				= Down

CarMoves			= Train will work {0} wagons  
TypesCar			= Select wagon types serviced by this train
RoadsTrain			= Select railways serviced by this train
Caboose				= Brake van
Engine				= Locomotive
Engines				= Locomotives
Road				= Railway
AddRoad				= Add Railway
DeleteRoad			= Delete Railway

Cars				= Wagons
cars				= wagons
ChangeCaboose		= Break van change
KeepCaboose			= Keep break van

# tool tips

SaveBuildsTip		= Save Train, Wagon, Locomotive and Location Files
RoadEngineTip		= Optionally select locomotive railway name
RoadCabooseTip		= Optionally select railway name for brake van or FRED
TipTrainCarType		= Select this train if it services wagon type {0}

# manifest messages

feet				= meters
tons				= tons

# build failure messages

buildErrorCars		= Not enough wagons ({0}) at departure ({1}) to build train ({2})
buildErrorNumReq	= The number of requested wagons ({0}) for train ({1}) is greater than the number available ({2})
buildErrorNotAll	= ERROR not all wagons or locomotives in staging can be serviced by this train, {0} wagons or locomotives can not be serviced
buildErrorCarNotPartRoute = Wagon ({0}) departing staging with destination that is not part of this train''s route
buildErrorCarStageDest = Wagon ({0}) departing staging with a destination that can not be serviced
buildErrorCaboose	= ERROR terminate location will not accept brake van or wagon with FRED

# build messages level 1

buildRouteRequest	= Route ({0}) requests {1} wagons and {2} moves
buildStagingHas		= Staging track ({0}) has {1} locomotive(s) and {2} wagons
buildFoundCars	 	= Found {0} wagons for train ({1})
buildFoundCaboose 	= Found brake van ({0}) that matches locomotive railway
buildTrainReqCaboose = Train ({0}) requires break van, railway ({1}) departing ({2}) destination ({3})

buildStatusMsg		= {0} {1}/{2} wagons at location ({3}) assigned to train ({4})

buildStagingDepartCarType = Staging track ({0}) has a wagon ({1}) type ({2}) that is not serviced by train ({3})
buildStagingDepartCarRoad = Staging track ({0}) has a wagon ({1}) railway ({2}) that is not serviced by train ({3})
buildStagingDepartCarOwner = Staging track ({0}) has a wagon ({1}) owner ({2}) that is not serviced by train ({3})
buildStagingDepartCarBuilt = Staging track ({0}) has a wagon ({1}) built ({2}) that is not serviced by train ({3})

# build messages level 3

buildTrain					= Requested wagons ({0}) for train ({1}) the number available ({2}) building train!

buildCarsAlreadyAssigned	= Wagons on staging track ({0}) are already assigned to a train

buildExcludeCarLocation		= Exclude wagon ({0}) type ({1}) at location ({2})
buildExcludeCarWrongRoad	= Exclude wagon ({0}) type ({1}) wrong railway ({2})
buildExcludeCarWrongLoc		= Exclude wagon ({0}) type ({1}) wrong location ({2})
buildExcludeCarTypeAtLoc	= Exclude wagon ({0}) type ({1}) at location ({2})
buildExcludeCarAtLoc		= Exclude wagon ({0}) at location ({1})
buildExcludeCarWrongDest	= Exclude wagon ({0}) type ({1}) wrong destination ({2})
buildExcludeCarDropByTrain	= Exclude wagon ({0}) previously dropped by this train at interchange ({1})
buildExcludeCarByTrain		= Exclude wagon ({0}) by train, can not pickup this wagon at interchange ({1})
buildExcludeCarByRoute		= Exclude wagon ({0}) by route, can not pickup this wagon at interchange ({1})
buildStagingCarAtLoc		= Staging wagon ({0}) at location ({1})
buildCarAlreadyAssigned		= Wagon ({0}) already assigned to this train
buildCarHasAssignedDest		= Wagon ({0}) has assigned destination ({1})
buildExcludeCarDestNotPartRoute	= Exclude wagon ({0}) destination ({1}) not part of this train''s route ({2})
buildCarDoesNotHaveDest		= Wagon ({0}) does not have a valid destination track
buildCarAssignedToStaging	= Wagon ({0}) assigned to staging track ({1})
buildCanNotDropCarBecause	= Can''t drop wagon ({0}) to track ({1}) due to {2}
buildCanNotDropCar			= Wagon ({0}) can not be delivered to ({1}) stop {2}
buildCarCanDropMoves		= Wagon ({0}) can drop to ({1}) with {2}/{3} moves
buildCarPartOfKernel		= Wagon ({0}) is part of kernel ({1}) with {2} wagons
buildCarAssignedDest		= Wagon ({0}) assigned destination ({1})

# build messages level 5

buildFindDestinationForCar	= Find destinations for wagon ({0}) at location ({1})
buildCarAtLocWithMoves		= Wagon ({0}) location ({1}) {2} moves, priority {3}
buildCarPartOfKernel		= Wagon ({0}) is part of kernel ({1})
buildCarIsCaboose			= Wagon ({0}) is a break van, railway ({1})
buildCarHasFRED				= Wagon ({0}) has a FRED, railway ({1})
buildCouldNotFindDestForCar	= Could not find a valid destination for wagon ({0}) at location ({1})
buildNoDestForCar			= Could not find a destination for wagon ({0})
buildTrainServicesCarTypes	= Train ({0}) services wagon types:
buildNoAvailableDestinations = No available destinations for any wagon
buildExcludeCarLoadAtLoc	= Exclude wagon ({0}) load ({1}) at location ({2})
buildExcludeCarOwnerAtLoc	= Exclude wagon ({0}) owner ({1}) at location ({2})
buildExcludeCarBuiltAtLoc	= Exclude wagon ({0}) built ({1}) at location ({2})
buildCarRoutingBegins		= Wagon ({0}) has next destination ({1}), routing begins
buildCanNotPickupCarLength	= Can''t pick up wagon ({0}) length ({1}) using this route,
buildStagingTrackOccupied 	= Staging track ({0}) is occupied, found {1} locomotive(s) and {2} wagons
buildAddingScheduleLoad		= "Adding schedule load ({0}) to wagon ({1})
buildCanNotDropCarInterchange = Can''t drop wagon ({0}) by train to interchange ({1})
buildCanNotDropCarRoute 	= Can''t drop wagon ({0}) by route to interchange ({1})
buildOnlyFirst500Cars		= ************* Only the first 500 wagons are shown *************

buildSetFinalDestination 	= Wagon ({0}) has load ({1}) final destination ({2}, {3})
buildCreateNewLoadForCar	= Wagon ({0}) new load ({1}) final destination ({2}, {3})

# build messages level 7
buildTrainNoCaboose			= Train does not require break van
buildTrainNoFred			= Train does not require wagon with FRED
buildNotAbleToSetDestination = Not able to set destination for wagon ({0}) due to {1}
buildTrainNoCabooseOrFred	= Train does not require break van or wagon with FRED
buildRemoveRemainingCabooses = Remove remaining break vans
buildNoteCaboose			= NOTE! To make a wagon a break van you must select the break van check box in Edit Wagon
buildRemoveCars				= Remove wagons not serviced by this train
buildCanNotDropCarSameTrack = Can''t drop wagon ({0}) to same track ({1})
buildCarLocEqualDestination	= Wagon ({0}) location is equal to destination ({1}), skipping this destination
buildCanNotDropCarLoad		= Can''t drop wagon ({0}) load ({1}) to track ({2}) due to {3}
buildCanNotDropLocation		= Can''t drop wagon ({0}) type ({1}) to destination ({2})
buildSearchTrackNewLoad		= Generate new load for wagon ({0}) type ({1}) load ({2})


NoCarPickUps		= No wagon pickups for this train at this location
NoCarDrops			=No wagon drops for this train at this location