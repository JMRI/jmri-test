# JmritOperationsTrainsBundle.properties
#
# Revision $Revision: 1.20 $
#
# Default properties for the jmri.jmrit.operations.trains

TitleTrainsTable   	= Trains
TitleTrainEdit 		= Edit Train
TitleTrainAdd 		= Add Train
TitleSwitchLists 	= Switch Lists by Location

MenuItemPrint = Print
MenuItemPreview = Preview

PromptQuitWindowNotWritten = Modified operation files not written!
PromptSaveQuit = Save and Continue Quitting 

Add					= Add
Copy				= Copy
Delete				= Delete
Edit				= Edit
Find				= Find
Save				= Save

Comment				= Comment
Id					= Id
Name				= Name
Used				= Used
Time				= Time


North				= North
South				= South
East				= East
West				= West
Clear				= Clear all
Select				= Select all

AddTrain			= Add Train to Roster
DeleteTrain			= Delete Train 
SaveTrain			= Save Train
ClearCars			= Reset Train

Train				= Train Direction
Build				= Build
Print				= Print
Move				= Move
BuildReport         = Build Reports
PrintPreview		= Preview Manifests
PreviewSwitchLists	= Preview Switch Lists
SwitchLists			= Switch Lists
PrintSwitchLists	= Print Switch Lists
Description			= Description
DepartTime			= Departure Time (hh:mm)
Departs				= Departs
Terminates			= Terminates
Current 			= Current
Status				= Status
Route				= Route
Road				= Road
Type 				= Type
Model 				= Model
SelectRoute			= Select Route
CarMoves			= Train will work {0} cars  
Stops				= This train services the following locations
TypesCar			= Select car types serviced by this train
TypesEngine			= Select engine types serviced by this train
RoadsTrain			= Select car roads serviced by this train
PreviewPrintSwitchLists = Preview or Print Switch Lists
Auto				= Auto 
Caboose				= Caboose
Engine				= Engine
Engines				= Engines
FRED				= FRED
None				= None
TrainRequires		= Train Requires
deleteTrain			= Delete train?
deleteMsg			= Do you really want to delete train {0}?
AddRoad				= Add Road
DeleteRoad			= Delete Road

SaveBuilds			= Save Builds

All					= All
Include				= Include
Exclude				= Exclude

Building			= Building
Built				= Built
BuildFailed			= Build Failed
Cars				= Cars
cars				= cars
Drop				= Drop
TrainReset			= Train reset
Partial				= Partial
Terminated			= Terminated
Terminate			= Terminate
Minimal				= Minimal
Normal				= Normal
Detailed			= Detailed

moves				= moves
SortBy				= Sort by

# messages

AutoEngines			= Auto Engines will estimate the number of engines needed

# error messages

TrainNameLess26		= Train name must be less than 26 characters
CanNotAdd			= Can not add train!
TrainNameExists		= Train with this name already exists
CanNot				= Can not {0} train!
save				= save
add					= add
BuildSelected		= Build Selected Trains
PrintSelected		= Print Manifests for Selected Trains
TerminateSelected	= Terminate Selected Trains
SaveBuildsTip		= Save Train, Car, Engine and Location Files
ModelEngineTip		= Optionally select engine model
RoadEngineTip		= Optionally select engine road name
RoadCabooseTip		= Optionally select road name for caboose or FRED

# manifest messages

ManifestForTrain	= Manifest for train
Valid				= Valid {0}
assignedToThisTrain	= assigned to this train
PickupEngineAt 		= Pickup engine(s) at
ScheduledWorkIn		= Scheduled work in
TrainDeparts 		= Train departs
boundWith			= bound with
feet				= feet
tons				= tons
DropEngineTo 		= Drop engine(s) to
TrainTerminatesIn	= Train terminates in
Pickup				= Pickup
Hazardous			= Hazardous
from				= from
to					= to
departureTime		= departure time
estimatedArrival	= estimated arrival time
			
# build messages


# build failure messages

buildFailureReport	= Train Build Failure Report {0}
buildErrorMsg		= Can not build train ({0}) {1}
buildFailedMsg		= Build failed for train ({0})
buildErrorRoute		= ERROR Can not build train ({0}), needs a route
buildErrorNeedRoute	= ERROR Route needs at least one location to build train ({0})
buildErrorNeedDepLoc = ERROR Route departure location missing for train ({0})
buildErrorNeedTermLoc = ERROR Route terminate location missing for train ({0})
buildErrorCars		= Not enough cars ({0}) at departure ({1}) to build train ({2})
buildErrorLocMissing = ERROR location missing in route ({0})
buildErrorStagingFull = All staging tracks at {0} are full or reserved
buildErrorStagingReq = Could not meet train requirements from staging ({0})
buildErrorEngines	= Could not get the required engines for this train
buildErrorNumReq	= The number of requested cars ({0}) for train ({1}) is greater than the number available ({2})
buildErrorNotAll	= ERROR not all cars or engines in staging can be serviced by this train, {0} cars or engines can not be serviced
buildErrorCarNotPartRoute = Car ({0}) departing staging with destination that is not part of this train''s route
buildErrorCarStageDest = Car ({0}) departing staging with a destination that can not be serviced
buildErrorRequirements	= Train ({0}) requires {1}, can''t meet requirements at departure ({2}) and/or termination ({3})
buildErrorRouteLoc		= Route ({0}) missing location ({1})
buildErrorCarDest	= Could not find a destination for car ({0}) at location ({1})
buildErrorCarNoLoc 	= ERROR Exclude car ({0}) at location ({1}, {2}) track missing

# build messages level 1

BuildReportMsg 		= Build Report for train ({0}) built on {1}
buildLocStaging		= Location ({0}) has only staging tracks
buildRouteRequest	= Route ({0}) requests {1} cars and {2} moves
buildTerminateStaging = Train terminates into staging at {0}, there are {1} tracks
buildStagingAvail	= Track {0} is available at {1}
buildDepartStaging	= Train will depart staging, there are {0} tracks
buildStagingHas		= Staging track ({0}) has {1} engines and {2} cars
buildTrainRequires	= Train ({0}) requires {1}
buildFoundCars	 	= Found {0} cars for train ({1})
buildFoundCaboose 	= Found caboose ({0}) that matches engine road
buildLocSkipped		= Location ({0}) is skipped by train ({1})
buildLocNoPickups	= Route ({0}) does not allow pickups at location ({1})
buildStatusMsg		= {0} {1}/{2} cars at location ({3}) assigned to train ({4})
Success				= Success
buildTrainReqEngine = Train requires {0} engine(s) model ({1}) road ({2})
buildNoDestEngine 	= Could not find valid destination for engine ({0}) at ({1}) for train ({2})
buildEngineAssigned	= Engine ({0}) assigned destination ({1}, {2})
buildCouldNotFindEng = Could not get the proper engines at departure location
buildAutoBuildMsg	= Auto engines calculates that {0} engines are required for this train

# switch list messages

SwitchListFor 		= Switch List for {0}
VisitNumber			= Visit number {0}
ScheduledWork		= Scheduled work for Train ({0}) {1}
expectedArrival		= expected arrival {0}
DepartedExpected	= Departed {0}, expect to arrive in {1}
DepartsAt			= Departs {0} at {1} {2}
NoCarPickUps		= No car pickups for this train at this location
NoCarDrops			= No car drops for this train at this location
