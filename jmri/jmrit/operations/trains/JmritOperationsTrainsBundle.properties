# JmritOperationsTrainsBundle.properties
#
# Revision $Revision: 1.90 $
#
# Default properties for the jmri.jmrit.operations.trains

TitleTrainsTable   	= Trains
TitleTrainEdit 		= Edit Train
TitleTrainAdd 		= Add Train
TitleSwitchLists 	= Switch Lists by Location
TitleTrain			= Train {0}
TitleModifyTrains	= Modify Trains by Car Type
TitlePrintOptions	= Print Options
TitleTimeTableTrains	= Timetable
TitleOptions		= Build Options
TitleTrainsByType	= Trains by Car Types

MenuItemOptions			= Options
MenuItemBuildOptions 	= Train Build Options
MenuItemScripts			= Scripts
MenuItemPrint 			= Print
MenuItemPreview 		= Preview
MenuItemPrintManifest 	= Print Manifest
MenuItemPreviewManifest = Preview Manifest
MenuItemPrintBuildReport = Print Build Report
MenuItemPreviewBuildReport = Preview Build Report
MenuItemShowCarTypes 	= Show Car Types Serviced
MenuItemPrintByType		= Print Trains by Car Types
MenuItemPreviewByType	= Preview Trains by Car Types
MenuItemEditSchedule 	= Edit Timetable

BorderLayoutRailRoadName = Optional Railroad Name for this Train
BorderLayoutLogo		= Optional Logo for this Train 
AddLogo				= Add Logo
RemoveLogo			= Remove Logo

PromptQuitWindowNotWritten = Modified operation files not written!
PromptSaveQuit = Save and Continue Quitting 

Add					= Add
Copy				= Copy
Delete				= Delete
Edit				= Edit
Find				= Find
Save				= Save
Tools				= Tools
Apply				= Apply
Replace				= Replace

Comment				= Comment
Id					= Id
Name				= Name
Used				= Used
Time				= Time

North				= North
South				= South
East				= East
West				= West
Clear				= Clear all
Select				= Select all

AddTrain			= Add Train
DeleteTrain			= Delete Train 
SaveTrain			= Save Train
ClearCars			= Reset Train

Build				= Build
Print				= Print
Preview				= Preview
Move				= Move
Report				= Report
BuildMessages		= Messages
BuildReport         = Build Reports
PrintPreview		= Preview Manifests
ShowAllTrains		= Show All
PreviewSwitchLists	= Preview Switch Lists
SwitchList			= Switch List
SwitchLists			= Switch Lists
PrintSwitchLists	= Print Switch Lists
PrintChanges		= Print Switch Lists Changes
Description			= Description
DepartTime			= Departure Time (hh:mm)
Departs				= Departs
Terminates			= Terminates
Current 			= Current
Status				= Status
Route				= Route
Road				= Road
Type 				= Type
Model 				= Model
SelectRoute			= Select Route
CarMoves			= Train will work {0} cars  
Stops				= This train services the following locations
TypesCar			= Select car types serviced by this train
TypesEngine			= Select engine types serviced by this train
RoadsTrain			= Select roads serviced by this train
OwnersTrain			= Select owners serviced by this train
LoadsTrain			= Select loads serviced by this train
BuiltTrain			= Select built dates serviced by this train
ScriptsBeforeBuild	= Run the following scripts before building this train
ScriptsWhenTerminated = Run the following scripts when this train terminates
ScriptsWhenMoved 	= Run the following scripts when this train is moved
ScriptsStartUp 		= Run the following scripts at startup
ScriptsShutDown 	= Run the following scripts at shutdown
PreviewPrintSwitchLists = Preview or Print Switch Lists
Auto				= Auto
Caboose				= Caboose
Engine				= Engine
Engines				= Engines
FRED				= FRED
None				= None
TrainRequires		= Optional train requirements
deleteTrain			= Delete train?
deleteMsg			= Do you really want to delete train {0}?
AddRoad				= Add Road
DeleteRoad			= Delete Road
AddLoad				= Add Load
DeleteLoad			= Delete Load
DeleteAllLoads		= Delete All
AddOwner			= Add Owner
DeleteOwner			= Delete Owner
After				= After
Before				= Before
AcceptAll			= Accept all
AcceptOnly			= Accept only
Range				= Range
AddScript			= Add Script
RemoveScript		= Remove Script
RunScripts			= Run Scripts
EngineChange		= Engine change
HelperService		= Helper service
ChangeEnginesAt		= at
DropEnginesAt		= Remove helpers at
ChangeCaboose		= Caboose change
KeepCaboose			= Keep caboose
AddHelpers			= Add helper engines


SaveBuilds			= Save Builds

All					= All
Include				= Include
Exclude				= Exclude

Building			= Building
Built				= Built
BuildFailed			= Build Failed
Cars				= Cars
cars				= cars
Drop				= Drop
TrainReset			= Train reset
TrainInRoute		= In route
Partial				= Partial
Terminated			= Terminated
Terminate			= Terminate
Minimal				= Minimal
Normal				= Normal
Detailed			= Detailed
Trains				= Trains
Action				= Action

moves				= moves
SortBy				= Sort by

# Train schedules
Monday 				= Monday
Tuesday				= Tuesday
Wednesday			= Wednesday
Thursday			= Thursday
Friday				= Friday
Saturday			= Saturday
Sunday				= Sunday

# Show car types serviced messages

OK					= OK
X(TrainBuilt)		= X (Train Built)
X(TrainLoad)		= X (Train Load)
X(TrainOwner)		= X (Train Owner)
X(TrainRoad)		= X (Train Road)
X(TrainType)		= X (Train Type)
X(TrainLoad)		= X (Train Load)
X(TrainSkips)		= X (Train Skips)
X(Route)			= X (Route)
X(RouteMoves)		= X (Route Moves)
X(LocationType)		= X (Location Type)
X(TrackRoad)		= X (Track Road)
X(TrackType)		= X (Track Type)
X(TrackLoad)		= X (Track Load)
X(DirLoc)			= X (Dir Loc)
X(DirTrk)			= X (Dir Track)
X(TrainPickup)		= X (Train Pickup)
X(TrainDrop)		= X (Train Drop)
DropOnly			= Drop Only
PickupOnly			= Pickup Only

# print manifest and build report dialogue messages
print								= print
preview								= preview
PrintPreviousManifest				= {0} previous manifest?
DoYouWantToPrintPreviousManifest 	= Do you want to {0} the previous manifest for Train ({1})?
CanNotPrintManifest					= Can not print manifest!
NeedToBuildTrainBeforePrinting		= Need to build train ({0}) before printing!
PrintPreviousBuildReport			= {0} previous build report?
DoYouWantToPrintPreviousBuildReport	= Do you want to {0} the previous build report for Train ({1})?
CanNotPrintBuildReport				= Can not print build report!

# messages

AutoEngines			= Auto Engines will estimate the number of engines needed

# error messages

TrainNameLess26		= Train name must be less than 26 characters
TrainNameResChar	= Train name must not contain reserved characters
ReservedChar		= . < > : " / \\ | ? *
CanNotAdd			= Can not add train!
TrainNameExists		= Train with this name already exists
MustEnterName		= Enter a name for the train
CanNot				= Can not {0} train!
save				= save
add					= add
TrainModelService	= Train does not service engine model ({0}) engine type ({1})
Error				= Error



# Tool tips
BuildSelectedTip	= Build selected trains
PrintSelectedTip	= Print manifests for selected trains
PreviewSelectedTip	= Preview manifests for selected trains
TerminateSelectedTip	= Terminate selected trains
SaveBuildsTip		= Save train, car, engine and location files
BuildMessagesTip 	= When selected, show a message when a problem occurs
BuildReportPrintTip	= When selected, print the build report for a train
BuildReportPreviewTip	= When selected, preview the build report for a train
ShowAllTrainsTip	= When selected show all trains, unselected only show trains to build
PreviewTip 			= When selected, preview the manifest and build reports for a train
MoveTip				= When selected, show Move button for train
TerminateTip		= When selected, show Terminate button for train
ModelEngineTip		= Optionally select engine model
RoadEngineTip		= Optionally select engine road name
RoadCabooseTip		= Optionally select road name for caboose or FRED
EnterYearTip		= Enter the year, use 4 digits
TipTrainCarType		= Select this train if it services car type {0}
TipCopyCarType		= First select the car type you want to copy, then select Copy, then the car type you want to copy to, then Save
TipTrainReset		= Remove rolling stock assigned to this train
AddLogoToolTip		= Add a logo to this train's manifest
RemoveLogoToolTip	= Remove logo from this train's manifest
ApplyButtonTip		= Select one of the schedule radio buttons before pressing

# manifest messages

ManifestForTrain	= Manifest for train
Valid				= Valid {0}
assignedToThisTrain	= assigned to this train
PickupEngineAt 		= Pickup engine at
PickupEnginesAt 	= Pickup engines at
ScheduledWorkIn		= Scheduled work in
NoScheduledWorkAt	= No work at {0}
TrainDeparts 		= Train departs
boundWith			= bound with
feet				= feet
tons				= tons
DropEngineTo 		= Drop engine to
DropEnginesTo 		= Drop engines to
TrainTerminatesIn	= Train terminates in
Pickup				= Pickup
Hazardous			= Hazardous
from				= from
to					= to
departureTime		= departure time
estimatedArrival	= estimated arrival time
destination			= destination
dest				= ->
Empties				= Empties
Loads				= Loads
AddHelpersAt		= Add helpers at {0}
RemoveHelpersAt		= Remove helpers at {0}
EngineChangeAt		= Engine change at {0}
EngineAndCabooseChangeAt = Engine and caboose change at {0}

# Switch Lists
Location			= Location
Printer				= Printer
			
# build messages
buildReport			= Train Build Report {0}

# build failure messages

buildFailureReport	= Train Build Failure Report {0}
buildErrorMsg		= Can not build train ({0}) {1}
buildFailedMsg		= Build failed for train ({0})
buildErrorRoute		= ERROR Can not build train ({0}), needs a route
buildErrorNeedRoute	= ERROR Route needs at least one location to build train ({0})
buildErrorNeedDepLoc = ERROR Route departure location missing for train ({0})
buildErrorNeedTermLoc = ERROR Route terminate location missing for train ({0})
buildErrorCars		= Not enough cars ({0}) at departure ({1}) to build train ({2})
buildErrorLocMissing = ERROR location missing in route ({0})
buildErrorStagingFullNote = Note that the program requires a staging track for each train!
buildErrorStagingFull = All staging tracks at {0} are full, reserved, or can not service the train.
buildErrorStagingReq = Could not meet train requirements from staging ({0})
buildErrorEngines	= Train requires {0} engine(s), could not pick up at departure ({1}) or drop at ({2})
buildErrorNumReq	= The number of requested cars ({0}) for train ({1}) is greater than the number available ({2})
buildErrorNotAll	= ERROR not all cars or engines in staging can be serviced by this train, {0} cars or engines can not be serviced
buildErrorCarNotPartRoute = Car ({0}) departing staging with destination that is not part of this train''s route
buildErrorCarStageDest = Car ({0}) departing staging without a destination
buildErrorRequirements	= Train ({0}) requires {1}, can''t meet requirements at departure ({2}) and/or termination ({3})
buildErrorRouteLoc		= Route ({0}) missing location ({1})
buildErrorRsNoLoc 	= ERROR Exclude rs ({0}) at location ({1}) no track assignment
buildErrorCaboose	= ERROR terminate location will not accept Caboose or car with FRED
buildErrorNoSchedule = ERROR Can''t find schedule ({0}) for track ({1}) at location ({2}) 
buildErrorNoScheduleItem = ERROR Can''t find schedule item ({0}) for schedule ({1}) for track ({2}) at location ({3})

# build messages level 1

BuildReportMsg 		= Build Report for train ({0}) built on {1}
BuildReportVersion	= JMRI version {0}
buildLocStaging		= Location ({0}) has only staging tracks
buildRouteRequest	= Route ({0}) requests {1} cars and {2} moves
buildTerminateStaging = Train terminates into staging at ({0}), there are {1} tracks
buildStagingAvail	= Staging track ({0}) is available at destination ({1})
buildDepartStaging	= Train will depart staging ({0}), there are {1} tracks
buildStagingHas		= Staging track ({0}), it has {1} engine(s) and {2} cars
buildTrainRequires	= Train ({0}) requires {1}
buildTrainReqFred	= Train ({0}) requires car with FRED, road ({1}) departing ({2}) destination ({3})
buildTrainReqCaboose = Train ({0}) requires caboose, road ({1}) departing ({2}) destination ({3})
buildFoundCars	 	= Found {0} cars for train ({1})
buildFoundCaboose 	= Found caboose ({0}) that matches engine road
buildLocSkipped		= Location ({0}) is skipped by train ({1})
buildLocNoPickups	= Route ({0}) does not allow pickups at location ({1})
buildLocDirection	= Location ({0}) can not be serviced by {1}bound train
buildStatusMsg		= {0} {1}/{2} cars at location ({3}) assigned to train ({4})
Success				= Success
buildTrainReq0Engine = Train does not require any engines
buildTrainReq1Engine = Train requires a single engine, model ({0}) road ({1})
buildTrainReqEngine = Train requires {0} consisted engines, model ({1}) road ({2})
buildNoDestEngine 	= Could not find valid destination for engine ({0}) at ({1}) for train ({2})
buildEngineAssigned	= Engine ({0}) assigned destination ({1}, {2})
buildCouldNotFindEng = Could not get the proper engines at departure location
buildAutoBuildMsg	= Auto engines calculates that {0} engines are required for this train
buildStagingDepart  = Staging track ({0}) is already assigned to train ({1})
buildStagingDepartCarType = Staging track ({0}) has a car ({1}) type ({2}) that is not serviced by train ({3})
buildStagingDepartCarRoad = Staging track ({0}) has a car ({1}) road ({2}) that is not serviced by train ({3})
buildStagingDepartCarOwner = Staging track ({0}) has a car ({1}) owner ({2}) that is not serviced by train ({3})
buildStagingDepartCarBuilt = Staging track ({0}) has a car ({1}) built ({2}) that is not serviced by train ({3})
buildStagingDepartCarDestination = Staging track ({0}) has a car ({1}) destination ({2}) that can not be serviced by train ({3})
buildStagingDepartEngineType = Staging track ({0}) has an engine ({1}) type ({2}) that is not serviced by train ({3})
buildStagingDepartEngineRoad = Staging track ({0}) has an engine ({1}) road ({2}) that is not serviced by train ({3})
buildStagingDepartEngineOwner = Staging track ({0}) has an engine ({1}) owner ({2}) that is not serviced by train ({3})
buildStagingDepartEngineBuilt = Staging track ({0}) has an engine ({1}) built ({2}) that is not serviced by train ({3})
buildStagingDepartEngineModel = Staging track ({0}) has an engine ({1}) model ({2}) that is not serviced by train ({3})
buildTrainEngineChange	= Train requires engine change at {0}, {1} engine(s), model ({2}) road ({3})
buildTrainHelperEngines = Train requests {0} helpers from {1} to {2}, model ({3}) road ({4})

# build messages level 3

buildLocNoDropsOrPickups	= Location ({0}) does not allow drops or pickups
buildLocRequestMoves 		= Location ({0}) requests {1} moves
buildStagingNotDirection	= Staging track ({0}) does not service this train''s direction
buildStagingNotTrain		= Staging track ({0}) does not service this train
buildTrain					= Requested cars ({0}) for train ({1}) the number available ({2}) building train!
buildStagingNotEngines		= Staging track ({0}) does not have the required number of engines
buildExcludeEngineType		= Exclude engine ({0}) type ({1}) is not serviced by this train
buildExcludeEngineModel		= Exclude engine ({0}) model ({1}) is not serviced by this train
buildExcludeEngineRoad		= Exclude engine ({0}) road ({1}) is not serviced by this train
buildExcludeEngineOwner		= Exclude engine ({0}) owner ({1}) is not serviced by this train
buildExcludeEngineBuilt		= Exclude engine ({0}) built ({1}) is not serviced by this train
buildExcludeEngineDestination = Exclude engine ({0}) it has an assigned destination ({1})
buildExcludeEngineDepart	= Exclude engine ({0}) not on departure track
buildExcludeEngineSingle	= Exclude single engine ({0}) train requires {1} engines
buildEnginePartConsist		= Engine ({0}) is part of consist ({1}) and has {2} engines
buildEngineLeadConsist		= Engine ({0}) is lead engine for consist ({1}) and has {2} engines
buildExcludeEngineConsist	= Exclude consist ({0}) wrong number of engines
buildStagingTrackAssigned	= Staging track ({0}) is already assigned to a train
buildCarsAlreadyAssigned	= Cars on staging track ({0}) are already assigned to a train
buildExcludeEngConsistNumber = Exclude engine ({0}) consist ({1}) wrong number of engines ({2})
buildMaximumNumberEngines	= The maximum number of engines that can be assigned is {0}
buildFoundConsists			= Found {0} consist(s) for this train
buildFoundEngines			= Found {0} engine(s) for this train

buildExcludeCarWrongRoad	= Exclude car ({0}) type ({1}) wrong road ({2})
buildExcludeCarWrongLoc		= Exclude car ({0}) type ({1}) wrong location ({2})
buildExcludeCarTypeAtLoc	= Exclude car ({0}) type ({1}) at location ({2})
buildExcludeCarAtLoc		= Exclude car ({0}) at location ({1})
buildExcludeCarWrongDest	= Exclude car ({0}) type ({1}) wrong destination ({2}) for this train
buildCarNoDestination		= Could not find a destination for ({0})
buildExcludeCarDropByTrain	= Exclude car ({0}) previously dropped by this train at interchange ({1})
buildExcludeCarByTrain		= Exclude car ({0}) by train, no pickup at interchange ({1})
buildExcludeCarByRoute		= Exclude car ({0}) by route, no pickup at interchange ({1})
buildStagingCarAtLoc		= Staging car ({0}) at location ({1})
buildCarAlreadyAssigned		= Car ({0}) already assigned to this train
buildCarHasAssignedDest		= Car ({0}) has assigned destination ({1})
buildExcludeCarDestNotPartRoute	= Exclude car ({0}) destination ({1}) not part of this train''s route ({2})
buildMultiplePass			= Multiple pass build, find destinations for {0} percent of the available moves
buildFinalPass				= Final build pass, find destinations for the remaining available moves
buildLocReqMoves			= Location ({0}) requests {1}/{2} moves
buildRouteNoDropsStop		= Route ({0}) does not allow drops at location ({1}) stop {2}
buildCarDoesNotHaveDest		= Car ({0}) does not have a valid destination track
buildCarAssignedToStaging	= Car ({0}) assigned to staging track ({1})
buildCanNotDropCarBecause	= Can''t drop ({0}) to track ({1}) due to {2}
buildCanNotDropCar			= Car ({0}) can not be delivered to ({1}) stop {2}
buildNoAvailableMovesStop	= No available moves for destination ({0}) stop {1}
buildCarCanDropMoves		= Car ({0}) can drop to ({1}) with {2}/{3} moves
buildCarPartOfKernel		= Car ({0}) is part of kernel ({1}) with {2} cars
buildCarAssignedDest		= Car ({0}) assigned destination ({1})
buildRsNoTrackAssignment	= Rolling stock ({0}) does not have a track assignment
buildExcludeCarLocUnknown	= Exclude car ({0}) current location is unknown
buildExcludeCarOutOfService	= Exclude car ({0}) out of service
buildExcludeEngineOutOfService = Exclude engine ({0}) out of service
buildExcludeCarWait			= Exclude car ({0}) type ({1}) at location ({2}) wait ({3})
buildCarHasSecond			= Car ({0}) can be picked up later from location ({1})
buildCarDestinationStaging	= Car ({0}) has staging destination ({1}, {2}) wrong track
buildDepartStagingAggressive = Departing staging in aggressive mode, find destinations in final pass

# build messages level 5

buildFindDestinationForCar	= Find destinations for car ({0}) at location ({1})
buildCarAtLocWithMoves		= Car ({0}) location ({1}) {2} moves, priority {3}
buildCarPartOfKernel		= Car ({0}) is part of kernel ({1})
buildCarIsCaboose			= Car ({0}) is a caboose, road ({1}) at location ({2})
buildCarHasFRED				= Car ({0}) has a FRED, road ({1}) at location ({2})
buildCouldNotFindDestForCar	= Could not find a destination for ({0}) at location ({1})
buildNoDestForCar			= Could not find a destination for car ({0})
buildEngineRoadModelType	= Engine ({0}) road ({1}) model ({2}) type ({3})
buildTrainServicesEngineTypes = Train ({0}) services engine types:
buildTrainServicesCarTypes	= Train ({0}) services car types:
buildNoAvailableDestinations = No available destinations for any car
buildCanNotDropEngineToTrack = Can''t drop engine ({0}) to track ({1}) due to {2}
buildExcludeCarLoadAtLoc	= Exclude car ({0}) load ({1}) at location ({2})
buildExcludeCarOwnerAtLoc	= Exclude car ({0}) owner ({1}) at location ({2})
buildExcludeCarBuiltAtLoc	= Exclude car ({0}) built ({1}) at location ({2})
buildExcludeCabooseAtLoc	= Exclude caboose ({0}) type ({1}) at location ({2})
buildExcludeCarWithFredAtLoc = Exclude car with FRED ({0}) type ({1}) at location ({2})
buildCarRoutingBegins		= Car ({0}) has next destination ({1}), routing begins
buildCanNotPickupCarLength	= Can''t pick up car ({0}) length ({1}) using this route,
buildCanNotPickupCarLength2 = it would exceed train''s maximum length ({0}) when departing ({1})
buildDestinationDoesNotService	= Destination ({0}) does not service {1}bound trains
buildCanNotDropRsUsingTrain = Can''t drop rolling stock ({0}) using {1}bound train,
buildCanNotDropRsUsingTrain2 = destination track ({0}) does not service this direction
buildCanNotDropRsUsingTrain3 = destination ({0}) does not service this direction
buildStagingTrackOccupied 	= Staging track ({0}) is occupied, found {1} engine(s) and {2} cars
buildStagingTrackReserved	= Staging track ({0}) is reserved, drop count: {1}
buildAddingScheduleLoad		= Adding schedule load ({0}) to car ({1})
buildSidingScheduleLoad		= Siding ({0}) has schedule requesting car load ({1})
buildCanNotDropCarInterchange = Can''t drop car ({0}) by train to interchange ({1})
buildCanNotDropCarRoute 	= Can''t drop car ({0}) by route to interchange ({1})
buildOnlyFirst500Cars		= ************* Only the first 500 cars are shown *************

buildRsCanNotPickupUsingTrain = Can''t pick up rolling stock ({0}) using {1}bound train, track ({2})
buildRsCanNotPickupUsingTrain2 = at location ({0}) does not service this train''s direction
buildDestinationType		= Destination ({0}) does not accept type ({1})
buildStagingTrackType		= Staging track ({0}) does not accept type ({1})
buildStagingTrackAllRoads	= Staging track ({0}) does not accept all roads
buildStagingTrackRoad		= Staging track ({0}) does not accept road ({1})
buildRouteNoDropLocation	= Route ({0}) no drops at location ({1})
buildNoAvailableMovesDest	= No available moves for destination ({0})
buildNoSidingToSidingMove	= Local siding to siding move not allowed ({0})
buildNoYardToYardMove		= Local yard to yard move not allowed ({0})
buildNoInterchangeToInterchangeMove	= Local interchange to interchange move not allowed ({0})
buildTrainRoads				= Train ({0}) {1} roads: {2}
buildTrainLoads				= Train ({0}) {1} loads: {2}
buildTrainOwners			= Train ({0}) {1} owners: {2}
buildTrainBuiltAfter		= Train ({0}) will service rolling stock built after {1}
buildTrainBuiltBefore		= Train ({0}) will service rolling stock built before {1}

buildSetFinalDestination 	= Car ({0}) has load ({1}) final destination ({2}, {3})
buildCreateNewLoadForCar	= Car ({0}) new load ({1}) final destination ({2}, {3})
buildCanNotDropEngToDest 	= Can''t drop engine ({0}) to destination ({1})


# build messages level 7
buildNotAbleToSetDestination = Not able to set destination for car ({0}) due to {1}
buildDoneAssignEnginesStaging = Done assigning engines from staging
buildDoneAssingEnginesTrain	= Done assigning engines to train ({0})
buildBegineSearchEngines	= Search for {0} engines, model ({1}), road ({2}), departing ({3}), destination ({4})
buildAtLocation				= at location ({0}) destination ({1})
buildTrainNoCaboose			= Train does not require caboose
buildTrainNoFred			= Train does not require car with FRED
buildRemoveRemainingCabooses = Remove remaining cabooses
buildNoteCaboose			= NOTE! To make a car a caboose you must select the caboose check box in Edit Car
buildRemoveCars				= Remove cars not serviced by this train
buildCanNotDropCarSameTrack = Can''t drop car ({0}) to same track ({1})
buildSearchingLocation		= Searching location ({0}) for possible destination
buildCarLocEqualDestination	= Car ({0}) location is equal to destination ({1}) skipping this destination
buildCanNotDropCarLoad		= Can''t drop car ({0}) load ({1}) to track ({2}) due to {3}
buildCanNotDropLocation		= Can''t drop car ({0}) type ({1}) to destination ({2})
buildSearchTrackNewLoad		= Generate new load for car ({0}) type ({1}) load ({2})
buildTrainNotNewLoad		= Train ({0}) doesn''t service load ({1}) destination ({2}, {3})
buildTrackNotNewLoad		= Departure track ({0}) doesn''t service load ({1}) destination ({2}, {3})
buildNoDestTrackNewLoad		= Destination ({0}, {1}) can''t service car ({2}) with load ({3}) due to {4}
buildCanNotRouteCar			= Can''t route car ({0}) with load ({1}) to ({2}, {3})
buildUnableNewLoad			= Could not generate a new load for car ({0})
buildNoDestTrackSpace		= Car ({0}) would overload track ({1}, {2}), currently {3} in bound cars, length ({4}), {5}% loading


# switch list messages

SwitchListFor 		= Switch List for {0}
VisitNumber			= Visit number {0}
ScheduledWork		= Scheduled work for Train ({0}) {1}
expectedArrival		= expected arrival {0}
DepartedExpected	= Departed {0}, expect to arrive in {1}
DepartsAt			= Departs {0} at {1} {2}
NoCarPickUps		= No car pickups for this train at this location
NoCarDrops			= No car drops for this train at this location
