# JavaScript and Styles for Head of simple WebSocket client
HeadAdditions = \
<script type='text/javascript'> \n\
if (!window.WebSocket) \n\
	alert("WebSocket not supported by this browser"); \n\
\n\
function $() { return document.getElementById(arguments[0]); } \n\
function $F() { return document.getElementById(arguments[0]).value; } \n\
function getKeyCode(ev) { \n\
	if (window.event) \n\
		return window.event.keyCode; \n\
	return ev.keyCode; \n\
} \n\
var server = { \n\
	connect : function() { \n\
		var location = document.URL.replace('http://', \n\
			'ws://').replace('https://', 'wss://'); \n\
		$('serverURL').innerHTML = location; \n\
		this._ws = new WebSocket(location); \n\
		this._ws.onopen = this._onopen; \n\
		this._ws.onmessage = this._onmessage; \n\
		this._ws.onclose = this._onclose; \n\
	}, \n\
	_send : function(message) { \n\
		if (this._ws) \n\
			this._ws.send(message); \n\
		}, \n\
	send : function(text) { \n\
		if (text != null && text.length > 0) \n\
			server._send(text); \n\
		}, \n\
	_onmessage : function(m) { \n\
		if (m.data) { \n\
			var messageBox = $('messageBox'); \n\
			var spanText = document.createElement('span'); \n\
			spanText.className = 'text'; \n\
			spanText.innerHTML = m.data; \n\
			var lineBreak = document.createElement('br'); \n\
			messageBox.appendChild(spanText); \n\
			messageBox.appendChild(lineBreak); \n\
			messageBox.scrollTop = messageBox.scrollHeight - messageBox.clientHeight; \n\
		} \n\
	}, \n\
	_onclose : function(m) { this._ws = null; $('serverURL').innerHTML = '' }, \n\
	close : function() { server._onclose(); } \n\
}; \n\
</script> \n\
<style type='text/css'> \n\
div { border: 0px solid black; } \n\
div#messageBox { \n\
	clear: both; \n\
	width: 40em; \n\
	height: 20ex; \n\
	overflow: auto; \n\
	background-color: #f0f0f0; \n\
	padding: 4px; \n\
	border: 1px solid black; \n\
} \n\
div#input { \n\
	clear: both; \n\
	width: 40em; \n\
	padding: 4px; \n\
	background-color: #e0e0e0; \n\
	border: 1px solid black; \n\
	border-top: 0px \n\
} \n\
div.hidden { display: none;	} \n\
span.alert { font-style: italic; } \n\
input#command { \n\
	width: 30em; \n\
} \n\
</style>

# The body of a simple websocket client
BodyContent = \
<div id='mainContent'> \n\
<h1>Simple WebSockets Demonstration</h1> \n\
<div id='messageBox'></div> \n\
<div id='input'> \n\
	<input id='connect' class='button' type='submit' name='Connect' value='Connect' /> \n\
	<div id='commands' style='display:none;'> \n\
		<input id='command' class='text' type='text' /> \n\
		<input id='sendCmd' class='button' type='submit' name='Send' value='Send' /> \n\
		<div> \n\
			<span id='serverURL'></span> \n\
			<input id='disconnect' class='button' type='submit' name='Disconnect' value='Disconnect' /> \n\
		</div> \n\
	</div> \n\
</div> \n\
<script type='text/javascript'> \n\
	$('connect').onclick = function(event) { \n\
		server.connect(); \n\
		$('connect').style.display = 'none'; \n\
		$('commands').style.display = 'inline'; \n\
		return false; \n\
	}; \n\
	$('disconnect').onclick = function(event) { \n\
		server.close(); \n\
		$('connect').style.display = 'inline'; \n\
		$('commands').style.display = 'none'; \n\
		$('messageBox').innerHTML = ''; \n\
		return false; \n\
	}; \n\
	$('sendCmd').onclick = function(event) { \n\
		server.send($('command').value); \n\
		return false; \n\
	}; \n\
</script> \n\
<p>This is a demonstration of the JMRI Simple Network protocol.</p> \n\
</div>