/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jmri.profile;

import java.awt.Dimension;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ResourceBundle;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle;
import javax.swing.ListSelectionModel;
import javax.swing.WindowConstants;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author rhwood
 */
public class ProfileManagerDialog extends JDialog implements PropertyChangeListener {

    /**
     * Creates new form ProfileManagerDialog
     */
    public ProfileManagerDialog(Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listLabel = new JLabel();
        jScrollPane1 = new JScrollPane();
        profiles = new JList();
        btnSelect = new JButton();
        btnCreate = new JButton();
        btnDelete = new JButton();
        btnUseExisting = new JButton();

        setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        ResourceBundle bundle = ResourceBundle.getBundle("jmri/profile/Bundle"); // NOI18N
        setTitle(bundle.getString("ProfileManagerDialog.title")); // NOI18N
        setMinimumSize(new Dimension(310, 110));

        listLabel.setText(bundle.getString("ProfileManagerDialog.listLabel.text")); // NOI18N

        profiles.setModel(new ProfileListModel());
        profiles.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        profiles.setToolTipText(bundle.getString("ProfileManagerDialog.profiles.toolTipText")); // NOI18N
        profiles.setNextFocusableComponent(btnSelect);
        jScrollPane1.setViewportView(profiles);
        profiles.getAccessibleContext().setAccessibleName(bundle.getString("ProfileManagerDialog.profiles.AccessibleContext.accessibleName")); // NOI18N

        btnSelect.setText(bundle.getString("ProfileManagerDialog.btnSelect.text")); // NOI18N
        btnSelect.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        btnCreate.setText(bundle.getString("ProfileManagerDialog.btnCreate.text")); // NOI18N
        btnCreate.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnDelete.setText(bundle.getString("ProfileManagerDialog.btnDelete.text")); // NOI18N
        btnDelete.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUseExisting.setText(bundle.getString("ProfileManagerDialog.btnUseExisting.text")); // NOI18N
        btnUseExisting.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnUseExistingActionPerformed(evt);
            }
        });

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUseExisting)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCreate)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelect))
                    .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                    .addComponent(listLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelect)
                    .addComponent(btnCreate)
                    .addComponent(btnDelete)
                    .addComponent(btnUseExisting))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        // TODO set selected item as active and close dialog
        if (profiles.getSelectedValue() != null) {
            ProfileManager.getDefaultManager().setActiveProfile((Profile) profiles.getSelectedValue());
            dispose();
        }
    }//GEN-LAST:event_btnSelectActionPerformed

    private void btnCreateActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        AddProfileDialog apd = new AddProfileDialog(this, true);
        apd.setLocationRelativeTo(this);
        apd.setVisible(true);
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnDeleteActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO remove item from list and from ProfileManager
        // NOTE should only remove item if >1 items in list
        if (profiles.getModel().getSize() > 1) {
            ProfileManager.getDefaultManager().removeProfile((Profile) (profiles.getSelectedValue()));
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUseExistingActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnUseExistingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUseExistingActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton btnCreate;
    private JButton btnDelete;
    private JButton btnSelect;
    private JButton btnUseExisting;
    private JScrollPane jScrollPane1;
    private JLabel listLabel;
    private JList profiles;
    // End of variables declaration//GEN-END:variables

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getSource().equals(ProfileManager.getDefaultManager())) {
            // TODO: update list of Profiles
        }
    }

    private static final Logger log = LoggerFactory.getLogger(ProfileManagerDialog.class);
}
